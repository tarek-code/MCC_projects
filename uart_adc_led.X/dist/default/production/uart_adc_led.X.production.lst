

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Aug 27 05:03:02 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 21/07/2023 GMT
    49                           ; 
    50                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F46K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
    84   000000                     
    85 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
    86   000000                     
    87 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
    88   000000                     _TRISD	set	3989
    89   000000                     _TRISC	set	3988
    90   000000                     _TRISB	set	3987
    91   000000                     _LATC	set	3979
    92   000000                     _LATB	set	3978
    93   000000                     _TXREG	set	4013
    94   000000                     _RCREG	set	4014
    95   000000                     _SPBRG	set	4015
    96   000000                     _TXSTA	set	4012
    97   000000                     _ADCON0	set	4034
    98   000000                     _ADRESL	set	4035
    99                           
   100                           	psect	nvBANK0
   101   0000BA                     __pnvBANK0:
   102                           	callstack 0
   103   0000BA                     _EUSART_ErrorHandler:
   104                           	callstack 0
   105   0000BA                     	ds	2
   106   0000BC                     _EUSART_OverrunErrorHandler:
   107                           	callstack 0
   108   0000BC                     	ds	2
   109   0000BE                     _EUSART_FramingErrorHandler:
   110                           	callstack 0
   111   0000BE                     	ds	2
   112   0000C0                     _convertedValue:
   113                           	callstack 0
   114   0000C0                     	ds	2
   115   000000                     _LATD	set	3980
   116   000000                     _RCSTAbits	set	4011
   117   000000                     _TXSTAbits	set	4012
   118   000000                     _ADCON0bits	set	4034
   119   000000                     _WPUB	set	3964
   120   000000                     _ANSEL	set	3966
   121   000000                     _LATA	set	3977
   122   000000                     _LATDbits	set	3980
   123   000000                     _ADCON2	set	4032
   124   000000                     _ADCON1	set	4033
   125   000000                     _OSCCON	set	4051
   126   000000                     _ADRESH	set	4036
   127   000000                     _TRISA	set	3986
   128   000000                     _TRISE	set	3990
   129   000000                     _LATE	set	3981
   130   000000                     _OSCTUNE	set	3995
   131   000000                     _PIR1bits	set	3998
   132   000000                     _RCSTA	set	4011
   133   000000                     _BAUDCON	set	4024
   134   000000                     _SPBRGH	set	4016
   135   000000                     _INTCON2bits	set	4081
   136   000000                     _ANSELH	set	3967
   137   000000                     _INTCONbits	set	4082
   138                           
   139                           	psect	smallconst
   140   001000                     __psmallconst:
   141                           	callstack 0
   142   001000  00                 	db	0
   143   001001                     STR_1:
   144   001001  0D                 	db	13
   145   001002  0A                 	db	10
   146   001003  20                 	db	32
   147   001004  56                 	db	86	;'V'
   148   001005  6F                 	db	111	;'o'
   149   001006  6C                 	db	108	;'l'
   150   001007  74                 	db	116	;'t'
   151   001008  61                 	db	97	;'a'
   152   001009  67                 	db	103	;'g'
   153   00100A  65                 	db	101	;'e'
   154   00100B  20                 	db	32
   155   00100C  3D                 	db	61	;'='
   156   00100D  20                 	db	32
   157   00100E  25                 	db	37
   158   00100F  64                 	db	100	;'d'
   159   001010  2E                 	db	46
   160   001011  25                 	db	37
   161   001012  64                 	db	100	;'d'
   162   001013  25                 	db	37
   163   001014  64                 	db	100	;'d'
   164   001015  20                 	db	32
   165   001016  56                 	db	86	;'V'
   166   001017  20                 	db	32
   167   001018  0D                 	db	13
   168   001019  0A                 	db	10
   169   00101A  00                 	db	0
   170   00101B  00                 	db	0	; dummy byte at the end
   171   000000                     
   172                           ; #config settings
   173                           
   174                           	psect	cinit
   175   001A18                     __pcinit:
   176                           	callstack 0
   177   001A18                     start_initialization:
   178                           	callstack 0
   179   001A18                     __initialization:
   180                           	callstack 0
   181                           
   182                           ; Clear objects allocated to BANK0 (40 bytes)
   183   001A18  EE00  F092         	lfsr	0,__pbssBANK0
   184   001A1C  0E28               	movlw	40
   185   001A1E                     clear_0:
   186   001A1E  6AEE               	clrf	postinc0,c
   187   001A20  06E8               	decf	wreg,f,c
   188   001A22  E1FD               	bnz	clear_0
   189                           
   190                           ; Clear objects allocated to COMRAM (8 bytes)
   191   001A24  EE00  F057         	lfsr	0,__pbssCOMRAM
   192   001A28  0E08               	movlw	8
   193   001A2A                     clear_1:
   194   001A2A  6AEE               	clrf	postinc0,c
   195   001A2C  06E8               	decf	wreg,f,c
   196   001A2E  E1FD               	bnz	clear_1
   197   001A30                     end_of_initialization:
   198                           	callstack 0
   199   001A30                     __end_of__initialization:
   200                           	callstack 0
   201   001A30  0100               	movlb	0
   202   001A32  EF35  F00A         	goto	_main	;jump to C main() function
   203                           
   204                           	psect	bssCOMRAM
   205   000057                     __pbssCOMRAM:
   206                           	callstack 0
   207   000057                     _adcVoltValue:
   208                           	callstack 0
   209   000057                     	ds	2
   210   000059                     _adhundredth:
   211                           	callstack 0
   212   000059                     	ds	2
   213   00005B                     _adtenth:
   214                           	callstack 0
   215   00005B                     	ds	2
   216   00005D                     _flags:
   217                           	callstack 0
   218   00005D                     	ds	1
   219   00005E                     _eusartRxLastError:
   220                           	callstack 0
   221   00005E                     	ds	1
   222                           
   223                           	psect	bssBANK0
   224   000092                     __pbssBANK0:
   225                           	callstack 0
   226   000092                     _width:
   227                           	callstack 0
   228   000092                     	ds	2
   229   000094                     _prec:
   230                           	callstack 0
   231   000094                     	ds	2
   232   000096                     _adones:
   233                           	callstack 0
   234   000096                     	ds	2
   235   000098                     _ADC_InterruptHandler:
   236                           	callstack 0
   237   000098                     	ds	2
   238   00009A                     _dbuf:
   239                           	callstack 0
   240   00009A                     	ds	32
   241                           
   242                           	psect	cstackBANK0
   243   000060                     __pcstackBANK0:
   244                           	callstack 0
   245   000060                     main@bufferWrite:
   246                           	callstack 0
   247                           
   248                           ; 50 bytes @ 0x0
   249   000060                     	ds	50
   250                           
   251                           	psect	cstackCOMRAM
   252   000001                     __pcstackCOMRAM:
   253                           	callstack 0
   254   000001                     ??_ADC_SelectChannel:
   255   000001                     ?_ADC_GetConversion:
   256                           	callstack 0
   257   000001                     ?___wmul:
   258                           	callstack 0
   259   000001                     ?___awdiv:
   260                           	callstack 0
   261   000001                     ?___awmod:
   262                           	callstack 0
   263   000001                     ?___lwdiv:
   264                           	callstack 0
   265   000001                     ?___lwmod:
   266                           	callstack 0
   267   000001                     _EUSART_is_tx_ready$426:
   268                           	callstack 0
   269   000001                     EUSART_WriteByte@txData:
   270                           	callstack 0
   271   000001                     EUSART_SetFramingErrorHandler@interruptHandler:
   272                           	callstack 0
   273   000001                     EUSART_SetOverrunErrorHandler@interruptHandler:
   274                           	callstack 0
   275   000001                     EUSART_SetErrorHandler@interruptHandler:
   276                           	callstack 0
   277   000001                     ___wmul@multiplier:
   278                           	callstack 0
   279   000001                     ___awdiv@dividend:
   280                           	callstack 0
   281   000001                     ___awmod@dividend:
   282                           	callstack 0
   283   000001                     ___lwdiv@dividend:
   284                           	callstack 0
   285   000001                     ___lwmod@dividend:
   286                           	callstack 0
   287   000001                     fputc@c:
   288                           	callstack 0
   289                           
   290                           ; 2 bytes @ 0x0
   291   000001                     	ds	1
   292   000002                     ADC_SelectChannel@channel:
   293                           	callstack 0
   294   000002                     EUSART_Write@txData:
   295                           	callstack 0
   296                           
   297                           ; 2 bytes @ 0x1
   298   000002                     	ds	1
   299   000003                     ??_ADC_GetConversion:
   300   000003                     ___wmul@multiplicand:
   301                           	callstack 0
   302   000003                     ___awdiv@divisor:
   303                           	callstack 0
   304   000003                     ___awmod@divisor:
   305                           	callstack 0
   306   000003                     ___lwdiv@divisor:
   307                           	callstack 0
   308   000003                     ___lwmod@divisor:
   309                           	callstack 0
   310   000003                     fputc@fp:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x2
   314   000003                     	ds	1
   315   000004                     EUSART_Write@i:
   316                           	callstack 0
   317                           
   318                           ; 1 bytes @ 0x3
   319   000004                     	ds	1
   320   000005                     ??_fputc:
   321   000005                     ADC_GetConversion@channel:
   322                           	callstack 0
   323   000005                     ___awdiv@counter:
   324                           	callstack 0
   325   000005                     ___awmod@counter:
   326                           	callstack 0
   327   000005                     ___lwmod@counter:
   328                           	callstack 0
   329   000005                     ___wmul@product:
   330                           	callstack 0
   331   000005                     ___lwdiv@quotient:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x4
   335   000005                     	ds	1
   336   000006                     ___awdiv@sign:
   337                           	callstack 0
   338   000006                     ___awmod@sign:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0x5
   342   000006                     	ds	1
   343   000007                     ?_abs:
   344                           	callstack 0
   345   000007                     ___lwdiv@counter:
   346                           	callstack 0
   347   000007                     ___awdiv@quotient:
   348                           	callstack 0
   349   000007                     abs@a:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x6
   353   000007                     	ds	1
   354   000008                     ConvertADCVoltage@adc_conv_data:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x7
   358   000008                     	ds	1
   359   000009                     ??_abs:
   360                           
   361                           ; 1 bytes @ 0x8
   362   000009                     	ds	1
   363   00000A                     fputs@s:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x9
   367   00000A                     	ds	2
   368   00000C                     fputs@fp:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0xB
   372   00000C                     	ds	2
   373   00000E                     fputs@c:
   374                           	callstack 0
   375                           
   376                           ; 1 bytes @ 0xD
   377   00000E                     	ds	1
   378   00000F                     fputs@i:
   379                           	callstack 0
   380                           
   381                           ; 2 bytes @ 0xE
   382   00000F                     	ds	2
   383   000011                     pad@fp:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x10
   387   000011                     	ds	2
   388   000013                     pad@buf:
   389                           	callstack 0
   390                           
   391                           ; 2 bytes @ 0x12
   392   000013                     	ds	2
   393   000015                     pad@p:
   394                           	callstack 0
   395                           
   396                           ; 2 bytes @ 0x14
   397   000015                     	ds	2
   398   000017                     ??_pad:
   399                           
   400                           ; 1 bytes @ 0x16
   401   000017                     	ds	1
   402   000018                     pad@i:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x17
   406   000018                     	ds	2
   407   00001A                     pad@w:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x19
   411   00001A                     	ds	2
   412   00001C                     dtoa@fp:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x1B
   416   00001C                     	ds	2
   417   00001E                     dtoa@d:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x1D
   421   00001E                     	ds	2
   422   000020                     _dtoa$1102:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x1F
   426   000020                     	ds	2
   427   000022                     dtoa@p:
   428                           	callstack 0
   429                           
   430                           ; 2 bytes @ 0x21
   431   000022                     	ds	2
   432   000024                     dtoa@w:
   433                           	callstack 0
   434                           
   435                           ; 2 bytes @ 0x23
   436   000024                     	ds	2
   437   000026                     dtoa@i:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x25
   441   000026                     	ds	2
   442   000028                     dtoa@s:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x27
   446   000028                     	ds	1
   447   000029                     vfpfcnvrt@fp:
   448                           	callstack 0
   449                           
   450                           ; 2 bytes @ 0x28
   451   000029                     	ds	2
   452   00002B                     vfpfcnvrt@fmt:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x2A
   456   00002B                     	ds	2
   457   00002D                     vfpfcnvrt@ap:
   458                           	callstack 0
   459                           
   460                           ; 2 bytes @ 0x2C
   461   00002D                     	ds	2
   462   00002F                     ??_vfpfcnvrt:
   463                           
   464                           ; 1 bytes @ 0x2E
   465   00002F                     	ds	2
   466   000031                     vfpfcnvrt@convarg:
   467                           	callstack 0
   468                           
   469                           ; 4 bytes @ 0x30
   470   000031                     	ds	4
   471   000035                     vfpfcnvrt@cp:
   472                           	callstack 0
   473                           
   474                           ; 2 bytes @ 0x34
   475   000035                     	ds	2
   476   000037                     ?_vfprintf:
   477                           	callstack 0
   478   000037                     vfprintf@fp:
   479                           	callstack 0
   480                           
   481                           ; 2 bytes @ 0x36
   482   000037                     	ds	2
   483   000039                     vfprintf@fmt:
   484                           	callstack 0
   485                           
   486                           ; 2 bytes @ 0x38
   487   000039                     	ds	2
   488   00003B                     vfprintf@ap:
   489                           	callstack 0
   490                           
   491                           ; 2 bytes @ 0x3A
   492   00003B                     	ds	2
   493   00003D                     vfprintf@cfmt:
   494                           	callstack 0
   495                           
   496                           ; 2 bytes @ 0x3C
   497   00003D                     	ds	2
   498   00003F                     ?_sprintf:
   499                           	callstack 0
   500   00003F                     sprintf@s:
   501                           	callstack 0
   502                           
   503                           ; 2 bytes @ 0x3E
   504   00003F                     	ds	2
   505   000041                     sprintf@fmt:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x40
   509   000041                     	ds	8
   510   000049                     sprintf@ap:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x48
   514   000049                     	ds	2
   515   00004B                     sprintf@f:
   516                           	callstack 0
   517                           
   518                           ; 12 bytes @ 0x4A
   519   00004B                     	ds	12
   520   000057                     
   521                           ; 1 bytes @ 0x56
   522 ;;
   523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   524 ;;
   525 ;; *************** function _main *****************
   526 ;; Defined at:
   527 ;;		line 68 in file "main.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  bufferWrite    50    0[BANK0 ] unsigned char [50]
   532 ;; Return value:  Size  Location     Type
   533 ;;                  1    wreg      void 
   534 ;; Registers used:
   535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   536 ;; Tracked objects:
   537 ;;		On entry : 0/0
   538 ;;		On exit  : 0/0
   539 ;;		Unchanged: 0/0
   540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   542 ;;      Locals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   544 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   545 ;;Total ram usage:       50 bytes
   546 ;; Hardware stack levels required when called: 8
   547 ;; This function calls:
   548 ;;		_ADC_GetConversion
   549 ;;		_ADC_IsConversionDone
   550 ;;		_ADC_SelectChannel
   551 ;;		_ADC_StartConversion
   552 ;;		_ConvertADCVoltage
   553 ;;		_EUSART_Write
   554 ;;		_EUSART_is_tx_ready
   555 ;;		_SYSTEM_Initialize
   556 ;;		_sprintf
   557 ;; This function is called by:
   558 ;;		Startup code after reset
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           
   562                           	psect	text0
   563   00146A                     __ptext0:
   564                           	callstack 0
   565   00146A                     _main:
   566                           	callstack 23
   567   00146A                     
   568                           ;main.c: 71:     SYSTEM_Initialize();
   569   00146A  EC47  F00D         	call	_SYSTEM_Initialize	;wreg free
   570                           
   571                           ;main.c: 73:  ADC_SelectChannel(channel_AN0);
   572   00146E  0E00               	movlw	0
   573   001470  EC1B  F00D         	call	_ADC_SelectChannel
   574   001474                     
   575                           ;main.c: 74:   ADC_StartConversion();
   576   001474  EC64  F00D         	call	_ADC_StartConversion	;wreg free
   577   001478                     l1772:
   578                           
   579                           ;main.c: 93:     {;main.c: 96:       convertedValue = ADC_GetConversion(channel_AN0);
   580   001478  0E00               	movlw	0
   581   00147A  ECAF  F00C         	call	_ADC_GetConversion
   582   00147E  C001  F0C0         	movff	?_ADC_GetConversion,_convertedValue
   583   001482  C002  F0C1         	movff	?_ADC_GetConversion+1,_convertedValue+1
   584   001486                     
   585                           ;main.c: 97:       if(EUSART_is_tx_ready())
   586   001486  ECE5  F00C         	call	_EUSART_is_tx_ready	;wreg free
   587   00148A  0900               	iorlw	0
   588   00148C  B4D8               	btfsc	status,2,c
   589   00148E  EF4B  F00A         	goto	u1001
   590   001492  EF4D  F00A         	goto	u1000
   591   001496                     u1001:
   592   001496  EF3C  F00A         	goto	l1772
   593   00149A                     u1000:
   594   00149A                     l1778:
   595   00149A  EC3D  F00D         	call	_ADC_IsConversionDone	;wreg free
   596   00149E  0900               	iorlw	0
   597   0014A0  B4D8               	btfsc	status,2,c
   598   0014A2  EF55  F00A         	goto	u1011
   599   0014A6  EF57  F00A         	goto	u1010
   600   0014AA                     u1011:
   601   0014AA  EF4D  F00A         	goto	l1778
   602   0014AE                     u1010:
   603   0014AE                     
   604                           ;main.c: 100:     ConvertADCVoltage(convertedValue);
   605   0014AE  C0C0  F008         	movff	_convertedValue,ConvertADCVoltage@adc_conv_data
   606   0014B2  C0C1  F009         	movff	_convertedValue+1,ConvertADCVoltage@adc_conv_data+1
   607   0014B6  ECE5  F00A         	call	_ConvertADCVoltage	;wreg free
   608   0014BA                     
   609                           ;main.c: 101:                 sprintf(bufferWrite, "\r\n Voltage = %d.%d%d V \r\n",adone
      +                          s, adtenth, adhundredth );
   610   0014BA  0E60               	movlw	low main@bufferWrite
   611   0014BC  6E3F               	movwf	sprintf@s^0,c
   612   0014BE  0E00               	movlw	high main@bufferWrite
   613   0014C0  6E40               	movwf	(sprintf@s+1)^0,c
   614   0014C2  0E01               	movlw	low STR_1
   615   0014C4  6E41               	movwf	sprintf@fmt^0,c
   616   0014C6  0E10               	movlw	high STR_1
   617   0014C8  6E42               	movwf	(sprintf@fmt+1)^0,c
   618   0014CA  C096  F043         	movff	_adones,?_sprintf+4
   619   0014CE  C097  F044         	movff	_adones+1,?_sprintf+5
   620   0014D2  C05B  F045         	movff	_adtenth,?_sprintf+6
   621   0014D6  C05C  F046         	movff	_adtenth+1,?_sprintf+7
   622   0014DA  C059  F047         	movff	_adhundredth,?_sprintf+8
   623   0014DE  C05A  F048         	movff	_adhundredth+1,?_sprintf+9
   624   0014E2  EC0B  F00C         	call	_sprintf	;wreg free
   625   0014E6                     
   626                           ;main.c: 102:                 EUSART_Write(bufferWrite);
   627   0014E6  0E60               	movlw	low main@bufferWrite
   628   0014E8  6E02               	movwf	EUSART_Write@txData^0,c
   629   0014EA  0E00               	movlw	high main@bufferWrite
   630   0014EC  6E03               	movwf	(EUSART_Write@txData+1)^0,c
   631   0014EE  EC92  F00C         	call	_EUSART_Write	;wreg free
   632   0014F2                     
   633                           ;main.c: 104:                 if(adones>1){
   634   0014F2  0100               	movlb	0	; () banked
   635   0014F4  5197               	movf	(_adones+1)& (0+255),w,b
   636   0014F6  E109               	bnz	u1020
   637   0014F8  0E02               	movlw	2
   638   0014FA  5D96               	subwf	_adones& (0+255),w,b
   639   0014FC  A0D8               	btfss	status,0,c
   640   0014FE  EF83  F00A         	goto	u1021
   641   001502  EF85  F00A         	goto	u1020
   642   001506                     u1021:
   643   001506  EF88  F00A         	goto	l85
   644   00150A                     u1020:
   645   00150A                     
   646                           ; BSR set to: 0
   647   00150A  868C               	bsf	140,3,c	;volatile
   648   00150C  EF3C  F00A         	goto	l1772
   649   001510                     l85:
   650                           
   651                           ; BSR set to: 0
   652   001510  968C               	bcf	140,3,c	;volatile
   653   001512  EF3C  F00A         	goto	l1772
   654   001516  EF00  F000         	goto	start
   655   00151A                     __end_of_main:
   656                           	callstack 0
   657                           
   658 ;; *************** function _sprintf *****************
   659 ;; Defined at:
   660 ;;		line 9 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_sprintf.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  s               2   62[COMRAM] PTR unsigned char 
   663 ;;		 -> main@bufferWrite(50), 
   664 ;;  fmt             2   64[COMRAM] PTR const unsigned char 
   665 ;;		 -> STR_1(26), 
   666 ;; Auto vars:     Size  Location     Type
   667 ;;  f              12   74[COMRAM] struct _IO_FILE
   668 ;;  ap              2   72[COMRAM] PTR void [1]
   669 ;;		 -> ?_sprintf(2), 
   670 ;;  ret             2    0        int 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  2   62[COMRAM] int 
   673 ;; Registers used:
   674 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   680 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   684 ;;Total ram usage:       24 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; Hardware stack levels required when called: 7
   687 ;; This function calls:
   688 ;;		_vfprintf
   689 ;; This function is called by:
   690 ;;		_main
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           	psect	text1
   695   001816                     __ptext1:
   696                           	callstack 0
   697   001816                     _sprintf:
   698                           	callstack 23
   699   001816  0E43               	movlw	low (?_sprintf+4)
   700   001818  6E49               	movwf	sprintf@ap^0,c
   701   00181A  0E00               	movlw	high (?_sprintf+4)
   702   00181C  6E4A               	movwf	(sprintf@ap+1)^0,c
   703   00181E  C03F  F04B         	movff	sprintf@s,sprintf@f
   704   001822  C040  F04C         	movff	sprintf@s+1,sprintf@f+1
   705   001826  0E00               	movlw	0
   706   001828  6E4F               	movwf	(sprintf@f+4)^0,c
   707   00182A  0E00               	movlw	0
   708   00182C  6E4E               	movwf	(sprintf@f+3)^0,c
   709   00182E  0E00               	movlw	0
   710   001830  6E56               	movwf	(sprintf@f+11)^0,c
   711   001832  0E00               	movlw	0
   712   001834  6E55               	movwf	(sprintf@f+10)^0,c
   713   001836  0E4B               	movlw	low sprintf@f
   714   001838  6E37               	movwf	vfprintf@fp^0,c
   715   00183A  0E00               	movlw	high sprintf@f
   716   00183C  6E38               	movwf	(vfprintf@fp+1)^0,c
   717   00183E  C041  F039         	movff	sprintf@fmt,vfprintf@fmt
   718   001842  C042  F03A         	movff	sprintf@fmt+1,vfprintf@fmt+1
   719   001846  0E49               	movlw	low sprintf@ap
   720   001848  6E3B               	movwf	vfprintf@ap^0,c
   721   00184A  0E00               	movlw	high sprintf@ap
   722   00184C  6E3C               	movwf	(vfprintf@ap+1)^0,c
   723   00184E  ECE3  F00B         	call	_vfprintf	;wreg free
   724   001852  504E               	movf	(sprintf@f+3)^0,w,c
   725   001854  243F               	addwf	sprintf@s^0,w,c
   726   001856  6ED9               	movwf	fsr2l,c
   727   001858  504F               	movf	(sprintf@f+4)^0,w,c
   728   00185A  2040               	addwfc	(sprintf@s+1)^0,w,c
   729   00185C  6EDA               	movwf	fsr2h,c
   730   00185E  6ADF               	clrf	indf2,c
   731   001860  0012               	return		;funcret
   732   001862                     __end_of_sprintf:
   733                           	callstack 0
   734                           
   735 ;; *************** function _vfprintf *****************
   736 ;; Defined at:
   737 ;;		line 1546 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  fp              2   54[COMRAM] PTR struct _IO_FILE
   740 ;;		 -> sprintf@f(12), 
   741 ;;  fmt             2   56[COMRAM] PTR const unsigned char 
   742 ;;		 -> STR_1(26), 
   743 ;;  ap              2   58[COMRAM] PTR PTR void 
   744 ;;		 -> sprintf@ap(2), 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  cfmt            2   60[COMRAM] PTR unsigned char 
   747 ;;		 -> STR_1(26), 
   748 ;; Return value:  Size  Location     Type
   749 ;;                  2   54[COMRAM] int 
   750 ;; Registers used:
   751 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   757 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   761 ;;Total ram usage:        8 bytes
   762 ;; Hardware stack levels used: 1
   763 ;; Hardware stack levels required when called: 6
   764 ;; This function calls:
   765 ;;		_vfpfcnvrt
   766 ;; This function is called by:
   767 ;;		_sprintf
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text2
   772   0017C6                     __ptext2:
   773                           	callstack 0
   774   0017C6                     _vfprintf:
   775                           	callstack 23
   776   0017C6                     
   777                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);E:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
   778   0017C6  C039  F03D         	movff	vfprintf@fmt,vfprintf@cfmt
   779   0017CA  C03A  F03E         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   780                           
   781                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
   782   0017CE  EFF7  F00B         	goto	l1696
   783   0017D2                     l1694:
   784                           
   785                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
   786   0017D2  C037  F029         	movff	vfprintf@fp,vfpfcnvrt@fp
   787   0017D6  C038  F02A         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   788   0017DA  0E3D               	movlw	low vfprintf@cfmt
   789   0017DC  6E2B               	movwf	vfpfcnvrt@fmt^0,c
   790   0017DE  0E00               	movlw	high vfprintf@cfmt
   791   0017E0  6E2C               	movwf	(vfpfcnvrt@fmt+1)^0,c
   792   0017E2  C03B  F02D         	movff	vfprintf@ap,vfpfcnvrt@ap
   793   0017E6  C03C  F02E         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   794   0017EA  ECD8  F008         	call	_vfpfcnvrt	;wreg free
   795   0017EE                     l1696:
   796                           
   797                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
   798   0017EE  C03D  FFF6         	movff	vfprintf@cfmt,tblptrl
   799   0017F2  C03E  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   800   0017F6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   801   0017F6  6AF8               	clrf	tblptru,c
   802   0017F8                     	endif
   803   0017F8                     	if	0	;tblptru may be non-zero
   804   0017F8                     	endif
   805   0017F8  0008               	tblrd		*
   806   0017FA  50F5               	movf	tablat,w,c
   807   0017FC  0900               	iorlw	0
   808   0017FE  A4D8               	btfss	status,2,c
   809   001800  EF04  F00C         	goto	u931
   810   001804  EF06  F00C         	goto	u930
   811   001808                     u931:
   812   001808  EFE9  F00B         	goto	l1694
   813   00180C                     u930:
   814   00180C                     
   815                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
   816   00180C  0E00               	movlw	0
   817   00180E  6E38               	movwf	(?_vfprintf+1)^0,c
   818   001810  0E00               	movlw	0
   819   001812  6E37               	movwf	?_vfprintf^0,c
   820   001814  0012               	return		;funcret
   821   001816                     __end_of_vfprintf:
   822                           	callstack 0
   823                           
   824 ;; *************** function _vfpfcnvrt *****************
   825 ;; Defined at:
   826 ;;		line 1048 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
   827 ;; Parameters:    Size  Location     Type
   828 ;;  fp              2   40[COMRAM] PTR struct _IO_FILE
   829 ;;		 -> sprintf@f(12), 
   830 ;;  fmt             2   42[COMRAM] PTR PTR unsigned char 
   831 ;;		 -> vfprintf@cfmt(2), 
   832 ;;  ap              2   44[COMRAM] PTR PTR void 
   833 ;;		 -> sprintf@ap(2), 
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  convarg         4   48[COMRAM] struct .
   836 ;;  cp              2   52[COMRAM] PTR unsigned char 
   837 ;;		 -> STR_1(26), 
   838 ;;  i               2    0        int 
   839 ;;  done            2    0        int 
   840 ;;  c               1    0        unsigned char 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 0/0
   847 ;;		On exit  : 0/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   850 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;Total ram usage:       14 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 5
   857 ;; This function calls:
   858 ;;		_dtoa
   859 ;;		_fputc
   860 ;; This function is called by:
   861 ;;		_vfprintf
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text3
   866   0011B0                     __ptext3:
   867                           	callstack 0
   868   0011B0                     _vfpfcnvrt:
   869                           	callstack 23
   870   0011B0                     
   871                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
   872   0011B0  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   873   0011B4  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   874   0011B8  CFDE FFF6          	movff	postinc2,tblptrl
   875   0011BC  CFDD FFF7          	movff	postdec2,tblptrh
   876   0011C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   877   0011C0  6AF8               	clrf	tblptru,c
   878   0011C2                     	endif
   879   0011C2                     	if	0	;tblptru may be non-zero
   880   0011C2                     	endif
   881   0011C2  0008               	tblrd		*
   882   0011C4  50F5               	movf	tablat,w,c
   883   0011C6  0A25               	xorlw	37
   884   0011C8  A4D8               	btfss	status,2,c
   885   0011CA  EFE9  F008         	goto	u831
   886   0011CE  EFEB  F008         	goto	u830
   887   0011D2                     u831:
   888   0011D2  EF58  F009         	goto	l1614
   889   0011D6                     u830:
   890   0011D6                     
   891                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
   892   0011D6  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   893   0011DA  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   894   0011DE  2ADE               	incf	postinc2,f,c
   895   0011E0  0E00               	movlw	0
   896   0011E2  22DD               	addwfc	postdec2,f,c
   897   0011E4                     
   898                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
   899   0011E4  0E00               	movlw	0
   900   0011E6  0100               	movlb	0	; () banked
   901   0011E8  6F93               	movwf	(_width+1)& (0+255),b
   902   0011EA  0E00               	movlw	0
   903   0011EC  6F92               	movwf	_width& (0+255),b
   904   0011EE  C092  F05D         	movff	_width,_flags
   905   0011F2                     
   906                           ; BSR set to: 0
   907                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
   908   0011F2  6994               	setf	_prec& (0+255),b
   909   0011F4  6995               	setf	(_prec+1)& (0+255),b
   910   0011F6                     
   911                           ; BSR set to: 0
   912                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
   913   0011F6  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   914   0011FA  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   915   0011FE  CFDE F035          	movff	postinc2,vfpfcnvrt@cp
   916   001202  CFDD F036          	movff	postdec2,vfpfcnvrt@cp+1
   917   001206                     
   918                           ; BSR set to: 0
   919                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
   920   001206  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   921   00120A  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   922   00120E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   923   00120E  6AF8               	clrf	tblptru,c
   924   001210                     	endif
   925   001210                     	if	0	;tblptru may be non-zero
   926   001210                     	endif
   927   001210  0008               	tblrd		*
   928   001212  50F5               	movf	tablat,w,c
   929   001214  0A64               	xorlw	100
   930   001216  B4D8               	btfsc	status,2,c
   931   001218  EF10  F009         	goto	u841
   932   00121C  EF12  F009         	goto	u840
   933   001220                     u841:
   934   001220  EF21  F009         	goto	l1604
   935   001224                     u840:
   936   001224                     
   937                           ; BSR set to: 0
   938   001224  C035  FFF6         	movff	vfpfcnvrt@cp,tblptrl
   939   001228  C036  FFF7         	movff	vfpfcnvrt@cp+1,tblptrh
   940   00122C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   941   00122C  6AF8               	clrf	tblptru,c
   942   00122E                     	endif
   943   00122E                     	if	0	;tblptru may be non-zero
   944   00122E                     	endif
   945   00122E  0008               	tblrd		*
   946   001230  50F5               	movf	tablat,w,c
   947   001232  0A69               	xorlw	105
   948   001234  A4D8               	btfss	status,2,c
   949   001236  EF1F  F009         	goto	u851
   950   00123A  EF21  F009         	goto	u850
   951   00123E                     u851:
   952   00123E  EF4F  F009         	goto	l1610
   953   001242                     u850:
   954   001242                     l1604:
   955                           
   956                           ; BSR set to: 0
   957                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
   958   001242  C02D  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   959   001246  C02E  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   960   00124A  CFDF F02F          	movff	indf2,??_vfpfcnvrt
   961   00124E  0E02               	movlw	2
   962   001250  26DE               	addwf	postinc2,f,c
   963   001252  CFDF F030          	movff	indf2,??_vfpfcnvrt+1
   964   001256  0E00               	movlw	0
   965   001258  22DD               	addwfc	postdec2,f,c
   966   00125A  C02F  FFD9         	movff	??_vfpfcnvrt,fsr2l
   967   00125E  C030  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   968   001262  CFDE F031          	movff	postinc2,vfpfcnvrt@convarg
   969   001266  CFDD F032          	movff	postdec2,vfpfcnvrt@convarg+1
   970                           
   971                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
   972   00126A  0E01               	movlw	1
   973   00126C  2435               	addwf	vfpfcnvrt@cp^0,w,c
   974   00126E  6E2F               	movwf	??_vfpfcnvrt^0,c
   975   001270  0E00               	movlw	0
   976   001272  2036               	addwfc	(vfpfcnvrt@cp+1)^0,w,c
   977   001274  6E30               	movwf	(??_vfpfcnvrt+1)^0,c
   978   001276  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   979   00127A  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   980   00127E  C02F  FFDE         	movff	??_vfpfcnvrt,postinc2
   981   001282  C030  FFDD         	movff	??_vfpfcnvrt+1,postdec2
   982   001286                     
   983                           ; BSR set to: 0
   984                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
   985   001286  C029  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
   986   00128A  C02A  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   987   00128E  C031  F01E         	movff	vfpfcnvrt@convarg,dtoa@d
   988   001292  C032  F01F         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
   989   001296  EC0E  F008         	call	_dtoa	;wreg free
   990   00129A  EF6D  F009         	goto	l970
   991   00129E                     l1610:
   992                           
   993                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
   994   00129E  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   995   0012A2  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   996   0012A6  2ADE               	incf	postinc2,f,c
   997   0012A8  0E00               	movlw	0
   998   0012AA  22DD               	addwfc	postdec2,f,c
   999   0012AC  EF6D  F009         	goto	l970
  1000   0012B0                     l1614:
  1001                           
  1002                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  1003   0012B0  C02B  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1004   0012B4  C02C  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1005   0012B8  CFDE FFF6          	movff	postinc2,tblptrl
  1006   0012BC  CFDD FFF7          	movff	postdec2,tblptrh
  1007   0012C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1008   0012C0  6AF8               	clrf	tblptru,c
  1009   0012C2                     	endif
  1010   0012C2                     	if	0	;tblptru may be non-zero
  1011   0012C2                     	endif
  1012   0012C2  0008               	tblrd		*
  1013   0012C4  50F5               	movf	tablat,w,c
  1014   0012C6  6E01               	movwf	fputc@c^0,c
  1015   0012C8  6A02               	clrf	(fputc@c+1)^0,c
  1016   0012CA  C029  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1017   0012CE  C02A  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1018   0012D2  EC6E  F009         	call	_fputc	;wreg free
  1019   0012D6  EF4F  F009         	goto	l1610
  1020   0012DA                     l970:
  1021   0012DA  0012               	return		;funcret
  1022   0012DC                     __end_of_vfpfcnvrt:
  1023                           	callstack 0
  1024                           
  1025 ;; *************** function _dtoa *****************
  1026 ;; Defined at:
  1027 ;;		line 470 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1028 ;; Parameters:    Size  Location     Type
  1029 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  1030 ;;		 -> sprintf@f(12), 
  1031 ;;  d               2   29[COMRAM] int 
  1032 ;; Auto vars:     Size  Location     Type
  1033 ;;  i               2   37[COMRAM] int 
  1034 ;;  w               2   35[COMRAM] int 
  1035 ;;  p               2   33[COMRAM] int 
  1036 ;;  s               1   39[COMRAM] unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1046 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;Total ram usage:       13 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 4
  1053 ;; This function calls:
  1054 ;;		___awdiv
  1055 ;;		___awmod
  1056 ;;		_abs
  1057 ;;		_pad
  1058 ;; This function is called by:
  1059 ;;		_vfpfcnvrt
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           	psect	text4
  1064   00101C                     __ptext4:
  1065                           	callstack 0
  1066   00101C                     _dtoa:
  1067                           	callstack 23
  1068   00101C                     
  1069                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\commo
      +                          n\doprnt.c: 471: {;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           472:  char s;;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 473
      +                          :     int i, p, w;;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c:
      +                           476:     s = d < 0 ? 1 : 0;
  1070   00101C  BE1F               	btfsc	(dtoa@d+1)^0,7,c
  1071   00101E  EF13  F008         	goto	u731
  1072   001022  EF16  F008         	goto	u730
  1073   001026                     u731:
  1074   001026  0E01               	movlw	1
  1075   001028  EF17  F008         	goto	u740
  1076   00102C                     u730:
  1077   00102C  0E00               	movlw	0
  1078   00102E                     u740:
  1079   00102E  6E28               	movwf	dtoa@s^0,c
  1080   001030                     
  1081                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  1082   001030  5028               	movf	dtoa@s^0,w,c
  1083   001032  B4D8               	btfsc	status,2,c
  1084   001034  EF1E  F008         	goto	u751
  1085   001038  EF20  F008         	goto	u750
  1086   00103C                     u751:
  1087   00103C  EF24  F008         	goto	l1540
  1088   001040                     u750:
  1089   001040                     
  1090                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  1091   001040  6C1E               	negf	dtoa@d^0,c
  1092   001042  1E1F               	comf	(dtoa@d+1)^0,f,c
  1093   001044  B0D8               	btfsc	status,0,c
  1094   001046  2A1F               	incf	(dtoa@d+1)^0,f,c
  1095   001048                     l1540:
  1096                           
  1097                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  1098   001048  0100               	movlb	0	; () banked
  1099   00104A  BF95               	btfsc	(_prec+1)& (0+255),7,b
  1100   00104C  EF2C  F008         	goto	u760
  1101   001050  EF2A  F008         	goto	u761
  1102   001054                     u761:
  1103   001054  EF32  F008         	goto	l949
  1104   001058                     u760:
  1105   001058                     
  1106                           ; BSR set to: 0
  1107   001058  0E00               	movlw	0
  1108   00105A  6E23               	movwf	(dtoa@p+1)^0,c
  1109   00105C  0E01               	movlw	1
  1110   00105E  6E22               	movwf	dtoa@p^0,c
  1111   001060  EF36  F008         	goto	l951
  1112   001064                     l949:
  1113                           
  1114                           ; BSR set to: 0
  1115   001064  C094  F022         	movff	_prec,dtoa@p
  1116   001068  C095  F023         	movff	_prec+1,dtoa@p+1
  1117   00106C                     l951:
  1118                           
  1119                           ; BSR set to: 0
  1120                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  1121   00106C  C092  F024         	movff	_width,dtoa@w
  1122   001070  C093  F025         	movff	_width+1,dtoa@w+1
  1123   001074                     
  1124                           ; BSR set to: 0
  1125                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  1126   001074  5028               	movf	dtoa@s^0,w,c
  1127   001076  B4D8               	btfsc	status,2,c
  1128   001078  EF40  F008         	goto	u771
  1129   00107C  EF42  F008         	goto	u770
  1130   001080                     u771:
  1131   001080  EF59  F008         	goto	l952
  1132   001084                     u770:
  1133   001084                     
  1134                           ; BSR set to: 0
  1135                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;E:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  1136   001084  0624               	decf	dtoa@w^0,f,c
  1137   001086  A0D8               	btfss	status,0,c
  1138   001088  0625               	decf	(dtoa@w+1)^0,f,c
  1139   00108A                     
  1140                           ; BSR set to: 0
  1141                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  1142   00108A  5028               	movf	dtoa@s^0,w,c
  1143   00108C  A4D8               	btfss	status,2,c
  1144   00108E  EF4B  F008         	goto	u781
  1145   001092  EF4D  F008         	goto	u780
  1146   001096                     u781:
  1147   001096  EF53  F008         	goto	l1552
  1148   00109A                     u780:
  1149   00109A                     
  1150                           ; BSR set to: 0
  1151   00109A  0E00               	movlw	0
  1152   00109C  6E21               	movwf	(_dtoa$1102+1)^0,c
  1153   00109E  0E2B               	movlw	43
  1154   0010A0  6E20               	movwf	_dtoa$1102^0,c
  1155   0010A2  EF57  F008         	goto	l1554
  1156   0010A6                     l1552:
  1157                           
  1158                           ; BSR set to: 0
  1159   0010A6  0E00               	movlw	0
  1160   0010A8  6E21               	movwf	(_dtoa$1102+1)^0,c
  1161   0010AA  0E2D               	movlw	45
  1162   0010AC  6E20               	movwf	_dtoa$1102^0,c
  1163   0010AE                     l1554:
  1164                           
  1165                           ; BSR set to: 0
  1166   0010AE  C020  F028         	movff	_dtoa$1102,dtoa@s
  1167   0010B2                     l952:
  1168                           
  1169                           ; BSR set to: 0
  1170                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  1171   0010B2  0E00               	movlw	0
  1172   0010B4  6E27               	movwf	(dtoa@i+1)^0,c
  1173   0010B6  0E1F               	movlw	31
  1174   0010B8  6E26               	movwf	dtoa@i^0,c
  1175   0010BA                     
  1176                           ; BSR set to: 0
  1177                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  1178   0010BA  0E00               	movlw	0
  1179   0010BC  6FB9               	movwf	(_dbuf+31)& (0+255),b
  1180                           
  1181                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1182   0010BE  EF91  F008         	goto	l1568
  1183   0010C2                     l1558:
  1184                           
  1185                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;E:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  1186   0010C2  0626               	decf	dtoa@i^0,f,c
  1187   0010C4  A0D8               	btfss	status,0,c
  1188   0010C6  0627               	decf	(dtoa@i+1)^0,f,c
  1189   0010C8                     
  1190                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1191   0010C8  0E9A               	movlw	low _dbuf
  1192   0010CA  2426               	addwf	dtoa@i^0,w,c
  1193   0010CC  6ED9               	movwf	fsr2l,c
  1194   0010CE  0E00               	movlw	high _dbuf
  1195   0010D0  2027               	addwfc	(dtoa@i+1)^0,w,c
  1196   0010D2  6EDA               	movwf	fsr2h,c
  1197   0010D4  C01E  F001         	movff	dtoa@d,___awmod@dividend
  1198   0010D8  C01F  F002         	movff	dtoa@d+1,___awmod@dividend+1
  1199   0010DC  0E00               	movlw	0
  1200   0010DE  6E04               	movwf	(___awmod@divisor+1)^0,c
  1201   0010E0  0E0A               	movlw	10
  1202   0010E2  6E03               	movwf	___awmod@divisor^0,c
  1203   0010E4  EC8D  F00A         	call	___awmod	;wreg free
  1204   0010E8  C001  F007         	movff	?___awmod,abs@a
  1205   0010EC  C002  F008         	movff	?___awmod+1,abs@a+1
  1206   0010F0  EC53  F00C         	call	_abs	;wreg free
  1207   0010F4  5007               	movf	?_abs^0,w,c
  1208   0010F6  0F30               	addlw	48
  1209   0010F8  6EDF               	movwf	indf2,c
  1210   0010FA                     
  1211                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  1212   0010FA  0622               	decf	dtoa@p^0,f,c
  1213   0010FC  A0D8               	btfss	status,0,c
  1214   0010FE  0623               	decf	(dtoa@p+1)^0,f,c
  1215   001100                     
  1216                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  1217   001100  0624               	decf	dtoa@w^0,f,c
  1218   001102  A0D8               	btfss	status,0,c
  1219   001104  0625               	decf	(dtoa@w+1)^0,f,c
  1220   001106                     
  1221                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  1222   001106  C01E  F001         	movff	dtoa@d,___awdiv@dividend
  1223   00110A  C01F  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  1224   00110E  0E00               	movlw	0
  1225   001110  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1226   001112  0E0A               	movlw	10
  1227   001114  6E03               	movwf	___awdiv@divisor^0,c
  1228   001116  ECD3  F009         	call	___awdiv	;wreg free
  1229   00111A  C001  F01E         	movff	?___awdiv,dtoa@d
  1230   00111E  C002  F01F         	movff	?___awdiv+1,dtoa@d+1
  1231   001122                     l1568:
  1232                           
  1233                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  1234   001122  BE27               	btfsc	(dtoa@i+1)^0,7,c
  1235   001124  EF9C  F008         	goto	u791
  1236   001128  5027               	movf	(dtoa@i+1)^0,w,c
  1237   00112A  E108               	bnz	u790
  1238   00112C  0426               	decf	dtoa@i^0,w,c
  1239   00112E  A0D8               	btfss	status,0,c
  1240   001130  EF9C  F008         	goto	u791
  1241   001134  EF9E  F008         	goto	u790
  1242   001138                     u791:
  1243   001138  EFB4  F008         	goto	l1574
  1244   00113C                     u790:
  1245   00113C  501E               	movf	dtoa@d^0,w,c
  1246   00113E  101F               	iorwf	(dtoa@d+1)^0,w,c
  1247   001140  A4D8               	btfss	status,2,c
  1248   001142  EFA5  F008         	goto	u801
  1249   001146  EFA7  F008         	goto	u800
  1250   00114A                     u801:
  1251   00114A  EF61  F008         	goto	l1558
  1252   00114E                     u800:
  1253   00114E  BE23               	btfsc	(dtoa@p+1)^0,7,c
  1254   001150  EFB4  F008         	goto	u810
  1255   001154  5023               	movf	(dtoa@p+1)^0,w,c
  1256   001156  E106               	bnz	u811
  1257   001158  0422               	decf	dtoa@p^0,w,c
  1258   00115A  B0D8               	btfsc	status,0,c
  1259   00115C  EFB2  F008         	goto	u811
  1260   001160  EFB4  F008         	goto	u810
  1261   001164                     u811:
  1262   001164  EF61  F008         	goto	l1558
  1263   001168                     u810:
  1264   001168                     l1574:
  1265                           
  1266                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  1267   001168  5028               	movf	dtoa@s^0,w,c
  1268   00116A  B4D8               	btfsc	status,2,c
  1269   00116C  EFBA  F008         	goto	u821
  1270   001170  EFBC  F008         	goto	u820
  1271   001174                     u821:
  1272   001174  EFC7  F008         	goto	l1580
  1273   001178                     u820:
  1274   001178                     
  1275                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  1276   001178  0626               	decf	dtoa@i^0,f,c
  1277   00117A  A0D8               	btfss	status,0,c
  1278   00117C  0627               	decf	(dtoa@i+1)^0,f,c
  1279   00117E                     
  1280                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  1281   00117E  0E9A               	movlw	low _dbuf
  1282   001180  2426               	addwf	dtoa@i^0,w,c
  1283   001182  6ED9               	movwf	fsr2l,c
  1284   001184  0E00               	movlw	high _dbuf
  1285   001186  2027               	addwfc	(dtoa@i+1)^0,w,c
  1286   001188  6EDA               	movwf	fsr2h,c
  1287   00118A  C028  FFDF         	movff	dtoa@s,indf2
  1288   00118E                     l1580:
  1289                           
  1290                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  1291   00118E  C01C  F011         	movff	dtoa@fp,pad@fp
  1292   001192  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  1293   001196  0E9A               	movlw	low _dbuf
  1294   001198  2426               	addwf	dtoa@i^0,w,c
  1295   00119A  6E13               	movwf	pad@buf^0,c
  1296   00119C  0E00               	movlw	high _dbuf
  1297   00119E  2027               	addwfc	(dtoa@i+1)^0,w,c
  1298   0011A0  6E14               	movwf	(pad@buf+1)^0,c
  1299   0011A2  C024  F015         	movff	dtoa@w,pad@p
  1300   0011A6  C025  F016         	movff	dtoa@w+1,pad@p+1
  1301   0011AA  EC3A  F00B         	call	_pad	;wreg free
  1302   0011AE  0012               	return		;funcret
  1303   0011B0                     __end_of_dtoa:
  1304                           	callstack 0
  1305                           
  1306 ;; *************** function _pad *****************
  1307 ;; Defined at:
  1308 ;;		line 152 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  1309 ;; Parameters:    Size  Location     Type
  1310 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  1311 ;;		 -> sprintf@f(12), 
  1312 ;;  buf             2   18[COMRAM] PTR unsigned char 
  1313 ;;		 -> dbuf(32), 
  1314 ;;  p               2   20[COMRAM] int 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  w               2   25[COMRAM] int 
  1317 ;;  i               2   23[COMRAM] int 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      void 
  1320 ;; Registers used:
  1321 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1327 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1328 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1329 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1330 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1331 ;;Total ram usage:       11 bytes
  1332 ;; Hardware stack levels used: 1
  1333 ;; Hardware stack levels required when called: 3
  1334 ;; This function calls:
  1335 ;;		_fputc
  1336 ;;		_fputs
  1337 ;; This function is called by:
  1338 ;;		_dtoa
  1339 ;; This function uses a non-reentrant model
  1340 ;;
  1341                           
  1342                           	psect	text5
  1343   001674                     __ptext5:
  1344                           	callstack 0
  1345   001674                     _pad:
  1346                           	callstack 23
  1347   001674                     
  1348                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static void 
      +                          pad(FILE *fp, char *buf, int p);E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\com
      +                          mon\doprnt.c: 153: {;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.
      +                          c: 154:     int i, w;;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt
      +                          .c: 164:     w = (p < 0) ? 0 : p;
  1349   001674  BE16               	btfsc	(pad@p+1)^0,7,c
  1350   001676  EF3F  F00B         	goto	u701
  1351   00167A  EF41  F00B         	goto	u700
  1352   00167E                     u701:
  1353   00167E  EF47  F00B         	goto	l1520
  1354   001682                     u700:
  1355   001682  C015  F01A         	movff	pad@p,pad@w
  1356   001686  C016  F01B         	movff	pad@p+1,pad@w+1
  1357   00168A  EF4B  F00B         	goto	l940
  1358   00168E                     l1520:
  1359   00168E  0E00               	movlw	0
  1360   001690  6E1B               	movwf	(pad@w+1)^0,c
  1361   001692  0E00               	movlw	0
  1362   001694  6E1A               	movwf	pad@w^0,c
  1363   001696                     l940:
  1364                           
  1365                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  1366   001696  0E00               	movlw	0
  1367   001698  6E19               	movwf	(pad@i+1)^0,c
  1368   00169A  0E00               	movlw	0
  1369   00169C  6E18               	movwf	pad@i^0,c
  1370                           
  1371                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1372   00169E  EF5D  F00B         	goto	l1526
  1373   0016A2                     l1522:
  1374                           
  1375                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  1376   0016A2  0E00               	movlw	0
  1377   0016A4  6E02               	movwf	(fputc@c+1)^0,c
  1378   0016A6  0E20               	movlw	32
  1379   0016A8  6E01               	movwf	fputc@c^0,c
  1380   0016AA  C011  F003         	movff	pad@fp,fputc@fp
  1381   0016AE  C012  F004         	movff	pad@fp+1,fputc@fp+1
  1382   0016B2  EC6E  F009         	call	_fputc	;wreg free
  1383   0016B6                     
  1384                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  1385   0016B6  4A18               	infsnz	pad@i^0,f,c
  1386   0016B8  2A19               	incf	(pad@i+1)^0,f,c
  1387   0016BA                     l1526:
  1388                           
  1389                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  1390   0016BA  501A               	movf	pad@w^0,w,c
  1391   0016BC  5C18               	subwf	pad@i^0,w,c
  1392   0016BE  5019               	movf	(pad@i+1)^0,w,c
  1393   0016C0  0A80               	xorlw	128
  1394   0016C2  6E17               	movwf	??_pad^0,c
  1395   0016C4  501B               	movf	(pad@w+1)^0,w,c
  1396   0016C6  0A80               	xorlw	128
  1397   0016C8  5817               	subwfb	??_pad^0,w,c
  1398   0016CA  A0D8               	btfss	status,0,c
  1399   0016CC  EF6A  F00B         	goto	u711
  1400   0016D0  EF6C  F00B         	goto	u710
  1401   0016D4                     u711:
  1402   0016D4  EF51  F00B         	goto	l1522
  1403   0016D8                     u710:
  1404   0016D8                     
  1405                           ;E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  1406   0016D8  C013  F00A         	movff	pad@buf,fputs@s
  1407   0016DC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  1408   0016E0  C011  F00C         	movff	pad@fp,fputs@fp
  1409   0016E4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  1410   0016E8  EC31  F00C         	call	_fputs	;wreg free
  1411   0016EC  0012               	return		;funcret
  1412   0016EE                     __end_of_pad:
  1413                           	callstack 0
  1414                           
  1415 ;; *************** function _fputs *****************
  1416 ;; Defined at:
  1417 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  1418 ;; Parameters:    Size  Location     Type
  1419 ;;  s               2    9[COMRAM] PTR const unsigned char 
  1420 ;;		 -> dbuf(32), 
  1421 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  1422 ;;		 -> sprintf@f(12), 
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;  i               2   14[COMRAM] int 
  1425 ;;  c               1   13[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  2    9[COMRAM] int 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1435 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;Total ram usage:        7 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 2
  1442 ;; This function calls:
  1443 ;;		_fputc
  1444 ;; This function is called by:
  1445 ;;		_pad
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text6
  1450   001862                     __ptext6:
  1451                           	callstack 0
  1452   001862                     _fputs:
  1453                           	callstack 23
  1454   001862  0E00               	movlw	0
  1455   001864  6E10               	movwf	(fputs@i+1)^0,c
  1456   001866  0E00               	movlw	0
  1457   001868  6E0F               	movwf	fputs@i^0,c
  1458   00186A  EF42  F00C         	goto	l1434
  1459   00186E                     l1430:
  1460   00186E  C00E  F001         	movff	fputs@c,fputc@c
  1461   001872  6A02               	clrf	(fputc@c+1)^0,c
  1462   001874  C00C  F003         	movff	fputs@fp,fputc@fp
  1463   001878  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  1464   00187C  EC6E  F009         	call	_fputc	;wreg free
  1465   001880  4A0F               	infsnz	fputs@i^0,f,c
  1466   001882  2A10               	incf	(fputs@i+1)^0,f,c
  1467   001884                     l1434:
  1468   001884  500F               	movf	fputs@i^0,w,c
  1469   001886  240A               	addwf	fputs@s^0,w,c
  1470   001888  6ED9               	movwf	fsr2l,c
  1471   00188A  5010               	movf	(fputs@i+1)^0,w,c
  1472   00188C  200B               	addwfc	(fputs@s+1)^0,w,c
  1473   00188E  6EDA               	movwf	fsr2h,c
  1474   001890  50DF               	movf	indf2,w,c
  1475   001892  6E0E               	movwf	fputs@c^0,c
  1476   001894  500E               	movf	fputs@c^0,w,c
  1477   001896  A4D8               	btfss	status,2,c
  1478   001898  EF50  F00C         	goto	u571
  1479   00189C  EF52  F00C         	goto	u570
  1480   0018A0                     u571:
  1481   0018A0  EF37  F00C         	goto	l1430
  1482   0018A4                     u570:
  1483   0018A4  0012               	return		;funcret
  1484   0018A6                     __end_of_fputs:
  1485                           	callstack 0
  1486                           
  1487 ;; *************** function _fputc *****************
  1488 ;; Defined at:
  1489 ;;		line 8 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  1490 ;; Parameters:    Size  Location     Type
  1491 ;;  c               2    0[COMRAM] int 
  1492 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  1493 ;;		 -> sprintf@f(12), 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;                  2    0[COMRAM] int 
  1498 ;; Registers used:
  1499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1507 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1508 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1509 ;;Total ram usage:        9 bytes
  1510 ;; Hardware stack levels used: 1
  1511 ;; Hardware stack levels required when called: 1
  1512 ;; This function calls:
  1513 ;;		_putch
  1514 ;; This function is called by:
  1515 ;;		_pad
  1516 ;;		_vfpfcnvrt
  1517 ;;		_fputs
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text7
  1522   0012DC                     __ptext7:
  1523                           	callstack 0
  1524   0012DC                     _fputc:
  1525                           	callstack 26
  1526   0012DC  5003               	movf	fputc@fp^0,w,c
  1527   0012DE  1004               	iorwf	(fputc@fp+1)^0,w,c
  1528   0012E0  B4D8               	btfsc	status,2,c
  1529   0012E2  EF75  F009         	goto	u531
  1530   0012E6  EF77  F009         	goto	u530
  1531   0012EA                     u531:
  1532   0012EA  EF80  F009         	goto	l1418
  1533   0012EE                     u530:
  1534   0012EE  5003               	movf	fputc@fp^0,w,c
  1535   0012F0  1004               	iorwf	(fputc@fp+1)^0,w,c
  1536   0012F2  A4D8               	btfss	status,2,c
  1537   0012F4  EF7E  F009         	goto	u541
  1538   0012F8  EF80  F009         	goto	u540
  1539   0012FC                     u541:
  1540   0012FC  EF85  F009         	goto	l1420
  1541   001300                     u540:
  1542   001300                     l1418:
  1543   001300  5001               	movf	fputc@c^0,w,c
  1544   001302  EC66  F00D         	call	_putch
  1545   001306  EFD2  F009         	goto	l995
  1546   00130A                     l1420:
  1547   00130A  EE20 F00A          	lfsr	2,10
  1548   00130E  5003               	movf	fputc@fp^0,w,c
  1549   001310  26D9               	addwf	fsr2l,f,c
  1550   001312  5004               	movf	(fputc@fp+1)^0,w,c
  1551   001314  22DA               	addwfc	fsr2h,f,c
  1552   001316  50DE               	movf	postinc2,w,c
  1553   001318  10DE               	iorwf	postinc2,w,c
  1554   00131A  B4D8               	btfsc	status,2,c
  1555   00131C  EF92  F009         	goto	u551
  1556   001320  EF94  F009         	goto	u550
  1557   001324                     u551:
  1558   001324  EFAF  F009         	goto	l1424
  1559   001328                     u550:
  1560   001328  EE20 F00A          	lfsr	2,10
  1561   00132C  5003               	movf	fputc@fp^0,w,c
  1562   00132E  26D9               	addwf	fsr2l,f,c
  1563   001330  5004               	movf	(fputc@fp+1)^0,w,c
  1564   001332  22DA               	addwfc	fsr2h,f,c
  1565   001334  EE10 F003          	lfsr	1,3
  1566   001338  5003               	movf	fputc@fp^0,w,c
  1567   00133A  26E1               	addwf	fsr1l,f,c
  1568   00133C  5004               	movf	(fputc@fp+1)^0,w,c
  1569   00133E  22E2               	addwfc	fsr1h,f,c
  1570   001340  50DE               	movf	postinc2,w,c
  1571   001342  5CE6               	subwf	postinc1,w,c
  1572   001344  50E6               	movf	postinc1,w,c
  1573   001346  0A80               	xorlw	128
  1574   001348  6E09               	movwf	(??_fputc+4)^0,c
  1575   00134A  50DE               	movf	postinc2,w,c
  1576   00134C  0A80               	xorlw	128
  1577   00134E  5809               	subwfb	(??_fputc+4)^0,w,c
  1578   001350  B0D8               	btfsc	status,0,c
  1579   001352  EFAD  F009         	goto	u561
  1580   001356  EFAF  F009         	goto	u560
  1581   00135A                     u561:
  1582   00135A  EFD2  F009         	goto	l995
  1583   00135E                     u560:
  1584   00135E                     l1424:
  1585   00135E  EE20 F003          	lfsr	2,3
  1586   001362  5003               	movf	fputc@fp^0,w,c
  1587   001364  26D9               	addwf	fsr2l,f,c
  1588   001366  5004               	movf	(fputc@fp+1)^0,w,c
  1589   001368  22DA               	addwfc	fsr2h,f,c
  1590   00136A  CFDE F005          	movff	postinc2,??_fputc
  1591   00136E  CFDD F006          	movff	postdec2,??_fputc+1
  1592   001372  C003  FFD9         	movff	fputc@fp,fsr2l
  1593   001376  C004  FFDA         	movff	fputc@fp+1,fsr2h
  1594   00137A  CFDE F007          	movff	postinc2,??_fputc+2
  1595   00137E  CFDD F008          	movff	postdec2,??_fputc+3
  1596   001382  5005               	movf	??_fputc^0,w,c
  1597   001384  2407               	addwf	(??_fputc+2)^0,w,c
  1598   001386  6ED9               	movwf	fsr2l,c
  1599   001388  5006               	movf	(??_fputc+1)^0,w,c
  1600   00138A  2008               	addwfc	(??_fputc+3)^0,w,c
  1601   00138C  6EDA               	movwf	fsr2h,c
  1602   00138E  C001  FFDF         	movff	fputc@c,indf2
  1603   001392  EE20 F003          	lfsr	2,3
  1604   001396  5003               	movf	fputc@fp^0,w,c
  1605   001398  26D9               	addwf	fsr2l,f,c
  1606   00139A  5004               	movf	(fputc@fp+1)^0,w,c
  1607   00139C  22DA               	addwfc	fsr2h,f,c
  1608   00139E  2ADE               	incf	postinc2,f,c
  1609   0013A0  0E00               	movlw	0
  1610   0013A2  22DD               	addwfc	postdec2,f,c
  1611   0013A4                     l995:
  1612   0013A4  0012               	return		;funcret
  1613   0013A6                     __end_of_fputc:
  1614                           	callstack 0
  1615                           
  1616 ;; *************** function _putch *****************
  1617 ;; Defined at:
  1618 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\putch.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;  c               1    wreg     unsigned char 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  c               1    0[COMRAM] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1636 ;;Total ram usage:        0 bytes
  1637 ;; Hardware stack levels used: 1
  1638 ;; This function calls:
  1639 ;;		Nothing
  1640 ;; This function is called by:
  1641 ;;		_fputc
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           	psect	text8
  1646   001ACC                     __ptext8:
  1647                           	callstack 0
  1648   001ACC                     _putch:
  1649                           	callstack 26
  1650   001ACC  0012               	return		;funcret
  1651   001ACE                     __end_of_putch:
  1652                           	callstack 0
  1653                           
  1654 ;; *************** function _abs *****************
  1655 ;; Defined at:
  1656 ;;		line 1 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  a               2    6[COMRAM] int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;		None
  1661 ;; Return value:  Size  Location     Type
  1662 ;;                  2    6[COMRAM] int 
  1663 ;; Registers used:
  1664 ;;		wreg, status,2, status,0
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1672 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1673 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1674 ;;Total ram usage:        4 bytes
  1675 ;; Hardware stack levels used: 1
  1676 ;; This function calls:
  1677 ;;		Nothing
  1678 ;; This function is called by:
  1679 ;;		_dtoa
  1680 ;; This function uses a non-reentrant model
  1681 ;;
  1682                           
  1683                           	psect	text9
  1684   0018A6                     __ptext9:
  1685                           	callstack 0
  1686   0018A6                     _abs:
  1687                           	callstack 26
  1688   0018A6  BE08               	btfsc	(abs@a+1)^0,7,c
  1689   0018A8  EF60  F00C         	goto	u720
  1690   0018AC  5008               	movf	(abs@a+1)^0,w,c
  1691   0018AE  E106               	bnz	u721
  1692   0018B0  0407               	decf	abs@a^0,w,c
  1693   0018B2  B0D8               	btfsc	status,0,c
  1694   0018B4  EF5E  F00C         	goto	u721
  1695   0018B8  EF60  F00C         	goto	u720
  1696   0018BC                     u721:
  1697   0018BC  EF6E  F00C         	goto	l980
  1698   0018C0                     u720:
  1699   0018C0  C007  F009         	movff	abs@a,??_abs
  1700   0018C4  C008  F00A         	movff	abs@a+1,??_abs+1
  1701   0018C8  1E09               	comf	??_abs^0,f,c
  1702   0018CA  1E0A               	comf	(??_abs+1)^0,f,c
  1703   0018CC  4A09               	infsnz	??_abs^0,f,c
  1704   0018CE  2A0A               	incf	(??_abs+1)^0,f,c
  1705   0018D0  C009  F007         	movff	??_abs,?_abs
  1706   0018D4  C00A  F008         	movff	??_abs+1,?_abs+1
  1707   0018D8  EF72  F00C         	goto	l983
  1708   0018DC                     l980:
  1709   0018DC  C007  F007         	movff	abs@a,?_abs
  1710   0018E0  C008  F008         	movff	abs@a+1,?_abs+1
  1711   0018E4                     l983:
  1712   0018E4  0012               	return		;funcret
  1713   0018E6                     __end_of_abs:
  1714                           	callstack 0
  1715                           
  1716 ;; *************** function ___awmod *****************
  1717 ;; Defined at:
  1718 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  dividend        2    0[COMRAM] int 
  1721 ;;  divisor         2    2[COMRAM] int 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  sign            1    5[COMRAM] unsigned char 
  1724 ;;  counter         1    4[COMRAM] unsigned char 
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  2    0[COMRAM] int 
  1727 ;; Registers used:
  1728 ;;		wreg, status,2, status,0
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1734 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1737 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1738 ;;Total ram usage:        6 bytes
  1739 ;; Hardware stack levels used: 1
  1740 ;; This function calls:
  1741 ;;		Nothing
  1742 ;; This function is called by:
  1743 ;;		_dtoa
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           	psect	text10
  1748   00151A                     __ptext10:
  1749                           	callstack 0
  1750   00151A                     ___awmod:
  1751                           	callstack 26
  1752   00151A  0E00               	movlw	0
  1753   00151C  6E06               	movwf	___awmod@sign^0,c
  1754   00151E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  1755   001520  EF96  F00A         	goto	u640
  1756   001524  EF94  F00A         	goto	u641
  1757   001528                     u641:
  1758   001528  EF9C  F00A         	goto	l1488
  1759   00152C                     u640:
  1760   00152C  6C01               	negf	___awmod@dividend^0,c
  1761   00152E  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1762   001530  B0D8               	btfsc	status,0,c
  1763   001532  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1764   001534  0E01               	movlw	1
  1765   001536  6E06               	movwf	___awmod@sign^0,c
  1766   001538                     l1488:
  1767   001538  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  1768   00153A  EFA3  F00A         	goto	u650
  1769   00153E  EFA1  F00A         	goto	u651
  1770   001542                     u651:
  1771   001542  EFA7  F00A         	goto	l1492
  1772   001546                     u650:
  1773   001546  6C03               	negf	___awmod@divisor^0,c
  1774   001548  1E04               	comf	(___awmod@divisor+1)^0,f,c
  1775   00154A  B0D8               	btfsc	status,0,c
  1776   00154C  2A04               	incf	(___awmod@divisor+1)^0,f,c
  1777   00154E                     l1492:
  1778   00154E  5003               	movf	___awmod@divisor^0,w,c
  1779   001550  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  1780   001552  B4D8               	btfsc	status,2,c
  1781   001554  EFAE  F00A         	goto	u661
  1782   001558  EFB0  F00A         	goto	u660
  1783   00155C                     u661:
  1784   00155C  EFD4  F00A         	goto	l1508
  1785   001560                     u660:
  1786   001560  0E01               	movlw	1
  1787   001562  6E05               	movwf	___awmod@counter^0,c
  1788   001564  EFB8  F00A         	goto	l1498
  1789   001568                     l1496:
  1790   001568  90D8               	bcf	status,0,c
  1791   00156A  3603               	rlcf	___awmod@divisor^0,f,c
  1792   00156C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  1793   00156E  2A05               	incf	___awmod@counter^0,f,c
  1794   001570                     l1498:
  1795   001570  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  1796   001572  EFBD  F00A         	goto	u671
  1797   001576  EFBF  F00A         	goto	u670
  1798   00157A                     u671:
  1799   00157A  EFB4  F00A         	goto	l1496
  1800   00157E                     u670:
  1801   00157E                     l1500:
  1802   00157E  5003               	movf	___awmod@divisor^0,w,c
  1803   001580  5C01               	subwf	___awmod@dividend^0,w,c
  1804   001582  5004               	movf	(___awmod@divisor+1)^0,w,c
  1805   001584  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  1806   001586  A0D8               	btfss	status,0,c
  1807   001588  EFC8  F00A         	goto	u681
  1808   00158C  EFCA  F00A         	goto	u680
  1809   001590                     u681:
  1810   001590  EFCE  F00A         	goto	l1504
  1811   001594                     u680:
  1812   001594  5003               	movf	___awmod@divisor^0,w,c
  1813   001596  5E01               	subwf	___awmod@dividend^0,f,c
  1814   001598  5004               	movf	(___awmod@divisor+1)^0,w,c
  1815   00159A  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  1816   00159C                     l1504:
  1817   00159C  90D8               	bcf	status,0,c
  1818   00159E  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  1819   0015A0  3203               	rrcf	___awmod@divisor^0,f,c
  1820   0015A2  2E05               	decfsz	___awmod@counter^0,f,c
  1821   0015A4  EFBF  F00A         	goto	l1500
  1822   0015A8                     l1508:
  1823   0015A8  5006               	movf	___awmod@sign^0,w,c
  1824   0015AA  B4D8               	btfsc	status,2,c
  1825   0015AC  EFDA  F00A         	goto	u691
  1826   0015B0  EFDC  F00A         	goto	u690
  1827   0015B4                     u691:
  1828   0015B4  EFE0  F00A         	goto	l1512
  1829   0015B8                     u690:
  1830   0015B8  6C01               	negf	___awmod@dividend^0,c
  1831   0015BA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  1832   0015BC  B0D8               	btfsc	status,0,c
  1833   0015BE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  1834   0015C0                     l1512:
  1835   0015C0  C001  F001         	movff	___awmod@dividend,?___awmod
  1836   0015C4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  1837   0015C8  0012               	return		;funcret
  1838   0015CA                     __end_of___awmod:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function ___awdiv *****************
  1842 ;; Defined at:
  1843 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;  dividend        2    0[COMRAM] int 
  1846 ;;  divisor         2    2[COMRAM] int 
  1847 ;; Auto vars:     Size  Location     Type
  1848 ;;  quotient        2    6[COMRAM] int 
  1849 ;;  sign            1    5[COMRAM] unsigned char 
  1850 ;;  counter         1    4[COMRAM] unsigned char 
  1851 ;; Return value:  Size  Location     Type
  1852 ;;                  2    0[COMRAM] int 
  1853 ;; Registers used:
  1854 ;;		wreg, status,2, status,0
  1855 ;; Tracked objects:
  1856 ;;		On entry : 0/0
  1857 ;;		On exit  : 0/0
  1858 ;;		Unchanged: 0/0
  1859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1860 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1861 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1863 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1864 ;;Total ram usage:        8 bytes
  1865 ;; Hardware stack levels used: 1
  1866 ;; This function calls:
  1867 ;;		Nothing
  1868 ;; This function is called by:
  1869 ;;		_dtoa
  1870 ;; This function uses a non-reentrant model
  1871 ;;
  1872                           
  1873                           	psect	text11
  1874   0013A6                     __ptext11:
  1875                           	callstack 0
  1876   0013A6                     ___awdiv:
  1877                           	callstack 26
  1878   0013A6  0E00               	movlw	0
  1879   0013A8  6E06               	movwf	___awdiv@sign^0,c
  1880   0013AA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  1881   0013AC  EFDC  F009         	goto	u580
  1882   0013B0  EFDA  F009         	goto	u581
  1883   0013B4                     u581:
  1884   0013B4  EFE2  F009         	goto	l1444
  1885   0013B8                     u580:
  1886   0013B8  6C03               	negf	___awdiv@divisor^0,c
  1887   0013BA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  1888   0013BC  B0D8               	btfsc	status,0,c
  1889   0013BE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  1890   0013C0  0E01               	movlw	1
  1891   0013C2  6E06               	movwf	___awdiv@sign^0,c
  1892   0013C4                     l1444:
  1893   0013C4  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  1894   0013C6  EFE9  F009         	goto	u590
  1895   0013CA  EFE7  F009         	goto	u591
  1896   0013CE                     u591:
  1897   0013CE  EFEF  F009         	goto	l1450
  1898   0013D2                     u590:
  1899   0013D2  6C01               	negf	___awdiv@dividend^0,c
  1900   0013D4  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  1901   0013D6  B0D8               	btfsc	status,0,c
  1902   0013D8  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  1903   0013DA  0E01               	movlw	1
  1904   0013DC  1A06               	xorwf	___awdiv@sign^0,f,c
  1905   0013DE                     l1450:
  1906   0013DE  0E00               	movlw	0
  1907   0013E0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  1908   0013E2  0E00               	movlw	0
  1909   0013E4  6E07               	movwf	___awdiv@quotient^0,c
  1910   0013E6  5003               	movf	___awdiv@divisor^0,w,c
  1911   0013E8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  1912   0013EA  B4D8               	btfsc	status,2,c
  1913   0013EC  EFFA  F009         	goto	u601
  1914   0013F0  EFFC  F009         	goto	u600
  1915   0013F4                     u601:
  1916   0013F4  EF24  F00A         	goto	l1472
  1917   0013F8                     u600:
  1918   0013F8  0E01               	movlw	1
  1919   0013FA  6E05               	movwf	___awdiv@counter^0,c
  1920   0013FC  EF04  F00A         	goto	l1458
  1921   001400                     l1456:
  1922   001400  90D8               	bcf	status,0,c
  1923   001402  3603               	rlcf	___awdiv@divisor^0,f,c
  1924   001404  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  1925   001406  2A05               	incf	___awdiv@counter^0,f,c
  1926   001408                     l1458:
  1927   001408  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  1928   00140A  EF09  F00A         	goto	u611
  1929   00140E  EF0B  F00A         	goto	u610
  1930   001412                     u611:
  1931   001412  EF00  F00A         	goto	l1456
  1932   001416                     u610:
  1933   001416                     l1460:
  1934   001416  90D8               	bcf	status,0,c
  1935   001418  3607               	rlcf	___awdiv@quotient^0,f,c
  1936   00141A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  1937   00141C  5003               	movf	___awdiv@divisor^0,w,c
  1938   00141E  5C01               	subwf	___awdiv@dividend^0,w,c
  1939   001420  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1940   001422  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  1941   001424  A0D8               	btfss	status,0,c
  1942   001426  EF17  F00A         	goto	u621
  1943   00142A  EF19  F00A         	goto	u620
  1944   00142E                     u621:
  1945   00142E  EF1E  F00A         	goto	l1468
  1946   001432                     u620:
  1947   001432  5003               	movf	___awdiv@divisor^0,w,c
  1948   001434  5E01               	subwf	___awdiv@dividend^0,f,c
  1949   001436  5004               	movf	(___awdiv@divisor+1)^0,w,c
  1950   001438  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  1951   00143A  8007               	bsf	___awdiv@quotient^0,0,c
  1952   00143C                     l1468:
  1953   00143C  90D8               	bcf	status,0,c
  1954   00143E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  1955   001440  3203               	rrcf	___awdiv@divisor^0,f,c
  1956   001442  2E05               	decfsz	___awdiv@counter^0,f,c
  1957   001444  EF0B  F00A         	goto	l1460
  1958   001448                     l1472:
  1959   001448  5006               	movf	___awdiv@sign^0,w,c
  1960   00144A  B4D8               	btfsc	status,2,c
  1961   00144C  EF2A  F00A         	goto	u631
  1962   001450  EF2C  F00A         	goto	u630
  1963   001454                     u631:
  1964   001454  EF30  F00A         	goto	l1476
  1965   001458                     u630:
  1966   001458  6C07               	negf	___awdiv@quotient^0,c
  1967   00145A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  1968   00145C  B0D8               	btfsc	status,0,c
  1969   00145E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  1970   001460                     l1476:
  1971   001460  C007  F001         	movff	___awdiv@quotient,?___awdiv
  1972   001464  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  1973   001468  0012               	return		;funcret
  1974   00146A                     __end_of___awdiv:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function _SYSTEM_Initialize *****************
  1978 ;; Defined at:
  1979 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;		None
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;		None
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0, cstack
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1997 ;;Total ram usage:        0 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; Hardware stack levels required when called: 2
  2000 ;; This function calls:
  2001 ;;		_ADC_Initialize
  2002 ;;		_EUSART_Initialize
  2003 ;;		_OSCILLATOR_Initialize
  2004 ;;		_PIN_MANAGER_Initialize
  2005 ;; This function is called by:
  2006 ;;		_main
  2007 ;; This function uses a non-reentrant model
  2008 ;;
  2009                           
  2010                           	psect	text12
  2011   001A8E                     __ptext12:
  2012                           	callstack 0
  2013   001A8E                     _SYSTEM_Initialize:
  2014                           	callstack 28
  2015   001A8E                     
  2016                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  2017   001A8E  ECCC  F00C         	call	_PIN_MANAGER_Initialize	;wreg free
  2018                           
  2019                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  2020   001A92  EC50  F00D         	call	_OSCILLATOR_Initialize	;wreg free
  2021                           
  2022                           ;mcc_generated_files/mcc.c: 55:     ADC_Initialize();
  2023   001A96  EC27  F00D         	call	_ADC_Initialize	;wreg free
  2024   001A9A                     
  2025                           ;mcc_generated_files/mcc.c: 56:     EUSART_Initialize();
  2026   001A9A  EC73  F00C         	call	_EUSART_Initialize	;wreg free
  2027   001A9E  0012               	return		;funcret
  2028   001AA0                     __end_of_SYSTEM_Initialize:
  2029                           	callstack 0
  2030                           
  2031 ;; *************** function _PIN_MANAGER_Initialize *****************
  2032 ;; Defined at:
  2033 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2034 ;; Parameters:    Size  Location     Type
  2035 ;;		None
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;		None
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  1    wreg      void 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;Total ram usage:        0 bytes
  2052 ;; Hardware stack levels used: 1
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_SYSTEM_Initialize
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           	psect	text13
  2061   001998                     __ptext13:
  2062                           	callstack 0
  2063   001998                     _PIN_MANAGER_Initialize:
  2064                           	callstack 29
  2065   001998                     
  2066                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  2067   001998  0E00               	movlw	0
  2068   00199A  6E8D               	movwf	141,c	;volatile
  2069                           
  2070                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  2071   00199C  0E00               	movlw	0
  2072   00199E  6E8C               	movwf	140,c	;volatile
  2073                           
  2074                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  2075   0019A0  0E00               	movlw	0
  2076   0019A2  6E89               	movwf	137,c	;volatile
  2077                           
  2078                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  2079   0019A4  0E00               	movlw	0
  2080   0019A6  6E8A               	movwf	138,c	;volatile
  2081                           
  2082                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  2083   0019A8  0E00               	movlw	0
  2084   0019AA  6E8B               	movwf	139,c	;volatile
  2085                           
  2086                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  2087   0019AC  0E07               	movlw	7
  2088   0019AE  6E96               	movwf	150,c	;volatile
  2089   0019B0                     
  2090                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  2091   0019B0  6892               	setf	146,c	;volatile
  2092   0019B2                     
  2093                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  2094   0019B2  6893               	setf	147,c	;volatile
  2095                           
  2096                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  2097   0019B4  0EBF               	movlw	191
  2098   0019B6  6E94               	movwf	148,c	;volatile
  2099                           
  2100                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xF7;
  2101   0019B8  0EF7               	movlw	247
  2102   0019BA  6E95               	movwf	149,c	;volatile
  2103   0019BC                     
  2104                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  2105   0019BC  687E               	setf	126,c	;volatile
  2106                           
  2107                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  2108   0019BE  0E1F               	movlw	31
  2109   0019C0  6E7F               	movwf	127,c	;volatile
  2110                           
  2111                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  2112   0019C2  0E00               	movlw	0
  2113   0019C4  6E7C               	movwf	124,c	;volatile
  2114   0019C6                     
  2115                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  2116   0019C6  8EF1               	bsf	241,7,c	;volatile
  2117   0019C8  0012               	return		;funcret
  2118   0019CA                     __end_of_PIN_MANAGER_Initialize:
  2119                           	callstack 0
  2120                           
  2121 ;; *************** function _OSCILLATOR_Initialize *****************
  2122 ;; Defined at:
  2123 ;;		line 59 in file "mcc_generated_files/mcc.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;		None
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;		None
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      void 
  2130 ;; Registers used:
  2131 ;;		wreg, status,2
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;Total ram usage:        0 bytes
  2142 ;; Hardware stack levels used: 1
  2143 ;; This function calls:
  2144 ;;		Nothing
  2145 ;; This function is called by:
  2146 ;;		_SYSTEM_Initialize
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text14
  2151   001AA0                     __ptext14:
  2152                           	callstack 0
  2153   001AA0                     _OSCILLATOR_Initialize:
  2154                           	callstack 29
  2155   001AA0                     
  2156                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x30;
  2157   001AA0  0E30               	movlw	48
  2158   001AA2  6ED3               	movwf	211,c	;volatile
  2159                           
  2160                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  2161   001AA4  0E00               	movlw	0
  2162   001AA6  6E9B               	movwf	155,c	;volatile
  2163   001AA8  0012               	return		;funcret
  2164   001AAA                     __end_of_OSCILLATOR_Initialize:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _EUSART_Initialize *****************
  2168 ;; Defined at:
  2169 ;;		line 66 in file "mcc_generated_files/eusart.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 0/0
  2180 ;;		On exit  : 0/0
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 1
  2190 ;; This function calls:
  2191 ;;		_EUSART_SetErrorHandler
  2192 ;;		_EUSART_SetFramingErrorHandler
  2193 ;;		_EUSART_SetOverrunErrorHandler
  2194 ;; This function is called by:
  2195 ;;		_SYSTEM_Initialize
  2196 ;; This function uses a non-reentrant model
  2197 ;;
  2198                           
  2199                           	psect	text15
  2200   0018E6                     __ptext15:
  2201                           	callstack 0
  2202   0018E6                     _EUSART_Initialize:
  2203                           	callstack 28
  2204   0018E6                     
  2205                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  2206   0018E6  0E08               	movlw	8
  2207   0018E8  6EB8               	movwf	184,c	;volatile
  2208                           
  2209                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  2210   0018EA  0E90               	movlw	144
  2211   0018EC  6EAB               	movwf	171,c	;volatile
  2212                           
  2213                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  2214   0018EE  0E24               	movlw	36
  2215   0018F0  6EAC               	movwf	172,c	;volatile
  2216                           
  2217                           ;mcc_generated_files/eusart.c: 80:     SPBRG = 0x19;
  2218   0018F2  0E19               	movlw	25
  2219   0018F4  6EAF               	movwf	175,c	;volatile
  2220                           
  2221                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  2222   0018F6  0E00               	movlw	0
  2223   0018F8  6EB0               	movwf	176,c	;volatile
  2224   0018FA                     
  2225                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  2226   0018FA  0E00               	movlw	0
  2227   0018FC  6E01               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
  2228   0018FE  0E00               	movlw	0
  2229   001900  6E02               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
  2230   001902  EC5A  F00D         	call	_EUSART_SetFramingErrorHandler	;wreg free
  2231   001906                     
  2232                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  2233   001906  0E00               	movlw	0
  2234   001908  6E01               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
  2235   00190A  0E00               	movlw	0
  2236   00190C  6E02               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
  2237   00190E  EC55  F00D         	call	_EUSART_SetOverrunErrorHandler	;wreg free
  2238   001912                     
  2239                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  2240   001912  0E00               	movlw	0
  2241   001914  6E01               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
  2242   001916  0E00               	movlw	0
  2243   001918  6E02               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
  2244   00191A  EC5F  F00D         	call	_EUSART_SetErrorHandler	;wreg free
  2245   00191E                     
  2246                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  2247   00191E  0E00               	movlw	0
  2248   001920  6E5E               	movwf	_eusartRxLastError^0,c	;volatile
  2249   001922  0012               	return		;funcret
  2250   001924                     __end_of_EUSART_Initialize:
  2251                           	callstack 0
  2252                           
  2253 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  2254 ;; Defined at:
  2255 ;;		line 170 in file "mcc_generated_files/eusart.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2258 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;		None
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      void 
  2263 ;; Registers used:
  2264 ;;		wreg, status,2, status,0
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2270 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;Total ram usage:        2 bytes
  2275 ;; Hardware stack levels used: 1
  2276 ;; This function calls:
  2277 ;;		Nothing
  2278 ;; This function is called by:
  2279 ;;		_EUSART_Initialize
  2280 ;; This function uses a non-reentrant model
  2281 ;;
  2282                           
  2283                           	psect	text16
  2284   001AAA                     __ptext16:
  2285                           	callstack 0
  2286   001AAA                     _EUSART_SetOverrunErrorHandler:
  2287                           	callstack 28
  2288   001AAA                     
  2289                           ;mcc_generated_files/eusart.c: 171:     EUSART_OverrunErrorHandler = interruptHandler;
  2290   001AAA  C001  F0BC         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
  2291   001AAE  C002  F0BD         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
  2292   001AB2  0012               	return		;funcret
  2293   001AB4                     __end_of_EUSART_SetOverrunErrorHandler:
  2294                           	callstack 0
  2295                           
  2296 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  2297 ;; Defined at:
  2298 ;;		line 166 in file "mcc_generated_files/eusart.c"
  2299 ;; Parameters:    Size  Location     Type
  2300 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2301 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;		None
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  1    wreg      void 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2313 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;Total ram usage:        2 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_EUSART_Initialize
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326                           	psect	text17
  2327   001AB4                     __ptext17:
  2328                           	callstack 0
  2329   001AB4                     _EUSART_SetFramingErrorHandler:
  2330                           	callstack 28
  2331   001AB4                     
  2332                           ;mcc_generated_files/eusart.c: 167:     EUSART_FramingErrorHandler = interruptHandler;
  2333   001AB4  C001  F0BE         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
  2334   001AB8  C002  F0BF         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
  2335   001ABC  0012               	return		;funcret
  2336   001ABE                     __end_of_EUSART_SetFramingErrorHandler:
  2337                           	callstack 0
  2338                           
  2339 ;; *************** function _EUSART_SetErrorHandler *****************
  2340 ;; Defined at:
  2341 ;;		line 174 in file "mcc_generated_files/eusart.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  interruptHan    2    0[COMRAM] PTR FTN()void 
  2344 ;;		 -> EUSART_DefaultErrorHandler(1), 
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2, status,0
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2359 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2360 ;;Total ram usage:        2 bytes
  2361 ;; Hardware stack levels used: 1
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_EUSART_Initialize
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text18
  2370   001ABE                     __ptext18:
  2371                           	callstack 0
  2372   001ABE                     _EUSART_SetErrorHandler:
  2373                           	callstack 28
  2374   001ABE                     
  2375                           ;mcc_generated_files/eusart.c: 175:     EUSART_ErrorHandler = interruptHandler;
  2376   001ABE  C001  F0BA         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
  2377   001AC2  C002  F0BB         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
  2378   001AC6  0012               	return		;funcret
  2379   001AC8                     __end_of_EUSART_SetErrorHandler:
  2380                           	callstack 0
  2381                           
  2382 ;; *************** function _ADC_Initialize *****************
  2383 ;; Defined at:
  2384 ;;		line 62 in file "mcc_generated_files/adc.c"
  2385 ;; Parameters:    Size  Location     Type
  2386 ;;		None
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;		None
  2389 ;; Return value:  Size  Location     Type
  2390 ;;                  1    wreg      void 
  2391 ;; Registers used:
  2392 ;;		wreg, status,2
  2393 ;; Tracked objects:
  2394 ;;		On entry : 0/0
  2395 ;;		On exit  : 0/0
  2396 ;;		Unchanged: 0/0
  2397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2402 ;;Total ram usage:        0 bytes
  2403 ;; Hardware stack levels used: 1
  2404 ;; This function calls:
  2405 ;;		Nothing
  2406 ;; This function is called by:
  2407 ;;		_SYSTEM_Initialize
  2408 ;; This function uses a non-reentrant model
  2409 ;;
  2410                           
  2411                           	psect	text19
  2412   001A4E                     __ptext19:
  2413                           	callstack 0
  2414   001A4E                     _ADC_Initialize:
  2415                           	callstack 29
  2416   001A4E                     
  2417                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
  2418   001A4E  0E00               	movlw	0
  2419   001A50  6EC1               	movwf	193,c	;volatile
  2420                           
  2421                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x00;
  2422   001A52  0E00               	movlw	0
  2423   001A54  6EC0               	movwf	192,c	;volatile
  2424                           
  2425                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
  2426   001A56  0E00               	movlw	0
  2427   001A58  6EC3               	movwf	195,c	;volatile
  2428                           
  2429                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
  2430   001A5A  0E00               	movlw	0
  2431   001A5C  6EC4               	movwf	196,c	;volatile
  2432                           
  2433                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
  2434   001A5E  0E01               	movlw	1
  2435   001A60  6EC2               	movwf	194,c	;volatile
  2436   001A62  0012               	return		;funcret
  2437   001A64                     __end_of_ADC_Initialize:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _EUSART_is_tx_ready *****************
  2441 ;; Defined at:
  2442 ;;		line 94 in file "mcc_generated_files/eusart.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;		None
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  1    wreg      _Bool 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2457 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2459 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2460 ;;Total ram usage:        1 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; This function calls:
  2463 ;;		Nothing
  2464 ;; This function is called by:
  2465 ;;		_main
  2466 ;; This function uses a non-reentrant model
  2467 ;;
  2468                           
  2469                           	psect	text20
  2470   0019CA                     __ptext20:
  2471                           	callstack 0
  2472   0019CA                     _EUSART_is_tx_ready:
  2473                           	callstack 30
  2474   0019CA                     
  2475                           ;mcc_generated_files/eusart.c: 96:     return (_Bool)(PIR1bits.TX1IF && TXSTAbits.TXEN);
  2476   0019CA  0E00               	movlw	0
  2477   0019CC  6E01               	movwf	_EUSART_is_tx_ready$426^0,c
  2478   0019CE  A89E               	btfss	158,4,c	;volatile
  2479   0019D0  EFEC  F00C         	goto	u971
  2480   0019D4  EFEE  F00C         	goto	u970
  2481   0019D8                     u971:
  2482   0019D8  EFF7  F00C         	goto	l136
  2483   0019DC                     u970:
  2484   0019DC  AAAC               	btfss	172,5,c	;volatile
  2485   0019DE  EFF3  F00C         	goto	u981
  2486   0019E2  EFF5  F00C         	goto	u980
  2487   0019E6                     u981:
  2488   0019E6  EFF7  F00C         	goto	l136
  2489   0019EA                     u980:
  2490   0019EA  0E01               	movlw	1
  2491   0019EC  6E01               	movwf	_EUSART_is_tx_ready$426^0,c
  2492   0019EE                     l136:
  2493   0019EE  5001               	movf	_EUSART_is_tx_ready$426^0,w,c
  2494   0019F0  0012               	return		;funcret
  2495   0019F2                     __end_of_EUSART_is_tx_ready:
  2496                           	callstack 0
  2497                           
  2498 ;; *************** function _EUSART_Write *****************
  2499 ;; Defined at:
  2500 ;;		line 140 in file "mcc_generated_files/eusart.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  txData          2    1[COMRAM] PTR unsigned char 
  2503 ;;		 -> main@bufferWrite(50), 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  i               1    3[COMRAM] unsigned char 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2515 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;Total ram usage:        3 bytes
  2520 ;; Hardware stack levels used: 1
  2521 ;; Hardware stack levels required when called: 1
  2522 ;; This function calls:
  2523 ;;		_EUSART_WriteByte
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text21
  2530   001924                     __ptext21:
  2531                           	callstack 0
  2532   001924                     _EUSART_Write:
  2533                           	callstack 29
  2534   001924                     
  2535                           ;mcc_generated_files/eusart.c: 140: void EUSART_Write(uint8_t *txData);mcc_generated_fil
      +                          es/eusart.c: 141: {;mcc_generated_files/eusart.c: 142:     uint8_t i=0;
  2536   001924  0E00               	movlw	0
  2537   001926  6E04               	movwf	EUSART_Write@i^0,c
  2538                           
  2539                           ;mcc_generated_files/eusart.c: 143:     while(txData[i]!='\0'){
  2540   001928  EFA0  F00C         	goto	l1766
  2541   00192C                     l1762:
  2542                           
  2543                           ;mcc_generated_files/eusart.c: 145:         EUSART_WriteByte(txData[i]);
  2544   00192C  5004               	movf	EUSART_Write@i^0,w,c
  2545   00192E  2402               	addwf	EUSART_Write@txData^0,w,c
  2546   001930  6ED9               	movwf	fsr2l,c
  2547   001932  0E00               	movlw	0
  2548   001934  2003               	addwfc	(EUSART_Write@txData+1)^0,w,c
  2549   001936  6EDA               	movwf	fsr2h,c
  2550   001938  50DF               	movf	indf2,w,c
  2551   00193A  EC32  F00D         	call	_EUSART_WriteByte
  2552   00193E                     
  2553                           ;mcc_generated_files/eusart.c: 146:          i++;
  2554   00193E  2A04               	incf	EUSART_Write@i^0,f,c
  2555   001940                     l1766:
  2556                           
  2557                           ;mcc_generated_files/eusart.c: 143:     while(txData[i]!='\0'){
  2558   001940  5004               	movf	EUSART_Write@i^0,w,c
  2559   001942  2402               	addwf	EUSART_Write@txData^0,w,c
  2560   001944  6ED9               	movwf	fsr2l,c
  2561   001946  0E00               	movlw	0
  2562   001948  2003               	addwfc	(EUSART_Write@txData+1)^0,w,c
  2563   00194A  6EDA               	movwf	fsr2h,c
  2564   00194C  50DF               	movf	indf2,w,c
  2565   00194E  A4D8               	btfss	status,2,c
  2566   001950  EFAC  F00C         	goto	u991
  2567   001954  EFAE  F00C         	goto	u990
  2568   001958                     u991:
  2569   001958  EF96  F00C         	goto	l1762
  2570   00195C                     u990:
  2571   00195C  0012               	return		;funcret
  2572   00195E                     __end_of_EUSART_Write:
  2573                           	callstack 0
  2574                           
  2575 ;; *************** function _EUSART_WriteByte *****************
  2576 ;; Defined at:
  2577 ;;		line 132 in file "mcc_generated_files/eusart.c"
  2578 ;; Parameters:    Size  Location     Type
  2579 ;;  txData          1    wreg     unsigned char 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  txData          1    0[COMRAM] unsigned char 
  2582 ;; Return value:  Size  Location     Type
  2583 ;;                  1    wreg      void 
  2584 ;; Registers used:
  2585 ;;		wreg
  2586 ;; Tracked objects:
  2587 ;;		On entry : 0/0
  2588 ;;		On exit  : 0/0
  2589 ;;		Unchanged: 0/0
  2590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2595 ;;Total ram usage:        1 bytes
  2596 ;; Hardware stack levels used: 1
  2597 ;; This function calls:
  2598 ;;		Nothing
  2599 ;; This function is called by:
  2600 ;;		_EUSART_Write
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text22
  2605   001A64                     __ptext22:
  2606                           	callstack 0
  2607   001A64                     _EUSART_WriteByte:
  2608                           	callstack 29
  2609                           
  2610                           ;incstack = 0
  2611                           ;EUSART_WriteByte@txData stored from wreg
  2612   001A64  6E01               	movwf	EUSART_WriteByte@txData^0,c
  2613   001A66                     l156:
  2614                           
  2615                           ;mcc_generated_files/eusart.c: 134:     while(0 == PIR1bits.TX1IF)
  2616   001A66  A89E               	btfss	158,4,c	;volatile
  2617   001A68  EF38  F00D         	goto	u861
  2618   001A6C  EF3A  F00D         	goto	u860
  2619   001A70                     u861:
  2620   001A70  EF33  F00D         	goto	l156
  2621   001A74                     u860:
  2622   001A74                     
  2623                           ;mcc_generated_files/eusart.c: 138:     TXREG = txData;
  2624   001A74  C001  FFAD         	movff	EUSART_WriteByte@txData,4013	;volatile
  2625   001A78  0012               	return		;funcret
  2626   001A7A                     __end_of_EUSART_WriteByte:
  2627                           	callstack 0
  2628                           
  2629 ;; *************** function _ConvertADCVoltage *****************
  2630 ;; Defined at:
  2631 ;;		line 55 in file "main.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  adc_conv_dat    2    7[COMRAM] unsigned int 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;Total ram usage:        2 bytes
  2650 ;; Hardware stack levels used: 1
  2651 ;; Hardware stack levels required when called: 1
  2652 ;; This function calls:
  2653 ;;		___lwdiv
  2654 ;;		___lwmod
  2655 ;;		___wmul
  2656 ;; This function is called by:
  2657 ;;		_main
  2658 ;; This function uses a non-reentrant model
  2659 ;;
  2660                           
  2661                           	psect	text23
  2662   0015CA                     __ptext23:
  2663                           	callstack 0
  2664   0015CA                     _ConvertADCVoltage:
  2665                           	callstack 29
  2666   0015CA                     
  2667                           ;main.c: 55: void ConvertADCVoltage ( unsigned int adc_conv_data );main.c: 56: {;main.c:
      +                           57:     adcVoltValue = (((50000)/(1024))*adc_conv_data);
  2668   0015CA  C008  F001         	movff	ConvertADCVoltage@adc_conv_data,___wmul@multiplier
  2669   0015CE  C009  F002         	movff	ConvertADCVoltage@adc_conv_data+1,___wmul@multiplier+1
  2670   0015D2  0E00               	movlw	0
  2671   0015D4  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2672   0015D6  0E30               	movlw	48
  2673   0015D8  6E03               	movwf	___wmul@multiplicand^0,c
  2674   0015DA  ECF9  F00C         	call	___wmul	;wreg free
  2675   0015DE  C001  F057         	movff	?___wmul,_adcVoltValue
  2676   0015E2  C002  F058         	movff	?___wmul+1,_adcVoltValue+1
  2677   0015E6                     
  2678                           ;main.c: 59:     adones = adcVoltValue/10000;
  2679   0015E6  C057  F001         	movff	_adcVoltValue,___lwdiv@dividend
  2680   0015EA  C058  F002         	movff	_adcVoltValue+1,___lwdiv@dividend+1
  2681   0015EE  0E27               	movlw	39
  2682   0015F0  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2683   0015F2  0E10               	movlw	16
  2684   0015F4  6E03               	movwf	___lwdiv@divisor^0,c
  2685   0015F6  EC77  F00B         	call	___lwdiv	;wreg free
  2686   0015FA  C001  F096         	movff	?___lwdiv,_adones
  2687   0015FE  C002  F097         	movff	?___lwdiv+1,_adones+1
  2688   001602                     
  2689                           ;main.c: 61:     adtenth = adcVoltValue/1000;
  2690   001602  C057  F001         	movff	_adcVoltValue,___lwdiv@dividend
  2691   001606  C058  F002         	movff	_adcVoltValue+1,___lwdiv@dividend+1
  2692   00160A  0E03               	movlw	3
  2693   00160C  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2694   00160E  0EE8               	movlw	232
  2695   001610  6E03               	movwf	___lwdiv@divisor^0,c
  2696   001612  EC77  F00B         	call	___lwdiv	;wreg free
  2697   001616  C001  F05B         	movff	?___lwdiv,_adtenth
  2698   00161A  C002  F05C         	movff	?___lwdiv+1,_adtenth+1
  2699   00161E                     
  2700                           ;main.c: 62:     adtenth = adtenth%10;
  2701   00161E  C05B  F001         	movff	_adtenth,___lwmod@dividend
  2702   001622  C05C  F002         	movff	_adtenth+1,___lwmod@dividend+1
  2703   001626  0E00               	movlw	0
  2704   001628  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2705   00162A  0E0A               	movlw	10
  2706   00162C  6E03               	movwf	___lwmod@divisor^0,c
  2707   00162E  ECB1  F00B         	call	___lwmod	;wreg free
  2708   001632  C001  F05B         	movff	?___lwmod,_adtenth
  2709   001636  C002  F05C         	movff	?___lwmod+1,_adtenth+1
  2710   00163A                     
  2711                           ;main.c: 64:     adhundredth = adcVoltValue/100;
  2712   00163A  C057  F001         	movff	_adcVoltValue,___lwdiv@dividend
  2713   00163E  C058  F002         	movff	_adcVoltValue+1,___lwdiv@dividend+1
  2714   001642  0E00               	movlw	0
  2715   001644  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2716   001646  0E64               	movlw	100
  2717   001648  6E03               	movwf	___lwdiv@divisor^0,c
  2718   00164A  EC77  F00B         	call	___lwdiv	;wreg free
  2719   00164E  C001  F059         	movff	?___lwdiv,_adhundredth
  2720   001652  C002  F05A         	movff	?___lwdiv+1,_adhundredth+1
  2721   001656                     
  2722                           ;main.c: 65:     adhundredth = adhundredth%10;
  2723   001656  C059  F001         	movff	_adhundredth,___lwmod@dividend
  2724   00165A  C05A  F002         	movff	_adhundredth+1,___lwmod@dividend+1
  2725   00165E  0E00               	movlw	0
  2726   001660  6E04               	movwf	(___lwmod@divisor+1)^0,c
  2727   001662  0E0A               	movlw	10
  2728   001664  6E03               	movwf	___lwmod@divisor^0,c
  2729   001666  ECB1  F00B         	call	___lwmod	;wreg free
  2730   00166A  C001  F059         	movff	?___lwmod,_adhundredth
  2731   00166E  C002  F05A         	movff	?___lwmod+1,_adhundredth+1
  2732   001672  0012               	return		;funcret
  2733   001674                     __end_of_ConvertADCVoltage:
  2734                           	callstack 0
  2735                           
  2736 ;; *************** function ___wmul *****************
  2737 ;; Defined at:
  2738 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  2739 ;; Parameters:    Size  Location     Type
  2740 ;;  multiplier      2    0[COMRAM] unsigned int 
  2741 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2742 ;; Auto vars:     Size  Location     Type
  2743 ;;  product         2    4[COMRAM] unsigned int 
  2744 ;; Return value:  Size  Location     Type
  2745 ;;                  2    0[COMRAM] unsigned int 
  2746 ;; Registers used:
  2747 ;;		wreg, status,2, status,0, prodl, prodh
  2748 ;; Tracked objects:
  2749 ;;		On entry : 0/0
  2750 ;;		On exit  : 0/0
  2751 ;;		Unchanged: 0/0
  2752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2754 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2756 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2757 ;;Total ram usage:        6 bytes
  2758 ;; Hardware stack levels used: 1
  2759 ;; This function calls:
  2760 ;;		Nothing
  2761 ;; This function is called by:
  2762 ;;		_ConvertADCVoltage
  2763 ;; This function uses a non-reentrant model
  2764 ;;
  2765                           
  2766                           	psect	text24
  2767   0019F2                     __ptext24:
  2768                           	callstack 0
  2769   0019F2                     ___wmul:
  2770                           	callstack 29
  2771   0019F2  5001               	movf	___wmul@multiplier^0,w,c
  2772   0019F4  0203               	mulwf	___wmul@multiplicand^0,c
  2773   0019F6  CFF3 F005          	movff	prodl,___wmul@product
  2774   0019FA  CFF4 F006          	movff	prodh,___wmul@product+1
  2775   0019FE  5001               	movf	___wmul@multiplier^0,w,c
  2776   001A00  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2777   001A02  50F3               	movf	243,w,c
  2778   001A04  2606               	addwf	(___wmul@product+1)^0,f,c
  2779   001A06  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2780   001A08  0203               	mulwf	___wmul@multiplicand^0,c
  2781   001A0A  50F3               	movf	243,w,c
  2782   001A0C  2606               	addwf	(___wmul@product+1)^0,f,c
  2783   001A0E  C005  F001         	movff	___wmul@product,?___wmul
  2784   001A12  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2785   001A16  0012               	return		;funcret
  2786   001A18                     __end_of___wmul:
  2787                           	callstack 0
  2788                           
  2789 ;; *************** function ___lwmod *****************
  2790 ;; Defined at:
  2791 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
  2792 ;; Parameters:    Size  Location     Type
  2793 ;;  dividend        2    0[COMRAM] unsigned int 
  2794 ;;  divisor         2    2[COMRAM] unsigned int 
  2795 ;; Auto vars:     Size  Location     Type
  2796 ;;  counter         1    4[COMRAM] unsigned char 
  2797 ;; Return value:  Size  Location     Type
  2798 ;;                  2    0[COMRAM] unsigned int 
  2799 ;; Registers used:
  2800 ;;		wreg, status,2, status,0
  2801 ;; Tracked objects:
  2802 ;;		On entry : 0/0
  2803 ;;		On exit  : 0/0
  2804 ;;		Unchanged: 0/0
  2805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2806 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;Total ram usage:        5 bytes
  2811 ;; Hardware stack levels used: 1
  2812 ;; This function calls:
  2813 ;;		Nothing
  2814 ;; This function is called by:
  2815 ;;		_ConvertADCVoltage
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text25
  2820   001762                     __ptext25:
  2821                           	callstack 0
  2822   001762                     ___lwmod:
  2823                           	callstack 29
  2824   001762  5003               	movf	___lwmod@divisor^0,w,c
  2825   001764  1004               	iorwf	(___lwmod@divisor+1)^0,w,c
  2826   001766  B4D8               	btfsc	status,2,c
  2827   001768  EFB8  F00B         	goto	u901
  2828   00176C  EFBA  F00B         	goto	u900
  2829   001770                     u901:
  2830   001770  EFDE  F00B         	goto	l741
  2831   001774                     u900:
  2832   001774  0E01               	movlw	1
  2833   001776  6E05               	movwf	___lwmod@counter^0,c
  2834   001778  EFC2  F00B         	goto	l1682
  2835   00177C                     l1680:
  2836   00177C  90D8               	bcf	status,0,c
  2837   00177E  3603               	rlcf	___lwmod@divisor^0,f,c
  2838   001780  3604               	rlcf	(___lwmod@divisor+1)^0,f,c
  2839   001782  2A05               	incf	___lwmod@counter^0,f,c
  2840   001784                     l1682:
  2841   001784  AE04               	btfss	(___lwmod@divisor+1)^0,7,c
  2842   001786  EFC7  F00B         	goto	u911
  2843   00178A  EFC9  F00B         	goto	u910
  2844   00178E                     u911:
  2845   00178E  EFBE  F00B         	goto	l1680
  2846   001792                     u910:
  2847   001792                     l1684:
  2848   001792  5003               	movf	___lwmod@divisor^0,w,c
  2849   001794  5C01               	subwf	___lwmod@dividend^0,w,c
  2850   001796  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2851   001798  5802               	subwfb	(___lwmod@dividend+1)^0,w,c
  2852   00179A  A0D8               	btfss	status,0,c
  2853   00179C  EFD2  F00B         	goto	u921
  2854   0017A0  EFD4  F00B         	goto	u920
  2855   0017A4                     u921:
  2856   0017A4  EFD8  F00B         	goto	l1688
  2857   0017A8                     u920:
  2858   0017A8  5003               	movf	___lwmod@divisor^0,w,c
  2859   0017AA  5E01               	subwf	___lwmod@dividend^0,f,c
  2860   0017AC  5004               	movf	(___lwmod@divisor+1)^0,w,c
  2861   0017AE  5A02               	subwfb	(___lwmod@dividend+1)^0,f,c
  2862   0017B0                     l1688:
  2863   0017B0  90D8               	bcf	status,0,c
  2864   0017B2  3204               	rrcf	(___lwmod@divisor+1)^0,f,c
  2865   0017B4  3203               	rrcf	___lwmod@divisor^0,f,c
  2866   0017B6  2E05               	decfsz	___lwmod@counter^0,f,c
  2867   0017B8  EFC9  F00B         	goto	l1684
  2868   0017BC                     l741:
  2869   0017BC  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2870   0017C0  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2871   0017C4  0012               	return		;funcret
  2872   0017C6                     __end_of___lwmod:
  2873                           	callstack 0
  2874                           
  2875 ;; *************** function ___lwdiv *****************
  2876 ;; Defined at:
  2877 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
  2878 ;; Parameters:    Size  Location     Type
  2879 ;;  dividend        2    0[COMRAM] unsigned int 
  2880 ;;  divisor         2    2[COMRAM] unsigned int 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  quotient        2    4[COMRAM] unsigned int 
  2883 ;;  counter         1    6[COMRAM] unsigned char 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  2    0[COMRAM] unsigned int 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2893 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2894 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2896 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;Total ram usage:        7 bytes
  2898 ;; Hardware stack levels used: 1
  2899 ;; This function calls:
  2900 ;;		Nothing
  2901 ;; This function is called by:
  2902 ;;		_ConvertADCVoltage
  2903 ;; This function uses a non-reentrant model
  2904 ;;
  2905                           
  2906                           	psect	text26
  2907   0016EE                     __ptext26:
  2908                           	callstack 0
  2909   0016EE                     ___lwdiv:
  2910                           	callstack 29
  2911   0016EE  0E00               	movlw	0
  2912   0016F0  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2913   0016F2  0E00               	movlw	0
  2914   0016F4  6E05               	movwf	___lwdiv@quotient^0,c
  2915   0016F6  5003               	movf	___lwdiv@divisor^0,w,c
  2916   0016F8  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2917   0016FA  B4D8               	btfsc	status,2,c
  2918   0016FC  EF82  F00B         	goto	u871
  2919   001700  EF84  F00B         	goto	u870
  2920   001704                     u871:
  2921   001704  EFAC  F00B         	goto	l731
  2922   001708                     u870:
  2923   001708  0E01               	movlw	1
  2924   00170A  6E07               	movwf	___lwdiv@counter^0,c
  2925   00170C  EF8C  F00B         	goto	l1662
  2926   001710                     l1660:
  2927   001710  90D8               	bcf	status,0,c
  2928   001712  3603               	rlcf	___lwdiv@divisor^0,f,c
  2929   001714  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2930   001716  2A07               	incf	___lwdiv@counter^0,f,c
  2931   001718                     l1662:
  2932   001718  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2933   00171A  EF91  F00B         	goto	u881
  2934   00171E  EF93  F00B         	goto	u880
  2935   001722                     u881:
  2936   001722  EF88  F00B         	goto	l1660
  2937   001726                     u880:
  2938   001726                     l1664:
  2939   001726  90D8               	bcf	status,0,c
  2940   001728  3605               	rlcf	___lwdiv@quotient^0,f,c
  2941   00172A  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2942   00172C  5003               	movf	___lwdiv@divisor^0,w,c
  2943   00172E  5C01               	subwf	___lwdiv@dividend^0,w,c
  2944   001730  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2945   001732  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2946   001734  A0D8               	btfss	status,0,c
  2947   001736  EF9F  F00B         	goto	u891
  2948   00173A  EFA1  F00B         	goto	u890
  2949   00173E                     u891:
  2950   00173E  EFA6  F00B         	goto	l1672
  2951   001742                     u890:
  2952   001742  5003               	movf	___lwdiv@divisor^0,w,c
  2953   001744  5E01               	subwf	___lwdiv@dividend^0,f,c
  2954   001746  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2955   001748  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2956   00174A  8005               	bsf	___lwdiv@quotient^0,0,c
  2957   00174C                     l1672:
  2958   00174C  90D8               	bcf	status,0,c
  2959   00174E  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2960   001750  3203               	rrcf	___lwdiv@divisor^0,f,c
  2961   001752  2E07               	decfsz	___lwdiv@counter^0,f,c
  2962   001754  EF93  F00B         	goto	l1664
  2963   001758                     l731:
  2964   001758  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2965   00175C  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2966   001760  0012               	return		;funcret
  2967   001762                     __end_of___lwdiv:
  2968                           	callstack 0
  2969                           
  2970 ;; *************** function _ADC_StartConversion *****************
  2971 ;; Defined at:
  2972 ;;		line 91 in file "mcc_generated_files/adc.c"
  2973 ;; Parameters:    Size  Location     Type
  2974 ;;		None
  2975 ;; Auto vars:     Size  Location     Type
  2976 ;;		None
  2977 ;; Return value:  Size  Location     Type
  2978 ;;                  1    wreg      void 
  2979 ;; Registers used:
  2980 ;;		None
  2981 ;; Tracked objects:
  2982 ;;		On entry : 0/0
  2983 ;;		On exit  : 0/0
  2984 ;;		Unchanged: 0/0
  2985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2990 ;;Total ram usage:        0 bytes
  2991 ;; Hardware stack levels used: 1
  2992 ;; This function calls:
  2993 ;;		Nothing
  2994 ;; This function is called by:
  2995 ;;		_main
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999                           	psect	text27
  3000   001AC8                     __ptext27:
  3001                           	callstack 0
  3002   001AC8                     _ADC_StartConversion:
  3003                           	callstack 30
  3004   001AC8                     
  3005                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  3006   001AC8  82C2               	bsf	194,1,c	;volatile
  3007   001ACA  0012               	return		;funcret
  3008   001ACC                     __end_of_ADC_StartConversion:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _ADC_SelectChannel *****************
  3012 ;; Defined at:
  3013 ;;		line 83 in file "mcc_generated_files/adc.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  channel         1    wreg     enum E2727
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;  channel         1    1[COMRAM] enum E2727
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, status,2, status,0
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3028 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3029 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3030 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3031 ;;Total ram usage:        2 bytes
  3032 ;; Hardware stack levels used: 1
  3033 ;; This function calls:
  3034 ;;		Nothing
  3035 ;; This function is called by:
  3036 ;;		_main
  3037 ;; This function uses a non-reentrant model
  3038 ;;
  3039                           
  3040                           	psect	text28
  3041   001A36                     __ptext28:
  3042                           	callstack 0
  3043   001A36                     _ADC_SelectChannel:
  3044                           	callstack 30
  3045                           
  3046                           ;incstack = 0
  3047                           ;ADC_SelectChannel@channel stored from wreg
  3048   001A36  6E02               	movwf	ADC_SelectChannel@channel^0,c
  3049   001A38                     
  3050                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  3051   001A38  C002  F001         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  3052   001A3C  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  3053   001A3E  4601               	rlncf	??_ADC_SelectChannel^0,f,c
  3054   001A40  50C2               	movf	194,w,c	;volatile
  3055   001A42  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  3056   001A44  0BC3               	andlw	-61
  3057   001A46  1801               	xorwf	??_ADC_SelectChannel^0,w,c
  3058   001A48  6EC2               	movwf	194,c	;volatile
  3059   001A4A                     
  3060                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  3061   001A4A  80C2               	bsf	194,0,c	;volatile
  3062   001A4C  0012               	return		;funcret
  3063   001A4E                     __end_of_ADC_SelectChannel:
  3064                           	callstack 0
  3065                           
  3066 ;; *************** function _ADC_IsConversionDone *****************
  3067 ;; Defined at:
  3068 ;;		line 98 in file "mcc_generated_files/adc.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      _Bool 
  3075 ;; Registers used:
  3076 ;;		wreg
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; This function calls:
  3089 ;;		Nothing
  3090 ;; This function is called by:
  3091 ;;		_main
  3092 ;; This function uses a non-reentrant model
  3093 ;;
  3094                           
  3095                           	psect	text29
  3096   001A7A                     __ptext29:
  3097                           	callstack 0
  3098   001A7A                     _ADC_IsConversionDone:
  3099                           	callstack 30
  3100   001A7A                     
  3101                           ;mcc_generated_files/adc.c: 101:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  3102   001A7A  A2C2               	btfss	194,1,c	;volatile
  3103   001A7C  EF42  F00D         	goto	u941
  3104   001A80  EF45  F00D         	goto	u940
  3105   001A84                     u941:
  3106   001A84  0E01               	movlw	1
  3107   001A86  EF46  F00D         	goto	u950
  3108   001A8A                     u940:
  3109   001A8A  0E00               	movlw	0
  3110   001A8C                     u950:
  3111   001A8C  0012               	return		;funcret
  3112   001A8E                     __end_of_ADC_IsConversionDone:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _ADC_GetConversion *****************
  3116 ;; Defined at:
  3117 ;;		line 110 in file "mcc_generated_files/adc.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  channel         1    wreg     enum E2727
  3120 ;; Auto vars:     Size  Location     Type
  3121 ;;  channel         1    4[COMRAM] enum E2727
  3122 ;; Return value:  Size  Location     Type
  3123 ;;                  2    0[COMRAM] unsigned short 
  3124 ;; Registers used:
  3125 ;;		wreg, status,2, status,0
  3126 ;; Tracked objects:
  3127 ;;		On entry : 0/0
  3128 ;;		On exit  : 0/0
  3129 ;;		Unchanged: 0/0
  3130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3131 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3133 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3134 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3135 ;;Total ram usage:        5 bytes
  3136 ;; Hardware stack levels used: 1
  3137 ;; This function calls:
  3138 ;;		Nothing
  3139 ;; This function is called by:
  3140 ;;		_main
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text30
  3145   00195E                     __ptext30:
  3146                           	callstack 0
  3147   00195E                     _ADC_GetConversion:
  3148                           	callstack 30
  3149                           
  3150                           ;incstack = 0
  3151                           ;ADC_GetConversion@channel stored from wreg
  3152   00195E  6E05               	movwf	ADC_GetConversion@channel^0,c
  3153   001960                     
  3154                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  3155   001960  C005  F003         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3156   001964  4603               	rlncf	??_ADC_GetConversion^0,f,c
  3157   001966  4603               	rlncf	??_ADC_GetConversion^0,f,c
  3158   001968  50C2               	movf	194,w,c	;volatile
  3159   00196A  1803               	xorwf	??_ADC_GetConversion^0,w,c
  3160   00196C  0BC3               	andlw	-61
  3161   00196E  1803               	xorwf	??_ADC_GetConversion^0,w,c
  3162   001970  6EC2               	movwf	194,c	;volatile
  3163   001972                     
  3164                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  3165   001972  80C2               	bsf	194,0,c	;volatile
  3166   001974                     
  3167                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  3168   001974  82C2               	bsf	194,1,c	;volatile
  3169   001976                     l34:
  3170                           
  3171                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  3172   001976  B2C2               	btfsc	194,1,c	;volatile
  3173   001978  EFC0  F00C         	goto	u961
  3174   00197C  EFC2  F00C         	goto	u960
  3175   001980                     u961:
  3176   001980  EFBB  F00C         	goto	l34
  3177   001984                     u960:
  3178   001984                     
  3179                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  3180   001984  50C4               	movf	196,w,c	;volatile
  3181   001986  6E04               	movwf	(??_ADC_GetConversion+1)^0,c
  3182   001988  6A03               	clrf	??_ADC_GetConversion^0,c
  3183   00198A  50C3               	movf	195,w,c	;volatile
  3184   00198C  2403               	addwf	??_ADC_GetConversion^0,w,c
  3185   00198E  6E01               	movwf	?_ADC_GetConversion^0,c
  3186   001990  0E00               	movlw	0
  3187   001992  2004               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  3188   001994  6E02               	movwf	(?_ADC_GetConversion+1)^0,c
  3189   001996  0012               	return		;funcret
  3190   001998                     __end_of_ADC_GetConversion:
  3191                           	callstack 0
  3192                           
  3193                           	psect	rparam
  3194   000000                     
  3195                           	psect	idloc
  3196                           
  3197                           ;Config register IDLOC0 @ 0x200000
  3198                           ;	unspecified, using default values
  3199   200000                     	org	2097152
  3200   200000  FF                 	db	255
  3201                           
  3202                           ;Config register IDLOC1 @ 0x200001
  3203                           ;	unspecified, using default values
  3204   200001                     	org	2097153
  3205   200001  FF                 	db	255
  3206                           
  3207                           ;Config register IDLOC2 @ 0x200002
  3208                           ;	unspecified, using default values
  3209   200002                     	org	2097154
  3210   200002  FF                 	db	255
  3211                           
  3212                           ;Config register IDLOC3 @ 0x200003
  3213                           ;	unspecified, using default values
  3214   200003                     	org	2097155
  3215   200003  FF                 	db	255
  3216                           
  3217                           ;Config register IDLOC4 @ 0x200004
  3218                           ;	unspecified, using default values
  3219   200004                     	org	2097156
  3220   200004  FF                 	db	255
  3221                           
  3222                           ;Config register IDLOC5 @ 0x200005
  3223                           ;	unspecified, using default values
  3224   200005                     	org	2097157
  3225   200005  FF                 	db	255
  3226                           
  3227                           ;Config register IDLOC6 @ 0x200006
  3228                           ;	unspecified, using default values
  3229   200006                     	org	2097158
  3230   200006  FF                 	db	255
  3231                           
  3232                           ;Config register IDLOC7 @ 0x200007
  3233                           ;	unspecified, using default values
  3234   200007                     	org	2097159
  3235   200007  FF                 	db	255
  3236                           
  3237                           	psect	config
  3238                           
  3239                           ; Padding undefined space
  3240   300000                     	org	3145728
  3241   300000  FF                 	db	255
  3242                           
  3243                           ;Config register CONFIG1H @ 0x300001
  3244                           ;	Oscillator Selection bits
  3245                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  3246                           ;	Fail-Safe Clock Monitor Enable bit
  3247                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3248                           ;	Internal/External Oscillator Switchover bit
  3249                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3250   300001                     	org	3145729
  3251   300001  08                 	db	8
  3252                           
  3253                           ;Config register CONFIG2L @ 0x300002
  3254                           ;	Power-up Timer Enable bit
  3255                           ;	PWRTEN = OFF, PWRT disabled
  3256                           ;	Brown-out Reset Enable bits
  3257                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  3258                           ;	Brown Out Reset Voltage bits
  3259                           ;	BORV = 18, VBOR set to 1.8 V nominal
  3260   300002                     	org	3145730
  3261   300002  1F                 	db	31
  3262                           
  3263                           ;Config register CONFIG2H @ 0x300003
  3264                           ;	Watchdog Timer Enable bit
  3265                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  3266                           ;	Watchdog Timer Postscale Select bits
  3267                           ;	WDTPS = 32768, 1:32768
  3268   300003                     	org	3145731
  3269   300003  1E                 	db	30
  3270                           
  3271                           ; Padding undefined space
  3272   300004                     	org	3145732
  3273   300004  FF                 	db	255
  3274                           
  3275                           ;Config register CONFIG3H @ 0x300005
  3276                           ;	CCP2 MUX bit
  3277                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3278                           ;	PORTB A/D Enable bit
  3279                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  3280                           ;	Low-Power Timer1 Oscillator Enable bit
  3281                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3282                           ;	HFINTOSC Fast Start-up
  3283                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  3284                           ;	MCLR Pin Enable bit
  3285                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3286   300005                     	org	3145733
  3287   300005  8B                 	db	139
  3288                           
  3289                           ;Config register CONFIG4L @ 0x300006
  3290                           ;	Stack Full/Underflow Reset Enable bit
  3291                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3292                           ;	Single-Supply ICSP Enable bit
  3293                           ;	LVP = ON, Single-Supply ICSP enabled
  3294                           ;	Extended Instruction Set Enable bit
  3295                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3296                           ;	Background Debugger Enable bit
  3297                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  3298   300006                     	org	3145734
  3299   300006  85                 	db	133
  3300                           
  3301                           ; Padding undefined space
  3302   300007                     	org	3145735
  3303   300007  FF                 	db	255
  3304                           
  3305                           ;Config register CONFIG5L @ 0x300008
  3306                           ;	Code Protection Block 0
  3307                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3308                           ;	Code Protection Block 1
  3309                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3310                           ;	Code Protection Block 2
  3311                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3312                           ;	Code Protection Block 3
  3313                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3314   300008                     	org	3145736
  3315   300008  0F                 	db	15
  3316                           
  3317                           ;Config register CONFIG5H @ 0x300009
  3318                           ;	Boot Block Code Protection bit
  3319                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3320                           ;	Data EEPROM Code Protection bit
  3321                           ;	CPD = OFF, Data EEPROM not code-protected
  3322   300009                     	org	3145737
  3323   300009  C0                 	db	192
  3324                           
  3325                           ;Config register CONFIG6L @ 0x30000A
  3326                           ;	Write Protection Block 0
  3327                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3328                           ;	Write Protection Block 1
  3329                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3330                           ;	Write Protection Block 2
  3331                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3332                           ;	Write Protection Block 3
  3333                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  3334   30000A                     	org	3145738
  3335   30000A  0F                 	db	15
  3336                           
  3337                           ;Config register CONFIG6H @ 0x30000B
  3338                           ;	Configuration Register Write Protection bit
  3339                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3340                           ;	Boot Block Write Protection bit
  3341                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3342                           ;	Data EEPROM Write Protection bit
  3343                           ;	WRTD = OFF, Data EEPROM not write-protected
  3344   30000B                     	org	3145739
  3345   30000B  E0                 	db	224
  3346                           
  3347                           ;Config register CONFIG7L @ 0x30000C
  3348                           ;	Table Read Protection Block 0
  3349                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3350                           ;	Table Read Protection Block 1
  3351                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3352                           ;	Table Read Protection Block 2
  3353                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3354                           ;	Table Read Protection Block 3
  3355                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3356   30000C                     	org	3145740
  3357   30000C  0F                 	db	15
  3358                           
  3359                           ;Config register CONFIG7H @ 0x30000D
  3360                           ;	Boot Block Table Read Protection bit
  3361                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3362   30000D                     	org	3145741
  3363   30000D  40                 	db	64
  3364                           tosu	equ	0xFFF
  3365                           tosh	equ	0xFFE
  3366                           tosl	equ	0xFFD
  3367                           stkptr	equ	0xFFC
  3368                           pclatu	equ	0xFFB
  3369                           pclath	equ	0xFFA
  3370                           pcl	equ	0xFF9
  3371                           tblptru	equ	0xFF8
  3372                           tblptrh	equ	0xFF7
  3373                           tblptrl	equ	0xFF6
  3374                           tablat	equ	0xFF5
  3375                           prodh	equ	0xFF4
  3376                           prodl	equ	0xFF3
  3377                           indf0	equ	0xFEF
  3378                           postinc0	equ	0xFEE
  3379                           postdec0	equ	0xFED
  3380                           preinc0	equ	0xFEC
  3381                           plusw0	equ	0xFEB
  3382                           fsr0h	equ	0xFEA
  3383                           fsr0l	equ	0xFE9
  3384                           wreg	equ	0xFE8
  3385                           indf1	equ	0xFE7
  3386                           postinc1	equ	0xFE6
  3387                           postdec1	equ	0xFE5
  3388                           preinc1	equ	0xFE4
  3389                           plusw1	equ	0xFE3
  3390                           fsr1h	equ	0xFE2
  3391                           fsr1l	equ	0xFE1
  3392                           bsr	equ	0xFE0
  3393                           indf2	equ	0xFDF
  3394                           postinc2	equ	0xFDE
  3395                           postdec2	equ	0xFDD
  3396                           preinc2	equ	0xFDC
  3397                           plusw2	equ	0xFDB
  3398                           fsr2h	equ	0xFDA
  3399                           fsr2l	equ	0xFD9
  3400                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         48
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     86      94
    BANK0           160     50      98
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    S1075$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 26
		 -> STR_1(CODE[26]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 50
		 -> main@bufferWrite(BANK0[50]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1022$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S1022$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_Write@txData	PTR unsigned char  size(2) Largest target is 50
		 -> main@bufferWrite(BANK0[50]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Write->_EUSART_WriteByte
    _ConvertADCVoltage->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                50    50      0    7637
                                              0 BANK0     50    50      0
                  _ADC_GetConversion
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                  _ConvertADCVoltage
                       _EUSART_Write
                 _EUSART_is_tx_ready
                  _SYSTEM_Initialize
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             26    16     10    5547
                                             62 COMRAM    24    14     10
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    5196
                                             54 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           19    13      6    4846
                                             40 COMRAM    14     8      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                13     9      4    3626
                                             27 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    1999
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     931
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     682
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                     _ADC_Initialize
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EUSART_is_tx_ready                                   1     1      0      24
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         3     1      2     188
                                              1 COMRAM     3     1      2
                   _EUSART_WriteByte
 ---------------------------------------------------------------------------------
 (2) _EUSART_WriteByte                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ConvertADCVoltage                                    2     0      2    1490
                                              7 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      22
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _ConvertADCVoltage
     ___lwdiv
     ___lwmod
     ___wmul
   _EUSART_Write
     _EUSART_WriteByte
   _EUSART_is_tx_ready
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     32      62       5       61.3%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     56      5E       1       98.9%
BITBIGSFRhhhl       1D      0       0      38        0.0%
BITBIGSFRlllll      1C      0       0      48        0.0%
BITBIGSFRhhl         E      0       0      39        0.0%
BITBIGSFRhhhh        D      0       0      37        0.0%
BITBIGSFRlhllh       C      0       0      42        0.0%
BITBIGSFRlllh        9      0       0      46        0.0%
BITBIGSFRlhlhh       7      0       0      41        0.0%
BITBIGSFRlhh         7      0       0      40        0.0%
BITBIGSFRlhllll      4      0       0      44        0.0%
BITBIGSFRlhllll      4      0       0      45        0.0%
BITBIGSFRlhlllh      2      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C0      12        0.0%
DATA                 0      0      C0       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Aug 27 05:03:02 2023

               ConvertADCVoltage@adc_conv_data 0008                                             l22 1A4C  
                                           l25 1ACA                                             l34 1976  
                                           l19 1A62                                             l28 1A8C  
                                           l37 1996                                             l82 150A  
                                           l69 1672                                             l85 1510  
                                 ___awdiv@sign 0006                            ___wmul@multiplicand 0003  
                                          l201 1AA8                                            l132 1922  
                                          l240 1A16                                            l136 19EE  
                                          l137 19F0                                            l234 19C8  
                                          l156 1A66                                            l180 1AB2  
                                          l165 195C                                            l159 1A78  
                                          l183 1AC6                                            l177 1ABC  
                                          l198 1A9E                                            l471 1468  
                                          l731 1758                                            l484 15C8  
                                          l741 17BC                                            l738 1760  
                                          l748 17C4                                            l940 1696  
                                          l918 1860                                            l951 106C  
                                          l944 16EC                                            l952 10B2  
                                          l970 12DA                                            l963 11AE  
                                          l980 18DC                                            l949 1064  
                                          l983 18E4                                            l976 1814  
                                          l995 13A4                                            u600 13F8  
                                          u601 13F4                                            u610 1416  
                                          u530 12EE                                            u611 1412  
                                          u531 12EA                                            u620 1432  
                                          u540 1300                                            u700 1682  
                                          u621 142E                                            u541 12FC  
                                          u701 167E                                            u630 1458  
                                          u550 1328                                            u710 16D8  
                                          u631 1454                                            u551 1324  
                                          u711 16D4                                            u640 152C  
                                          u720 18C0                                            u560 135E  
                                          u800 114E                                            u641 1528  
                                          u721 18BC                                            u561 135A  
                                          u801 114A                                            u650 1546  
                                          u570 18A4                                            u810 1168  
                                          u730 102C                                            u651 1542  
                                          u571 18A0                                            u811 1164  
                                          u731 1026                                            u900 1774  
                                          u580 13B8                                            u660 1560  
                                          u820 1178                                            u740 102E  
                                          u901 1770                                            u581 13B4  
                                          u661 155C                                            u821 1174  
                                          u910 1792                                            u590 13D2  
                                          u670 157E                                            u750 1040  
                                          u830 11D6                                            u911 178E  
                                          u591 13CE                                            u671 157A  
                                          u751 103C                                            u831 11D2  
                                          u920 17A8                                            u680 1594  
                                          u760 1058                                            u840 1224  
                                          u921 17A4                                            u681 1590  
                                          u761 1054                                            u841 1220  
                                          u690 15B8                                            u770 1084  
                                          u850 1242                                            u930 180C  
                                          u691 15B4                                            u771 1080  
                                          u851 123E                                            u931 1808  
                                          u940 1A8A                                            u860 1A74  
                                          u780 109A                                            u941 1A84  
                                          u861 1A70                                            u781 1096  
                                          u950 1A8C                                            u870 1708  
                                          u790 113C                                            u871 1704  
                                          u791 1138                                            u960 1984  
                                          u880 1726                                            u961 1980  
                                          u881 1722                                            u890 1742  
                                          u970 19DC                                            u891 173E  
                                          u971 19D8                                            u980 19EA  
                                          u981 19E6                                            u990 195C  
                                          u991 1958                                            _abs 18A6  
                                          _pad 1674                       __end_of_EUSART_WriteByte 1A7A  
               ?_EUSART_SetFramingErrorHandler 0001                                   ___awmod@sign 0006  
                                          wreg 0FE8                                           l1003 18A4  
                                         l1006 1ACC                                           ?_abs 0007  
                                         l1500 157E                                           l1420 130A  
                                         l1510 15B8                                           l1502 1594  
                                         l1422 1328                                           l1414 12DC  
                                         l1430 186E                                           l1440 13B8  
                                         l1512 15C0                                           l1504 159C  
                                         l1424 135E                                           l1416 12EE  
                                         l1432 1880                                           l1520 168E  
                                         l1600 1206                                           l1450 13DE  
                                         l1442 13C0                                           l1506 15A2  
                                         l1530 18A6                                           l1418 1300  
                                         l1434 1884                                           l1522 16A2  
                                         l1610 129E                                           l1602 1224  
                                         l1620 1A4E                                           l1460 1416  
                                         l1452 13E6                                           l1444 13C4  
                                         l1436 13A6                                           l1508 15A8  
                                         l1532 18C0                                           l1428 1862  
                                         l1524 16B6                                           l1516 1674  
                                         l1540 1048                                           l1604 1242  
                                         l1702 1A38                                           l1630 191E  
                                         l1622 18E6                                           l1470 1442  
                                         l1462 141C                                           l1454 13F8  
                                         l1446 13D2                                           l1438 13AA  
                                         l1526 16BA                                           l1518 1682  
                                         l1550 109A                                           l1542 1058  
                                         l1534 101C                                           l1606 1286  
                                         l1614 12B0                                           l1712 1960  
                                         l1704 1A4A                                           l1632 1A66  
                                         l1624 18FA                                           l1640 19B2  
                                         l1464 1432                                           l1456 1400  
                                         l1472 1448                                           l1448 13DA  
                                         l1480 151A                                           l1528 16D8  
                                         l1560 10C8                                           l1552 10A6  
                                         l1544 1074                                           l1536 1030  
                                         l1714 1972                                           l1706 1AC8  
                                         l1650 1A0E                                           l1730 163A  
                                         l1722 15CA                                           l1634 1A74  
                                         l1626 1906                                           l1642 19BC  
                                         l1474 1458                                           l1466 143A  
                                         l1458 1408                                           l1490 1546  
                                         l1482 151E                                           l1570 113C  
                                         l1562 10FA                                           l1554 10AE  
                                         l1546 1084                                           l1538 1040  
                                         l1716 1974                                           l1708 1A7A  
                                         l1660 1710                                           l1732 1656  
                                         l1724 15E6                                           l1740 19CE  
                                         l1628 1912                                           l1644 19C6  
                                         l1636 1998                                           l1476 1460  
                                         l1468 143C                                           l1492 154E  
                                         l1484 152C                                           l1580 118E  
                                         l1572 114E                                           l1564 1100  
                                         l1556 10BA                                           l1548 108A  
                                         l1718 1984                                           l1670 174A  
                                         l1662 1718                                           l1654 16EE  
                                         l1726 1602                                           l1742 19DC  
                                         l1646 1AA0                                           l1638 19B0  
                                         l1734 1A8E                                           l1494 1560  
                                         l1486 1534                                           l1574 1168  
                                         l1566 1106                                           l1558 10C2  
                                         l1590 11B0                                           l1750 1826  
                                         l1672 174C                                           l1664 1726  
                                         l1656 16F6                                           l1680 177C  
                                         l1648 19F2                                           l1728 161E  
                                         l1760 1924                                           l1744 19EA  
                                         l1584 1AB4                                           l1736 1A9A  
                                         l1496 1568                                           l1488 1538  
                                         l1576 1178                                           l1568 1122  
                                         l1592 11D6                                           l1752 182E  
                                         l1674 1752                                           l1666 172C  
                                         l1658 1708                                           l1690 17B6  
                                         l1682 1784                                           l1762 192C  
                                         l1738 19CA                                           l1586 1AAA  
                                         l1498 1570                                           l1578 117E  
                                         l1594 11E4                                           l1754 1836  
                                         l1770 1474                                           l1668 1742  
                                         l1684 1792                                           l1676 1762  
                                         l1764 193E                                           l1588 1ABE  
                                         l1596 11F2                                           l1692 17C6  
                                         l1756 1852                                           l1748 1816  
                                         l1780 14AE                                           l1772 1478  
                                         l1686 17A8                                           l1678 1774  
                                         l1766 1940                                           l1598 11F6  
                                         l1694 17D2                                           l1782 14BA  
                                         l1774 1486                                           l1688 17B0  
                                         l1696 17EE                                           l1784 14E6  
                                         l1768 146A                                           l1698 180C  
                                         l1786 14F2                                           l1778 149A  
                                         ?_pad 0011                                           STR_1 1001  
                                         u1000 149A                                           u1001 1496  
                                         u1010 14AE                                           u1011 14AA  
                                         u1020 150A                                           u1021 1506  
                                         _LATA 0F89                                           _LATB 0F8A  
                                         _LATC 0F8B                                           _LATD 0F8C  
                                         _LATE 0F8D                                           _WPUB 0F7C  
                                         abs@a 0007                                           _dbuf 009A  
                                         _main 146A                                           _dtoa 101C  
                                         _prec 0094                                           pad@i 0018  
                                         pad@p 0015                                           fsr1h 0FE2  
                                         fsr2h 0FDA                                           indf2 0FDF  
                                         fsr1l 0FE1                                           pad@w 001A  
                                         fsr2l 0FD9                                           prodh 0FF4  
                                         prodl 0FF3                                           start 0000  
                                 ___param_bank 0000                                   _adcVoltValue 0057  
                                        ??_abs 0009                                          ??_pad 0017  
                                ?_EUSART_Write 0002                  __end_of_OSCILLATOR_Initialize 1AAA  
                                        ?_main 0001                                          ?_dtoa 001C  
                              __end_of___awdiv 146A                                __end_of___awmod 15CA  
                                        _ANSEL 0F7E                                ___awdiv@divisor 0003  
                              __end_of___lwdiv 1762                                __end_of___lwmod 17C6  
                              ___awdiv@counter 0005                                          _RCREG 0FAE  
                                        _RCSTA 0FAB                                   vfpfcnvrt@fmt 002B  
                                        _SPBRG 0FAF                                          _TRISA 0F92  
                                        _TRISB 0F93                                          _TRISC 0F94  
                                        _TRISD 0F95                                          _TRISE 0F96  
                                        _TXREG 0FAD                                          _TXSTA 0FAC  
                                        _flags 005D                                          _fputc 12DC  
                                        _fputs 1862                                          pad@fp 0011  
                                        _width 0092                                          _putch 1ACC  
                                        dtoa@d 001E                                          dtoa@i 0026  
                                        dtoa@p 0022                                          dtoa@s 0028  
                                        dtoa@w 0024                                          tablat 0FF5  
                                        status 0FD8                                __end_of_sprintf 1862  
                              __initialization 1A18                                   __end_of_main 151A  
                                 __end_of_dtoa 11B0                                 ??_EUSART_Write 0004  
                                       ??_main 0057                                         ??_dtoa 0020  
                                __activetblptr 0003                                 _convertedValue 00C0  
            _EUSART_DefaultFramingErrorHandler 0000                                         _ADCON0 0FC2  
                                       _ADCON1 0FC1                              _ConvertADCVoltage 15CA  
                                       _ADCON2 0FC0                     _EUSART_OverrunErrorHandler 00BC  
                                       ?_fputc 0001                                         ?_fputs 000A  
                                       _ADRESH 0FC4                                         _ADRESL 0FC3  
                             ___awdiv@dividend 0001                                         ?_putch 0001  
                                       _ANSELH 0F7F                             ?_ConvertADCVoltage 0008  
                   __end_of_EUSART_is_tx_ready 19F2                                         _OSCCON 0FD3  
                                       _SPBRGH 0FB0                            ??_ConvertADCVoltage 000A  
                                 vfprintf@cfmt 003D                                         ___wmul 19F2  
                                    ??___awdiv 0005                                         _adones 0096  
                                    ??___awmod 0005                                      ??___lwdiv 0005  
                                    ??___lwmod 0005                                         clear_0 1A1E  
                                       clear_1 1A2A                               ___awdiv@quotient 0007  
                              ___awmod@divisor 0003                                         isa$std 0001  
                              ___awmod@counter 0005                                         pad@buf 0013  
                                       dtoa@fp 001C                                         fputc@c 0001  
                                       fputs@c 000E                                         fputs@i 000F  
                                       fputs@s 000A                      __end_of_ConvertADCVoltage 1674  
                                 __mediumconst 0000                                         tblptrh 0FF7  
                                       tblptrl 0FF6                                         tblptru 0FF8  
                     ADC_GetConversion@channel 0005                                         putch@c 0001  
                             __end_of_vfprintf 1816                                      ??_sprintf 0049  
                            _SYSTEM_Initialize 1A8E                                     __accesstop 0060  
                      __end_of__initialization 1A30                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 0001                                 __pcstackCOMRAM 0001  
                          ??_SYSTEM_Initialize 0003                                  __end_of_fputc 13A6  
                                __end_of_fputs 18A6                                  __end_of_putch 1ACE  
                            ?_EUSART_WriteByte 0001                ??_EUSART_SetOverrunErrorHandler 0003  
                           ??_EUSART_WriteByte 0001                                        ??_fputc 0005  
                    __end_of_SYSTEM_Initialize 1AA0                                        ??_fputs 000E  
                                      ??_putch 0001                                     __pbssBANK0 0092  
                         __end_of_EUSART_Write 195E                                        ?___wmul 0001  
                                      _BAUDCON 0FB8                                        _OSCTUNE 0F9B  
                     ??_EUSART_SetErrorHandler 0003                           _ADC_InterruptHandler 0098  
                                      __Hparam 0000                                        __Lparam 0000  
                                      ___awdiv 13A6                                        ___awmod 151A  
                                      ___lwdiv 16EE                                        ___lwmod 1762  
                                    ?_vfprintf 0037                                   __psmallconst 1000  
                                      _adtenth 005B                                        __pcinit 1A18  
                                      __ramtop 1000                                        __ptext0 146A  
                                      __ptext1 1816                                        __ptext2 17C6  
                                      __ptext3 11B0                                        __ptext4 101C  
                                      __ptext5 1674                                        __ptext6 1862  
                                      __ptext7 12DC                                        __ptext8 1ACC  
                                      __ptext9 18A6                          _OSCILLATOR_Initialize 1AA0  
                             ___awmod@dividend 0001                       ??_PIN_MANAGER_Initialize 0001  
                                      _sprintf 1816                           end_of_initialization 1A30  
        __end_of_EUSART_SetOverrunErrorHandler 1AB4                  _EUSART_SetOverrunErrorHandler 1AAA  
                                      fputc@fp 0003                                        fputs@fp 000C  
                            _EUSART_Initialize 18E6                   __end_of_ADC_IsConversionDone 1A8E  
                           ?_EUSART_Initialize 0001                                  EUSART_Write@i 0004  
                            __end_of_vfpfcnvrt 12DC                                      _RCSTAbits 0FAB  
                                      postdec2 0FDD                                        postinc0 0FEE  
                                      postinc1 0FE6                                        postinc2 0FDE  
                             vfpfcnvrt@convarg 0031                             _EUSART_is_tx_ready 19CA  
                                   ??_vfprintf 003D                            ??_EUSART_Initialize 0003  
                          ?_EUSART_is_tx_ready 0001                            _ADC_StartConversion 1AC8  
                    __end_of_EUSART_Initialize 1924                           ??_EUSART_is_tx_ready 0001  
                                    _TXSTAbits 0FAC                           ?_ADC_StartConversion 0001  
                   _EUSART_DefaultErrorHandler 0000                                    vfpfcnvrt@ap 002D  
                                  vfpfcnvrt@cp 0035                                    vfpfcnvrt@fp 0029  
                               __end_of___wmul 1A18                                   _EUSART_Write 1924  
                               _ADC_Initialize 1A4E                         ?_OSCILLATOR_Initialize 0001  
                          start_initialization 1A18                                    __end_of_abs 18E6  
                                  __end_of_pad 16EE                         _EUSART_is_tx_ready$426 0001  
               ?_EUSART_SetOverrunErrorHandler 0001                          ??_ADC_StartConversion 0001  
                                  vfprintf@fmt 0039                     _EUSART_FramingErrorHandler 00BE  
                                     ??___wmul 0005                         _EUSART_SetErrorHandler 1ABE  
                       __end_of_ADC_Initialize 1A64                                    _adhundredth 0059  
                                  __pbssCOMRAM 0057                                  __pcstackBANK0 0060  
                         _ADC_IsConversionDone 1A7A                                      __pnvBANK0 00BA  
                             ___lwdiv@dividend 0001                         _PIN_MANAGER_Initialize 1998  
                                    _dtoa$1102 0020                                main@bufferWrite 0060  
                            _ADC_SelectChannel 1A36                                       ?___awdiv 0001  
                                     ?___awmod 0001                                       ?___lwdiv 0001  
                                     ?___lwmod 0001                                ?_ADC_Initialize 0001  
                           ?_ADC_SelectChannel 0001                                    __smallconst 1000  
                          ??_ADC_SelectChannel 0001                          ?_ADC_IsConversionDone 0001  
                             ___lwdiv@quotient 0005                                       ?_sprintf 003F  
                               ___wmul@product 0005         EUSART_SetErrorHandler@interruptHandler 0001  
                                     _LATDbits 0F8C                              _eusartRxLastError 005E  
                    __end_of_ADC_SelectChannel 1A4E                                       _PIR1bits 0F9E  
              ??_EUSART_SetFramingErrorHandler 0003              _EUSART_DefaultOverrunErrorHandler 0000  
                       EUSART_WriteByte@txData 0001                                      _vfpfcnvrt 11B0  
                                   _ADCON0bits 0FC2                              ___wmul@multiplier 0001  
                     ADC_SelectChannel@channel 0002                                    _INTCON2bits 0FF1  
                             _EUSART_WriteByte 1A64                                       __Hrparam 0000  
                                   vfprintf@ap 003B                                       __Lrparam 0000  
                                   vfprintf@fp 0037                              _ADC_GetConversion 195E  
                      ??_OSCILLATOR_Initialize 0001                            _EUSART_ErrorHandler 00BA  
                           ?_ADC_GetConversion 0001                                     ?_vfpfcnvrt 0029  
                       ??_ADC_IsConversionDone 0001                            ??_ADC_GetConversion 0003  
                                   sprintf@fmt 0041                                ___lwdiv@divisor 0003  
                              ___lwdiv@counter 0007                                       __ptext10 151A  
                                     __ptext11 13A6                                       __ptext20 19CA  
                                     __ptext12 1A8E                                       __ptext21 1924  
                                     __ptext13 1998                                       __ptext30 195E  
                                     __ptext22 1A64                                       __ptext14 1AA0  
                                     __ptext23 15CA                                       __ptext15 18E6  
                                     __ptext24 19F2                                       __ptext16 1AAA  
                                     __ptext25 1762                                       __ptext17 1AB4  
                                     __ptext26 16EE                                       __ptext18 1ABE  
                                     __ptext27 1AC8                                       __ptext19 1A4E  
                                     __ptext28 1A36                                       __ptext29 1A7A  
                    __end_of_ADC_GetConversion 1998                        ?_EUSART_SetErrorHandler 0001  
EUSART_SetOverrunErrorHandler@interruptHandler 0001                                       isa$xinst 0000  
                                     _vfprintf 17C6          __end_of_EUSART_SetFramingErrorHandler 1ABE  
                _EUSART_SetFramingErrorHandler 1AB4                                     _INTCONbits 0FF2  
                                    sprintf@ap 0049                    __end_of_ADC_StartConversion 1ACC  
                             ___lwmod@dividend 0001                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 1AC8                               ??_ADC_Initialize 0001  
EUSART_SetFramingErrorHandler@interruptHandler 0001                                    ??_vfpfcnvrt 002F  
                                     sprintf@f 004B                                       sprintf@s 003F  
                              ___lwmod@divisor 0003                                ___lwmod@counter 0005  
                           EUSART_Write@txData 0002                 __end_of_PIN_MANAGER_Initialize 19CA  
