

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Sun Aug 27 17:20:08 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    28   000000                     
    29                           ; Generated 21/07/2023 GMT
    30                           ; 
    31                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution. Publication is not required when
    45                           ;        this file is used in an embedded application.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC18F46K20 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63   000000                     _ADCON0	set	4034
    64   000000                     _ADRESL	set	4035
    65   000000                     _TRISD	set	3989
    66   000000                     _TRISC	set	3988
    67   000000                     _TRISB	set	3987
    68   000000                     _LATC	set	3979
    69   000000                     _LATB	set	3978
    70   000000                     _ADCON0bits	set	4034
    71   000000                     _T2CONbits	set	4042
    72   000000                     _WPUB	set	3964
    73   000000                     _ANSEL	set	3966
    74   000000                     _LATA	set	3977
    75   000000                     _LATD	set	3980
    76   000000                     _LATE	set	3981
    77   000000                     _OSCTUNE	set	3995
    78   000000                     _OSCCON	set	4051
    79   000000                     _INTCON2bits	set	4081
    80   000000                     _PIR1bits	set	3998
    81   000000                     _PR2	set	4043
    82   000000                     _TMR2	set	4044
    83   000000                     _CCP2CON	set	4026
    84   000000                     _T2CON	set	4042
    85   000000                     _TRISA	set	3986
    86   000000                     _TRISE	set	3990
    87   000000                     _ANSELH	set	3967
    88   000000                     _INTCONbits	set	4082
    89   000000                     _ADCON2	set	4032
    90   000000                     _ADCON1	set	4033
    91   000000                     _CCPR2H	set	4028
    92   000000                     _CCPR2L	set	4027
    93   000000                     _ADRESH	set	4036
    94                           
    95                           ; #config settings
    96                           
    97                           	psect	cinit
    98   00FD20                     __pcinit:
    99                           	callstack 0
   100   00FD20                     start_initialization:
   101                           	callstack 0
   102   00FD20                     __initialization:
   103                           	callstack 0
   104                           
   105                           ; Clear objects allocated to COMRAM (12 bytes)
   106   00FD20  EE00  F001         	lfsr	0,__pbssCOMRAM
   107   00FD24  0E0C               	movlw	12
   108   00FD26                     clear_0:
   109   00FD26  6AEE               	clrf	postinc0,c
   110   00FD28  06E8               	decf	wreg,f,c
   111   00FD2A  E1FD               	bnz	clear_0
   112   00FD2C                     end_of_initialization:
   113                           	callstack 0
   114   00FD2C                     __end_of__initialization:
   115                           	callstack 0
   116   00FD2C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   117   00FD2E  6EF8               	movwf	tblptru,c
   118   00FD30  0100               	movlb	0
   119   00FD32  EF39  F07F         	goto	_main	;jump to C main() function
   120                           
   121                           	psect	bssCOMRAM
   122   000001                     __pbssCOMRAM:
   123                           	callstack 0
   124   000001                     _ADC_InterruptHandler:
   125                           	callstack 0
   126   000001                     	ds	2
   127   000003                     _convertedValue:
   128                           	callstack 0
   129   000003                     	ds	2
   130   000005                     _adcVoltValue:
   131                           	callstack 0
   132   000005                     	ds	2
   133   000007                     _adhundredth:
   134                           	callstack 0
   135   000007                     	ds	2
   136   000009                     _adtenth:
   137                           	callstack 0
   138   000009                     	ds	2
   139   00000B                     _adones:
   140                           	callstack 0
   141   00000B                     	ds	2
   142                           
   143                           	psect	cstackCOMRAM
   144   00000D                     __pcstackCOMRAM:
   145                           	callstack 0
   146   00000D                     ??_ADC_SelectChannel:
   147   00000D                     ?_ADC_GetConversion:
   148                           	callstack 0
   149   00000D                     ?___wmul:
   150                           	callstack 0
   151   00000D                     ?___lwdiv:
   152                           	callstack 0
   153   00000D                     ?___lwmod:
   154                           	callstack 0
   155   00000D                     ___wmul@multiplier:
   156                           	callstack 0
   157   00000D                     ___lwdiv@dividend:
   158                           	callstack 0
   159   00000D                     ___lwmod@dividend:
   160                           	callstack 0
   161                           
   162                           ; 2 bytes @ 0x0
   163   00000D                     	ds	1
   164   00000E                     ADC_SelectChannel@channel:
   165                           	callstack 0
   166                           
   167                           ; 1 bytes @ 0x1
   168   00000E                     	ds	1
   169   00000F                     ??_ADC_GetConversion:
   170   00000F                     ___wmul@multiplicand:
   171                           	callstack 0
   172   00000F                     ___lwdiv@divisor:
   173                           	callstack 0
   174   00000F                     ___lwmod@divisor:
   175                           	callstack 0
   176                           
   177                           ; 2 bytes @ 0x2
   178   00000F                     	ds	2
   179   000011                     ADC_GetConversion@channel:
   180                           	callstack 0
   181   000011                     ___lwmod@counter:
   182                           	callstack 0
   183   000011                     ___wmul@product:
   184                           	callstack 0
   185   000011                     ___lwdiv@quotient:
   186                           	callstack 0
   187                           
   188                           ; 2 bytes @ 0x4
   189   000011                     	ds	2
   190   000013                     ___lwdiv@counter:
   191                           	callstack 0
   192   000013                     PWM2_LoadDutyValue@dutyValue:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x6
   196   000013                     	ds	1
   197   000014                     ConvertADCVoltage@adc_conv_data:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x7
   201   000014                     	ds	1
   202   000015                     ??_PWM2_LoadDutyValue:
   203                           
   204                           ; 1 bytes @ 0x8
   205   000015                     	ds	1
   206   000016                     
   207                           ; 1 bytes @ 0x9
   208   000016                     	ds	1
   209   000017                     
   210                           ; 1 bytes @ 0xA
   211 ;;
   212 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   213 ;;
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 68 in file "main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;                  1    wreg      void 
   223 ;; Registers used:
   224 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 0/0
   227 ;;		On exit  : 0/0
   228 ;;		Unchanged: 0/0
   229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called: 2
   236 ;; This function calls:
   237 ;;		_ADC_GetConversion
   238 ;;		_ADC_IsConversionDone
   239 ;;		_ADC_SelectChannel
   240 ;;		_ADC_StartConversion
   241 ;;		_ConvertADCVoltage
   242 ;;		_PWM2_LoadDutyValue
   243 ;;		_SYSTEM_Initialize
   244 ;;		___wmul
   245 ;; This function is called by:
   246 ;;		Startup code after reset
   247 ;; This function uses a non-reentrant model
   248 ;;
   249                           
   250                           	psect	text0
   251   00FE72                     __ptext0:
   252                           	callstack 0
   253   00FE72                     _main:
   254                           	callstack 29
   255   00FE72                     
   256                           ;main.c: 72:     SYSTEM_Initialize();
   257   00FE72  EC85  F07E         	call	_SYSTEM_Initialize	;wreg free
   258   00FE76                     
   259                           ;main.c: 73:  PWM2_LoadDutyValue(0);
   260   00FE76  0E00               	movlw	0
   261   00FE78  6E14               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^0,c
   262   00FE7A  0E00               	movlw	0
   263   00FE7C  6E13               	movwf	PWM2_LoadDutyValue@dutyValue^0,c
   264   00FE7E  ECBA  F07E         	call	_PWM2_LoadDutyValue	;wreg free
   265   00FE82                     
   266                           ;main.c: 74:  ADC_SelectChannel(channel_AN0);
   267   00FE82  0E00               	movlw	0
   268   00FE84  EC9B  F07E         	call	_ADC_SelectChannel
   269   00FE88                     
   270                           ;main.c: 75:   ADC_StartConversion();
   271   00FE88  EC5A  F07E         	call	_ADC_StartConversion	;wreg free
   272   00FE8C                     l1068:
   273   00FE8C  EC70  F07E         	call	_ADC_IsConversionDone	;wreg free
   274   00FE90  0900               	iorlw	0
   275   00FE92  B4D8               	btfsc	status,2,c
   276   00FE94  EF4E  F07F         	goto	u201
   277   00FE98  EF50  F07F         	goto	u200
   278   00FE9C                     u201:
   279   00FE9C  EF46  F07F         	goto	l1068
   280   00FEA0                     u200:
   281   00FEA0                     
   282                           ;main.c: 97:        convertedValue = ADC_GetConversion(channel_AN0);
   283   00FEA0  0E00               	movlw	0
   284   00FEA2  ECEA  F07E         	call	_ADC_GetConversion
   285   00FEA6  C00D  F003         	movff	?_ADC_GetConversion,_convertedValue
   286   00FEAA  C00E  F004         	movff	?_ADC_GetConversion+1,_convertedValue+1
   287   00FEAE                     
   288                           ;main.c: 98:   ConvertADCVoltage(convertedValue);
   289   00FEAE  C003  F014         	movff	_convertedValue,ConvertADCVoltage@adc_conv_data
   290   00FEB2  C004  F015         	movff	_convertedValue+1,ConvertADCVoltage@adc_conv_data+1
   291   00FEB6  ECAB  F07F         	call	_ConvertADCVoltage	;wreg free
   292   00FEBA                     
   293                           ;main.c: 99:         PWM2_LoadDutyValue(adones*100);
   294   00FEBA  C00B  F00D         	movff	_adones,___wmul@multiplier
   295   00FEBE  C00C  F00E         	movff	_adones+1,___wmul@multiplier+1
   296   00FEC2  0E00               	movlw	0
   297   00FEC4  6E10               	movwf	(___wmul@multiplicand+1)^0,c
   298   00FEC6  0E64               	movlw	100
   299   00FEC8  6E0F               	movwf	___wmul@multiplicand^0,c
   300   00FECA  ECA7  F07E         	call	___wmul	;wreg free
   301   00FECE  C00D  F013         	movff	?___wmul,PWM2_LoadDutyValue@dutyValue
   302   00FED2  C00E  F014         	movff	?___wmul+1,PWM2_LoadDutyValue@dutyValue+1
   303   00FED6  ECBA  F07E         	call	_PWM2_LoadDutyValue	;wreg free
   304   00FEDA  EF46  F07F         	goto	l1068
   305   00FEDE  EF00  F000         	goto	start
   306   00FEE2                     __end_of_main:
   307                           	callstack 0
   308                           
   309 ;; *************** function _SYSTEM_Initialize *****************
   310 ;; Defined at:
   311 ;;		line 50 in file "mcc_generated_files/mcc.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; Hardware stack levels required when called: 1
   332 ;; This function calls:
   333 ;;		_ADC_Initialize
   334 ;;		_OSCILLATOR_Initialize
   335 ;;		_PIN_MANAGER_Initialize
   336 ;;		_PWM2_Initialize
   337 ;;		_TMR2_Initialize
   338 ;; This function is called by:
   339 ;;		_main
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           	psect	text1
   344   00FD0A                     __ptext1:
   345                           	callstack 0
   346   00FD0A                     _SYSTEM_Initialize:
   347                           	callstack 29
   348   00FD0A                     
   349                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
   350   00FD0A  ECD2  F07E         	call	_PIN_MANAGER_Initialize	;wreg free
   351                           
   352                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
   353   00FD0E  EC5C  F07E         	call	_OSCILLATOR_Initialize	;wreg free
   354                           
   355                           ;mcc_generated_files/mcc.c: 55:     TMR2_Initialize();
   356   00FD12  EC68  F07E         	call	_TMR2_Initialize	;wreg free
   357                           
   358                           ;mcc_generated_files/mcc.c: 56:     PWM2_Initialize();
   359   00FD16  EC61  F07E         	call	_PWM2_Initialize	;wreg free
   360                           
   361                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
   362   00FD1A  EC7A  F07E         	call	_ADC_Initialize	;wreg free
   363   00FD1E  0012               	return		;funcret
   364   00FD20                     __end_of_SYSTEM_Initialize:
   365                           	callstack 0
   366                           
   367 ;; *************** function _TMR2_Initialize *****************
   368 ;; Defined at:
   369 ;;		line 62 in file "mcc_generated_files/tmr2.c"
   370 ;; Parameters:    Size  Location     Type
   371 ;;		None
   372 ;; Auto vars:     Size  Location     Type
   373 ;;		None
   374 ;; Return value:  Size  Location     Type
   375 ;;                  1    wreg      void 
   376 ;; Registers used:
   377 ;;		wreg, status,2
   378 ;; Tracked objects:
   379 ;;		On entry : 0/0
   380 ;;		On exit  : 0/0
   381 ;;		Unchanged: 0/0
   382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   387 ;;Total ram usage:        0 bytes
   388 ;; Hardware stack levels used: 1
   389 ;; This function calls:
   390 ;;		Nothing
   391 ;; This function is called by:
   392 ;;		_SYSTEM_Initialize
   393 ;; This function uses a non-reentrant model
   394 ;;
   395                           
   396                           	psect	text2
   397   00FCD0                     __ptext2:
   398                           	callstack 0
   399   00FCD0                     _TMR2_Initialize:
   400                           	callstack 29
   401   00FCD0                     
   402                           ;mcc_generated_files/tmr2.c: 67:     PR2 = 0xF9;
   403   00FCD0  0EF9               	movlw	249
   404   00FCD2  6ECB               	movwf	203,c	;volatile
   405                           
   406                           ;mcc_generated_files/tmr2.c: 70:     TMR2 = 0x00;
   407   00FCD4  0E00               	movlw	0
   408   00FCD6  6ECC               	movwf	204,c	;volatile
   409   00FCD8                     
   410                           ;mcc_generated_files/tmr2.c: 73:     PIR1bits.TMR2IF = 0;
   411   00FCD8  929E               	bcf	158,1,c	;volatile
   412                           
   413                           ;mcc_generated_files/tmr2.c: 76:     T2CON = 0x7E;
   414   00FCDA  0E7E               	movlw	126
   415   00FCDC  6ECA               	movwf	202,c	;volatile
   416   00FCDE  0012               	return		;funcret
   417   00FCE0                     __end_of_TMR2_Initialize:
   418                           	callstack 0
   419                           
   420 ;; *************** function _PWM2_Initialize *****************
   421 ;; Defined at:
   422 ;;		line 64 in file "mcc_generated_files/pwm2.c"
   423 ;; Parameters:    Size  Location     Type
   424 ;;		None
   425 ;; Auto vars:     Size  Location     Type
   426 ;;		None
   427 ;; Return value:  Size  Location     Type
   428 ;;                  1    wreg      void 
   429 ;; Registers used:
   430 ;;		wreg, status,2
   431 ;; Tracked objects:
   432 ;;		On entry : 0/0
   433 ;;		On exit  : 0/0
   434 ;;		Unchanged: 0/0
   435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   437 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   439 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   440 ;;Total ram usage:        0 bytes
   441 ;; Hardware stack levels used: 1
   442 ;; This function calls:
   443 ;;		Nothing
   444 ;; This function is called by:
   445 ;;		_SYSTEM_Initialize
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           
   449                           	psect	text3
   450   00FCC2                     __ptext3:
   451                           	callstack 0
   452   00FCC2                     _PWM2_Initialize:
   453                           	callstack 29
   454   00FCC2                     
   455                           ;mcc_generated_files/pwm2.c: 69:  CCP2CON = 0x3C;
   456   00FCC2  0E3C               	movlw	60
   457   00FCC4  6EBA               	movwf	186,c	;volatile
   458                           
   459                           ;mcc_generated_files/pwm2.c: 72:  CCPR2L = 0x7C;
   460   00FCC6  0E7C               	movlw	124
   461   00FCC8  6EBB               	movwf	187,c	;volatile
   462                           
   463                           ;mcc_generated_files/pwm2.c: 75:  CCPR2H = 0x00;
   464   00FCCA  0E00               	movlw	0
   465   00FCCC  6EBC               	movwf	188,c	;volatile
   466   00FCCE  0012               	return		;funcret
   467   00FCD0                     __end_of_PWM2_Initialize:
   468                           	callstack 0
   469                           
   470 ;; *************** function _PIN_MANAGER_Initialize *****************
   471 ;; Defined at:
   472 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   490 ;;Total ram usage:        0 bytes
   491 ;; Hardware stack levels used: 1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_SYSTEM_Initialize
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           	psect	text4
   500   00FDA4                     __ptext4:
   501                           	callstack 0
   502   00FDA4                     _PIN_MANAGER_Initialize:
   503                           	callstack 29
   504   00FDA4                     
   505                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
   506   00FDA4  0E00               	movlw	0
   507   00FDA6  6E8D               	movwf	141,c	;volatile
   508                           
   509                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
   510   00FDA8  0E00               	movlw	0
   511   00FDAA  6E8C               	movwf	140,c	;volatile
   512                           
   513                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
   514   00FDAC  0E00               	movlw	0
   515   00FDAE  6E89               	movwf	137,c	;volatile
   516                           
   517                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
   518   00FDB0  0E00               	movlw	0
   519   00FDB2  6E8A               	movwf	138,c	;volatile
   520                           
   521                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
   522   00FDB4  0E00               	movlw	0
   523   00FDB6  6E8B               	movwf	139,c	;volatile
   524                           
   525                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
   526   00FDB8  0E07               	movlw	7
   527   00FDBA  6E96               	movwf	150,c	;volatile
   528   00FDBC                     
   529                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
   530   00FDBC  6892               	setf	146,c	;volatile
   531   00FDBE                     
   532                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
   533   00FDBE  6893               	setf	147,c	;volatile
   534                           
   535                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFD;
   536   00FDC0  0EFD               	movlw	253
   537   00FDC2  6E94               	movwf	148,c	;volatile
   538   00FDC4                     
   539                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
   540   00FDC4  6895               	setf	149,c	;volatile
   541   00FDC6                     
   542                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
   543   00FDC6  687E               	setf	126,c	;volatile
   544                           
   545                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
   546   00FDC8  0E1F               	movlw	31
   547   00FDCA  6E7F               	movwf	127,c	;volatile
   548                           
   549                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
   550   00FDCC  0E00               	movlw	0
   551   00FDCE  6E7C               	movwf	124,c	;volatile
   552   00FDD0                     
   553                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
   554   00FDD0  8EF1               	bsf	241,7,c	;volatile
   555   00FDD2  0012               	return		;funcret
   556   00FDD4                     __end_of_PIN_MANAGER_Initialize:
   557                           	callstack 0
   558                           
   559 ;; *************** function _OSCILLATOR_Initialize *****************
   560 ;; Defined at:
   561 ;;		line 60 in file "mcc_generated_files/mcc.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;		None
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;Total ram usage:        0 bytes
   580 ;; Hardware stack levels used: 1
   581 ;; This function calls:
   582 ;;		Nothing
   583 ;; This function is called by:
   584 ;;		_SYSTEM_Initialize
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           	psect	text5
   589   00FCB8                     __ptext5:
   590                           	callstack 0
   591   00FCB8                     _OSCILLATOR_Initialize:
   592                           	callstack 29
   593   00FCB8                     
   594                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
   595   00FCB8  0E60               	movlw	96
   596   00FCBA  6ED3               	movwf	211,c	;volatile
   597                           
   598                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
   599   00FCBC  0E00               	movlw	0
   600   00FCBE  6E9B               	movwf	155,c	;volatile
   601   00FCC0  0012               	return		;funcret
   602   00FCC2                     __end_of_OSCILLATOR_Initialize:
   603                           	callstack 0
   604                           
   605 ;; *************** function _ADC_Initialize *****************
   606 ;; Defined at:
   607 ;;		line 62 in file "mcc_generated_files/adc.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;		None
   610 ;; Auto vars:     Size  Location     Type
   611 ;;		None
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg, status,2
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;Total ram usage:        0 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_SYSTEM_Initialize
   631 ;; This function uses a non-reentrant model
   632 ;;
   633                           
   634                           	psect	text6
   635   00FCF4                     __ptext6:
   636                           	callstack 0
   637   00FCF4                     _ADC_Initialize:
   638                           	callstack 29
   639   00FCF4                     
   640                           ;mcc_generated_files/adc.c: 67:     ADCON1 = 0x00;
   641   00FCF4  0E00               	movlw	0
   642   00FCF6  6EC1               	movwf	193,c	;volatile
   643                           
   644                           ;mcc_generated_files/adc.c: 70:     ADCON2 = 0x00;
   645   00FCF8  0E00               	movlw	0
   646   00FCFA  6EC0               	movwf	192,c	;volatile
   647                           
   648                           ;mcc_generated_files/adc.c: 73:     ADRESL = 0x00;
   649   00FCFC  0E00               	movlw	0
   650   00FCFE  6EC3               	movwf	195,c	;volatile
   651                           
   652                           ;mcc_generated_files/adc.c: 76:     ADRESH = 0x00;
   653   00FD00  0E00               	movlw	0
   654   00FD02  6EC4               	movwf	196,c	;volatile
   655                           
   656                           ;mcc_generated_files/adc.c: 79:     ADCON0 = 0x01;
   657   00FD04  0E01               	movlw	1
   658   00FD06  6EC2               	movwf	194,c	;volatile
   659   00FD08  0012               	return		;funcret
   660   00FD0A                     __end_of_ADC_Initialize:
   661                           	callstack 0
   662                           
   663 ;; *************** function _PWM2_LoadDutyValue *****************
   664 ;; Defined at:
   665 ;;		line 80 in file "mcc_generated_files/pwm2.c"
   666 ;; Parameters:    Size  Location     Type
   667 ;;  dutyValue       2    6[COMRAM] unsigned short 
   668 ;; Auto vars:     Size  Location     Type
   669 ;;		None
   670 ;; Return value:  Size  Location     Type
   671 ;;                  1    wreg      void 
   672 ;; Registers used:
   673 ;;		wreg, status,2, status,0
   674 ;; Tracked objects:
   675 ;;		On entry : 0/0
   676 ;;		On exit  : 0/0
   677 ;;		Unchanged: 0/0
   678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   679 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   681 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   682 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   683 ;;Total ram usage:        4 bytes
   684 ;; Hardware stack levels used: 1
   685 ;; This function calls:
   686 ;;		Nothing
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text7
   693   00FD74                     __ptext7:
   694                           	callstack 0
   695   00FD74                     _PWM2_LoadDutyValue:
   696                           	callstack 30
   697   00FD74                     
   698                           ;mcc_generated_files/pwm2.c: 80: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 81: {;mcc_generated_files/pwm2.c: 83:     CCPR2L = ((dutyValue & 0x03FC
      +                          )>>2);
   699   00FD74  C013  F015         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
   700   00FD78  C014  F016         	movff	PWM2_LoadDutyValue@dutyValue+1,??_PWM2_LoadDutyValue+1
   701   00FD7C  90D8               	bcf	status,0,c
   702   00FD7E  3216               	rrcf	(??_PWM2_LoadDutyValue+1)^0,f,c
   703   00FD80  3215               	rrcf	??_PWM2_LoadDutyValue^0,f,c
   704   00FD82  90D8               	bcf	status,0,c
   705   00FD84  3216               	rrcf	(??_PWM2_LoadDutyValue+1)^0,f,c
   706   00FD86  3215               	rrcf	??_PWM2_LoadDutyValue^0,f,c
   707   00FD88  5015               	movf	??_PWM2_LoadDutyValue^0,w,c
   708   00FD8A  6EBB               	movwf	187,c	;volatile
   709                           
   710                           ;mcc_generated_files/pwm2.c: 86:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
   711   00FD8C  C013  F015         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
   712   00FD90  0E03               	movlw	3
   713   00FD92  1615               	andwf	??_PWM2_LoadDutyValue^0,f,c
   714   00FD94  3A15               	swapf	??_PWM2_LoadDutyValue^0,f,c
   715   00FD96  0EF0               	movlw	240
   716   00FD98  1615               	andwf	??_PWM2_LoadDutyValue^0,f,c
   717   00FD9A  50BA               	movf	186,w,c	;volatile
   718   00FD9C  0BCF               	andlw	207
   719   00FD9E  1015               	iorwf	??_PWM2_LoadDutyValue^0,w,c
   720   00FDA0  6EBA               	movwf	186,c	;volatile
   721   00FDA2  0012               	return		;funcret
   722   00FDA4                     __end_of_PWM2_LoadDutyValue:
   723                           	callstack 0
   724                           
   725 ;; *************** function _ConvertADCVoltage *****************
   726 ;; Defined at:
   727 ;;		line 55 in file "main.c"
   728 ;; Parameters:    Size  Location     Type
   729 ;;  adc_conv_dat    2    7[COMRAM] unsigned int 
   730 ;; Auto vars:     Size  Location     Type
   731 ;;		None
   732 ;; Return value:  Size  Location     Type
   733 ;;                  1    wreg      void 
   734 ;; Registers used:
   735 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   736 ;; Tracked objects:
   737 ;;		On entry : 0/0
   738 ;;		On exit  : 0/0
   739 ;;		Unchanged: 0/0
   740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   741 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   743 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   744 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   745 ;;Total ram usage:        2 bytes
   746 ;; Hardware stack levels used: 1
   747 ;; Hardware stack levels required when called: 1
   748 ;; This function calls:
   749 ;;		___lwdiv
   750 ;;		___lwmod
   751 ;;		___wmul
   752 ;; This function is called by:
   753 ;;		_main
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757                           	psect	text8
   758   00FF56                     __ptext8:
   759                           	callstack 0
   760   00FF56                     _ConvertADCVoltage:
   761                           	callstack 29
   762   00FF56                     
   763                           ;main.c: 55: void ConvertADCVoltage ( unsigned int adc_conv_data );main.c: 56: {;main.c:
      +                           57:     adcVoltValue = (((50000)/(1024))*adc_conv_data);
   764   00FF56  C014  F00D         	movff	ConvertADCVoltage@adc_conv_data,___wmul@multiplier
   765   00FF5A  C015  F00E         	movff	ConvertADCVoltage@adc_conv_data+1,___wmul@multiplier+1
   766   00FF5E  0E00               	movlw	0
   767   00FF60  6E10               	movwf	(___wmul@multiplicand+1)^0,c
   768   00FF62  0E30               	movlw	48
   769   00FF64  6E0F               	movwf	___wmul@multiplicand^0,c
   770   00FF66  ECA7  F07E         	call	___wmul	;wreg free
   771   00FF6A  C00D  F005         	movff	?___wmul,_adcVoltValue
   772   00FF6E  C00E  F006         	movff	?___wmul+1,_adcVoltValue+1
   773   00FF72                     
   774                           ;main.c: 59:     adones = adcVoltValue/10000;
   775   00FF72  C005  F00D         	movff	_adcVoltValue,___lwdiv@dividend
   776   00FF76  C006  F00E         	movff	_adcVoltValue+1,___lwdiv@dividend+1
   777   00FF7A  0E27               	movlw	39
   778   00FF7C  6E10               	movwf	(___lwdiv@divisor+1)^0,c
   779   00FF7E  0E10               	movlw	16
   780   00FF80  6E0F               	movwf	___lwdiv@divisor^0,c
   781   00FF82  EC71  F07F         	call	___lwdiv	;wreg free
   782   00FF86  C00D  F00B         	movff	?___lwdiv,_adones
   783   00FF8A  C00E  F00C         	movff	?___lwdiv+1,_adones+1
   784   00FF8E                     
   785                           ;main.c: 61:     adtenth = adcVoltValue/1000;
   786   00FF8E  C005  F00D         	movff	_adcVoltValue,___lwdiv@dividend
   787   00FF92  C006  F00E         	movff	_adcVoltValue+1,___lwdiv@dividend+1
   788   00FF96  0E03               	movlw	3
   789   00FF98  6E10               	movwf	(___lwdiv@divisor+1)^0,c
   790   00FF9A  0EE8               	movlw	232
   791   00FF9C  6E0F               	movwf	___lwdiv@divisor^0,c
   792   00FF9E  EC71  F07F         	call	___lwdiv	;wreg free
   793   00FFA2  C00D  F009         	movff	?___lwdiv,_adtenth
   794   00FFA6  C00E  F00A         	movff	?___lwdiv+1,_adtenth+1
   795   00FFAA                     
   796                           ;main.c: 62:     adtenth = adtenth%10;
   797   00FFAA  C009  F00D         	movff	_adtenth,___lwmod@dividend
   798   00FFAE  C00A  F00E         	movff	_adtenth+1,___lwmod@dividend+1
   799   00FFB2  0E00               	movlw	0
   800   00FFB4  6E10               	movwf	(___lwmod@divisor+1)^0,c
   801   00FFB6  0E0A               	movlw	10
   802   00FFB8  6E0F               	movwf	___lwmod@divisor^0,c
   803   00FFBA  EC07  F07F         	call	___lwmod	;wreg free
   804   00FFBE  C00D  F009         	movff	?___lwmod,_adtenth
   805   00FFC2  C00E  F00A         	movff	?___lwmod+1,_adtenth+1
   806   00FFC6                     
   807                           ;main.c: 64:     adhundredth = adcVoltValue/100;
   808   00FFC6  C005  F00D         	movff	_adcVoltValue,___lwdiv@dividend
   809   00FFCA  C006  F00E         	movff	_adcVoltValue+1,___lwdiv@dividend+1
   810   00FFCE  0E00               	movlw	0
   811   00FFD0  6E10               	movwf	(___lwdiv@divisor+1)^0,c
   812   00FFD2  0E64               	movlw	100
   813   00FFD4  6E0F               	movwf	___lwdiv@divisor^0,c
   814   00FFD6  EC71  F07F         	call	___lwdiv	;wreg free
   815   00FFDA  C00D  F007         	movff	?___lwdiv,_adhundredth
   816   00FFDE  C00E  F008         	movff	?___lwdiv+1,_adhundredth+1
   817   00FFE2                     
   818                           ;main.c: 65:     adhundredth = adhundredth%10;
   819   00FFE2  C007  F00D         	movff	_adhundredth,___lwmod@dividend
   820   00FFE6  C008  F00E         	movff	_adhundredth+1,___lwmod@dividend+1
   821   00FFEA  0E00               	movlw	0
   822   00FFEC  6E10               	movwf	(___lwmod@divisor+1)^0,c
   823   00FFEE  0E0A               	movlw	10
   824   00FFF0  6E0F               	movwf	___lwmod@divisor^0,c
   825   00FFF2  EC07  F07F         	call	___lwmod	;wreg free
   826   00FFF6  C00D  F007         	movff	?___lwmod,_adhundredth
   827   00FFFA  C00E  F008         	movff	?___lwmod+1,_adhundredth+1
   828   00FFFE  0012               	return		;funcret
   829   010000                     __end_of_ConvertADCVoltage:
   830                           	callstack 0
   831                           
   832 ;; *************** function ___wmul *****************
   833 ;; Defined at:
   834 ;;		line 15 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  multiplier      2    0[COMRAM] unsigned int 
   837 ;;  multiplicand    2    2[COMRAM] unsigned int 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  product         2    4[COMRAM] unsigned int 
   840 ;; Return value:  Size  Location     Type
   841 ;;                  2    0[COMRAM] unsigned int 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, prodl, prodh
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   849 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   850 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;Total ram usage:        6 bytes
   854 ;; Hardware stack levels used: 1
   855 ;; This function calls:
   856 ;;		Nothing
   857 ;; This function is called by:
   858 ;;		_ConvertADCVoltage
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text9
   864   00FD4E                     __ptext9:
   865                           	callstack 0
   866   00FD4E                     ___wmul:
   867                           	callstack 30
   868   00FD4E  500D               	movf	___wmul@multiplier^0,w,c
   869   00FD50  020F               	mulwf	___wmul@multiplicand^0,c
   870   00FD52  CFF3 F011          	movff	prodl,___wmul@product
   871   00FD56  CFF4 F012          	movff	prodh,___wmul@product+1
   872   00FD5A  500D               	movf	___wmul@multiplier^0,w,c
   873   00FD5C  0210               	mulwf	(___wmul@multiplicand+1)^0,c
   874   00FD5E  50F3               	movf	243,w,c
   875   00FD60  2612               	addwf	(___wmul@product+1)^0,f,c
   876   00FD62  500E               	movf	(___wmul@multiplier+1)^0,w,c
   877   00FD64  020F               	mulwf	___wmul@multiplicand^0,c
   878   00FD66  50F3               	movf	243,w,c
   879   00FD68  2612               	addwf	(___wmul@product+1)^0,f,c
   880   00FD6A  C011  F00D         	movff	___wmul@product,?___wmul
   881   00FD6E  C012  F00E         	movff	___wmul@product+1,?___wmul+1
   882   00FD72  0012               	return		;funcret
   883   00FD74                     __end_of___wmul:
   884                           	callstack 0
   885                           
   886 ;; *************** function ___lwmod *****************
   887 ;; Defined at:
   888 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwmod.c"
   889 ;; Parameters:    Size  Location     Type
   890 ;;  dividend        2    0[COMRAM] unsigned int 
   891 ;;  divisor         2    2[COMRAM] unsigned int 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  counter         1    4[COMRAM] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  2    0[COMRAM] unsigned int 
   896 ;; Registers used:
   897 ;;		wreg, status,2, status,0
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   903 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   904 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   906 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   907 ;;Total ram usage:        5 bytes
   908 ;; Hardware stack levels used: 1
   909 ;; This function calls:
   910 ;;		Nothing
   911 ;; This function is called by:
   912 ;;		_ConvertADCVoltage
   913 ;; This function uses a non-reentrant model
   914 ;;
   915                           
   916                           	psect	text10
   917   00FE0E                     __ptext10:
   918                           	callstack 0
   919   00FE0E                     ___lwmod:
   920                           	callstack 29
   921   00FE0E  500F               	movf	___lwmod@divisor^0,w,c
   922   00FE10  1010               	iorwf	(___lwmod@divisor+1)^0,w,c
   923   00FE12  B4D8               	btfsc	status,2,c
   924   00FE14  EF0E  F07F         	goto	u161
   925   00FE18  EF10  F07F         	goto	u160
   926   00FE1C                     u161:
   927   00FE1C  EF34  F07F         	goto	l680
   928   00FE20                     u160:
   929   00FE20  0E01               	movlw	1
   930   00FE22  6E11               	movwf	___lwmod@counter^0,c
   931   00FE24  EF18  F07F         	goto	l1026
   932   00FE28                     l1024:
   933   00FE28  90D8               	bcf	status,0,c
   934   00FE2A  360F               	rlcf	___lwmod@divisor^0,f,c
   935   00FE2C  3610               	rlcf	(___lwmod@divisor+1)^0,f,c
   936   00FE2E  2A11               	incf	___lwmod@counter^0,f,c
   937   00FE30                     l1026:
   938   00FE30  AE10               	btfss	(___lwmod@divisor+1)^0,7,c
   939   00FE32  EF1D  F07F         	goto	u171
   940   00FE36  EF1F  F07F         	goto	u170
   941   00FE3A                     u171:
   942   00FE3A  EF14  F07F         	goto	l1024
   943   00FE3E                     u170:
   944   00FE3E                     l1028:
   945   00FE3E  500F               	movf	___lwmod@divisor^0,w,c
   946   00FE40  5C0D               	subwf	___lwmod@dividend^0,w,c
   947   00FE42  5010               	movf	(___lwmod@divisor+1)^0,w,c
   948   00FE44  580E               	subwfb	(___lwmod@dividend+1)^0,w,c
   949   00FE46  A0D8               	btfss	status,0,c
   950   00FE48  EF28  F07F         	goto	u181
   951   00FE4C  EF2A  F07F         	goto	u180
   952   00FE50                     u181:
   953   00FE50  EF2E  F07F         	goto	l1032
   954   00FE54                     u180:
   955   00FE54  500F               	movf	___lwmod@divisor^0,w,c
   956   00FE56  5E0D               	subwf	___lwmod@dividend^0,f,c
   957   00FE58  5010               	movf	(___lwmod@divisor+1)^0,w,c
   958   00FE5A  5A0E               	subwfb	(___lwmod@dividend+1)^0,f,c
   959   00FE5C                     l1032:
   960   00FE5C  90D8               	bcf	status,0,c
   961   00FE5E  3210               	rrcf	(___lwmod@divisor+1)^0,f,c
   962   00FE60  320F               	rrcf	___lwmod@divisor^0,f,c
   963   00FE62  2E11               	decfsz	___lwmod@counter^0,f,c
   964   00FE64  EF1F  F07F         	goto	l1028
   965   00FE68                     l680:
   966   00FE68  C00D  F00D         	movff	___lwmod@dividend,?___lwmod
   967   00FE6C  C00E  F00E         	movff	___lwmod@dividend+1,?___lwmod+1
   968   00FE70  0012               	return		;funcret
   969   00FE72                     __end_of___lwmod:
   970                           	callstack 0
   971                           
   972 ;; *************** function ___lwdiv *****************
   973 ;; Defined at:
   974 ;;		line 7 in file "E:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\lwdiv.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  dividend        2    0[COMRAM] unsigned int 
   977 ;;  divisor         2    2[COMRAM] unsigned int 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  quotient        2    4[COMRAM] unsigned int 
   980 ;;  counter         1    6[COMRAM] unsigned char 
   981 ;; Return value:  Size  Location     Type
   982 ;;                  2    0[COMRAM] unsigned int 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0
   985 ;; Tracked objects:
   986 ;;		On entry : 0/0
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   990 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;Total ram usage:        7 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; This function calls:
   997 ;;		Nothing
   998 ;; This function is called by:
   999 ;;		_ConvertADCVoltage
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text11
  1004   00FEE2                     __ptext11:
  1005                           	callstack 0
  1006   00FEE2                     ___lwdiv:
  1007                           	callstack 29
  1008   00FEE2  0E00               	movlw	0
  1009   00FEE4  6E12               	movwf	(___lwdiv@quotient+1)^0,c
  1010   00FEE6  0E00               	movlw	0
  1011   00FEE8  6E11               	movwf	___lwdiv@quotient^0,c
  1012   00FEEA  500F               	movf	___lwdiv@divisor^0,w,c
  1013   00FEEC  1010               	iorwf	(___lwdiv@divisor+1)^0,w,c
  1014   00FEEE  B4D8               	btfsc	status,2,c
  1015   00FEF0  EF7C  F07F         	goto	u131
  1016   00FEF4  EF7E  F07F         	goto	u130
  1017   00FEF8                     u131:
  1018   00FEF8  EFA6  F07F         	goto	l670
  1019   00FEFC                     u130:
  1020   00FEFC  0E01               	movlw	1
  1021   00FEFE  6E13               	movwf	___lwdiv@counter^0,c
  1022   00FF00  EF86  F07F         	goto	l1006
  1023   00FF04                     l1004:
  1024   00FF04  90D8               	bcf	status,0,c
  1025   00FF06  360F               	rlcf	___lwdiv@divisor^0,f,c
  1026   00FF08  3610               	rlcf	(___lwdiv@divisor+1)^0,f,c
  1027   00FF0A  2A13               	incf	___lwdiv@counter^0,f,c
  1028   00FF0C                     l1006:
  1029   00FF0C  AE10               	btfss	(___lwdiv@divisor+1)^0,7,c
  1030   00FF0E  EF8B  F07F         	goto	u141
  1031   00FF12  EF8D  F07F         	goto	u140
  1032   00FF16                     u141:
  1033   00FF16  EF82  F07F         	goto	l1004
  1034   00FF1A                     u140:
  1035   00FF1A                     l1008:
  1036   00FF1A  90D8               	bcf	status,0,c
  1037   00FF1C  3611               	rlcf	___lwdiv@quotient^0,f,c
  1038   00FF1E  3612               	rlcf	(___lwdiv@quotient+1)^0,f,c
  1039   00FF20  500F               	movf	___lwdiv@divisor^0,w,c
  1040   00FF22  5C0D               	subwf	___lwdiv@dividend^0,w,c
  1041   00FF24  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  1042   00FF26  580E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  1043   00FF28  A0D8               	btfss	status,0,c
  1044   00FF2A  EF99  F07F         	goto	u151
  1045   00FF2E  EF9B  F07F         	goto	u150
  1046   00FF32                     u151:
  1047   00FF32  EFA0  F07F         	goto	l1016
  1048   00FF36                     u150:
  1049   00FF36  500F               	movf	___lwdiv@divisor^0,w,c
  1050   00FF38  5E0D               	subwf	___lwdiv@dividend^0,f,c
  1051   00FF3A  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  1052   00FF3C  5A0E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  1053   00FF3E  8011               	bsf	___lwdiv@quotient^0,0,c
  1054   00FF40                     l1016:
  1055   00FF40  90D8               	bcf	status,0,c
  1056   00FF42  3210               	rrcf	(___lwdiv@divisor+1)^0,f,c
  1057   00FF44  320F               	rrcf	___lwdiv@divisor^0,f,c
  1058   00FF46  2E13               	decfsz	___lwdiv@counter^0,f,c
  1059   00FF48  EF8D  F07F         	goto	l1008
  1060   00FF4C                     l670:
  1061   00FF4C  C011  F00D         	movff	___lwdiv@quotient,?___lwdiv
  1062   00FF50  C012  F00E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1063   00FF54  0012               	return		;funcret
  1064   00FF56                     __end_of___lwdiv:
  1065                           	callstack 0
  1066                           
  1067 ;; *************** function _ADC_StartConversion *****************
  1068 ;; Defined at:
  1069 ;;		line 91 in file "mcc_generated_files/adc.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;		None
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;		None
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		None
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;Total ram usage:        0 bytes
  1088 ;; Hardware stack levels used: 1
  1089 ;; This function calls:
  1090 ;;		Nothing
  1091 ;; This function is called by:
  1092 ;;		_main
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           	psect	text12
  1097   00FCB4                     __ptext12:
  1098                           	callstack 0
  1099   00FCB4                     _ADC_StartConversion:
  1100                           	callstack 30
  1101   00FCB4                     
  1102                           ;mcc_generated_files/adc.c: 94:     ADCON0bits.GO_nDONE = 1;
  1103   00FCB4  82C2               	bsf	194,1,c	;volatile
  1104   00FCB6  0012               	return		;funcret
  1105   00FCB8                     __end_of_ADC_StartConversion:
  1106                           	callstack 0
  1107                           
  1108 ;; *************** function _ADC_SelectChannel *****************
  1109 ;; Defined at:
  1110 ;;		line 83 in file "mcc_generated_files/adc.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  channel         1    wreg     enum E2727
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  channel         1    1[COMRAM] enum E2727
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1124 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1126 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1127 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels used: 1
  1130 ;; This function calls:
  1131 ;;		Nothing
  1132 ;; This function is called by:
  1133 ;;		_main
  1134 ;; This function uses a non-reentrant model
  1135 ;;
  1136                           
  1137                           	psect	text13
  1138   00FD36                     __ptext13:
  1139                           	callstack 0
  1140   00FD36                     _ADC_SelectChannel:
  1141                           	callstack 30
  1142                           
  1143                           ;incstack = 0
  1144                           ;ADC_SelectChannel@channel stored from wreg
  1145   00FD36  6E0E               	movwf	ADC_SelectChannel@channel^0,c
  1146   00FD38                     
  1147                           ;mcc_generated_files/adc.c: 83: void ADC_SelectChannel(adc_channel_t channel);mcc_genera
      +                          ted_files/adc.c: 84: {;mcc_generated_files/adc.c: 86:     ADCON0bits.CHS = channel;
  1148   00FD38  C00E  F00D         	movff	ADC_SelectChannel@channel,??_ADC_SelectChannel
  1149   00FD3C  460D               	rlncf	??_ADC_SelectChannel^0,f,c
  1150   00FD3E  460D               	rlncf	??_ADC_SelectChannel^0,f,c
  1151   00FD40  50C2               	movf	194,w,c	;volatile
  1152   00FD42  180D               	xorwf	??_ADC_SelectChannel^0,w,c
  1153   00FD44  0BC3               	andlw	-61
  1154   00FD46  180D               	xorwf	??_ADC_SelectChannel^0,w,c
  1155   00FD48  6EC2               	movwf	194,c	;volatile
  1156   00FD4A                     
  1157                           ;mcc_generated_files/adc.c: 88:     ADCON0bits.ADON = 1;
  1158   00FD4A  80C2               	bsf	194,0,c	;volatile
  1159   00FD4C  0012               	return		;funcret
  1160   00FD4E                     __end_of_ADC_SelectChannel:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _ADC_IsConversionDone *****************
  1164 ;; Defined at:
  1165 ;;		line 98 in file "mcc_generated_files/adc.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;		None
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      _Bool 
  1172 ;; Registers used:
  1173 ;;		wreg
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1183 ;;Total ram usage:        0 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; This function calls:
  1186 ;;		Nothing
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           	psect	text14
  1193   00FCE0                     __ptext14:
  1194                           	callstack 0
  1195   00FCE0                     _ADC_IsConversionDone:
  1196                           	callstack 30
  1197   00FCE0                     
  1198                           ;mcc_generated_files/adc.c: 101:     return ((_Bool)(!ADCON0bits.GO_nDONE));
  1199   00FCE0  A2C2               	btfss	194,1,c	;volatile
  1200   00FCE2  EF75  F07E         	goto	u71
  1201   00FCE6  EF78  F07E         	goto	u70
  1202   00FCEA                     u71:
  1203   00FCEA  0E01               	movlw	1
  1204   00FCEC  EF79  F07E         	goto	u80
  1205   00FCF0                     u70:
  1206   00FCF0  0E00               	movlw	0
  1207   00FCF2                     u80:
  1208   00FCF2  0012               	return		;funcret
  1209   00FCF4                     __end_of_ADC_IsConversionDone:
  1210                           	callstack 0
  1211                           
  1212 ;; *************** function _ADC_GetConversion *****************
  1213 ;; Defined at:
  1214 ;;		line 110 in file "mcc_generated_files/adc.c"
  1215 ;; Parameters:    Size  Location     Type
  1216 ;;  channel         1    wreg     enum E2727
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  channel         1    4[COMRAM] enum E2727
  1219 ;; Return value:  Size  Location     Type
  1220 ;;                  2    0[COMRAM] unsigned short 
  1221 ;; Registers used:
  1222 ;;		wreg, status,2, status,0
  1223 ;; Tracked objects:
  1224 ;;		On entry : 0/0
  1225 ;;		On exit  : 0/0
  1226 ;;		Unchanged: 0/0
  1227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1228 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1229 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1230 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1231 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;Total ram usage:        5 bytes
  1233 ;; Hardware stack levels used: 1
  1234 ;; This function calls:
  1235 ;;		Nothing
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           
  1241                           	psect	text15
  1242   00FDD4                     __ptext15:
  1243                           	callstack 0
  1244   00FDD4                     _ADC_GetConversion:
  1245                           	callstack 30
  1246                           
  1247                           ;incstack = 0
  1248                           ;ADC_GetConversion@channel stored from wreg
  1249   00FDD4  6E11               	movwf	ADC_GetConversion@channel^0,c
  1250   00FDD6                     
  1251                           ;mcc_generated_files/adc.c: 110: adc_result_t ADC_GetConversion(adc_channel_t channel);m
      +                          cc_generated_files/adc.c: 111: {;mcc_generated_files/adc.c: 113:     ADCON0bits.CHS = ch
      +                          annel;
  1252   00FDD6  C011  F00F         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  1253   00FDDA  460F               	rlncf	??_ADC_GetConversion^0,f,c
  1254   00FDDC  460F               	rlncf	??_ADC_GetConversion^0,f,c
  1255   00FDDE  50C2               	movf	194,w,c	;volatile
  1256   00FDE0  180F               	xorwf	??_ADC_GetConversion^0,w,c
  1257   00FDE2  0BC3               	andlw	-61
  1258   00FDE4  180F               	xorwf	??_ADC_GetConversion^0,w,c
  1259   00FDE6  6EC2               	movwf	194,c	;volatile
  1260   00FDE8                     
  1261                           ;mcc_generated_files/adc.c: 116:     ADCON0bits.ADON = 1;
  1262   00FDE8  80C2               	bsf	194,0,c	;volatile
  1263   00FDEA                     
  1264                           ;mcc_generated_files/adc.c: 119:     ADCON0bits.GO_nDONE = 1;
  1265   00FDEA  82C2               	bsf	194,1,c	;volatile
  1266   00FDEC                     l170:
  1267                           
  1268                           ;mcc_generated_files/adc.c: 122:     while (ADCON0bits.GO_nDONE)
  1269   00FDEC  B2C2               	btfsc	194,1,c	;volatile
  1270   00FDEE  EFFB  F07E         	goto	u191
  1271   00FDF2  EFFD  F07E         	goto	u190
  1272   00FDF6                     u191:
  1273   00FDF6  EFF6  F07E         	goto	l170
  1274   00FDFA                     u190:
  1275   00FDFA                     
  1276                           ;mcc_generated_files/adc.c: 127:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  1277   00FDFA  50C4               	movf	196,w,c	;volatile
  1278   00FDFC  6E10               	movwf	(??_ADC_GetConversion+1)^0,c
  1279   00FDFE  6A0F               	clrf	??_ADC_GetConversion^0,c
  1280   00FE00  50C3               	movf	195,w,c	;volatile
  1281   00FE02  240F               	addwf	??_ADC_GetConversion^0,w,c
  1282   00FE04  6E0D               	movwf	?_ADC_GetConversion^0,c
  1283   00FE06  0E00               	movlw	0
  1284   00FE08  2010               	addwfc	(??_ADC_GetConversion+1)^0,w,c
  1285   00FE0A  6E0E               	movwf	(?_ADC_GetConversion+1)^0,c
  1286   00FE0C  0012               	return		;funcret
  1287   00FE0E                     __end_of_ADC_GetConversion:
  1288                           	callstack 0
  1289   000000                     
  1290                           	psect	rparam
  1291   000000                     
  1292                           	psect	idloc
  1293                           
  1294                           ;Config register IDLOC0 @ 0x200000
  1295                           ;	unspecified, using default values
  1296   200000                     	org	2097152
  1297   200000  FF                 	db	255
  1298                           
  1299                           ;Config register IDLOC1 @ 0x200001
  1300                           ;	unspecified, using default values
  1301   200001                     	org	2097153
  1302   200001  FF                 	db	255
  1303                           
  1304                           ;Config register IDLOC2 @ 0x200002
  1305                           ;	unspecified, using default values
  1306   200002                     	org	2097154
  1307   200002  FF                 	db	255
  1308                           
  1309                           ;Config register IDLOC3 @ 0x200003
  1310                           ;	unspecified, using default values
  1311   200003                     	org	2097155
  1312   200003  FF                 	db	255
  1313                           
  1314                           ;Config register IDLOC4 @ 0x200004
  1315                           ;	unspecified, using default values
  1316   200004                     	org	2097156
  1317   200004  FF                 	db	255
  1318                           
  1319                           ;Config register IDLOC5 @ 0x200005
  1320                           ;	unspecified, using default values
  1321   200005                     	org	2097157
  1322   200005  FF                 	db	255
  1323                           
  1324                           ;Config register IDLOC6 @ 0x200006
  1325                           ;	unspecified, using default values
  1326   200006                     	org	2097158
  1327   200006  FF                 	db	255
  1328                           
  1329                           ;Config register IDLOC7 @ 0x200007
  1330                           ;	unspecified, using default values
  1331   200007                     	org	2097159
  1332   200007  FF                 	db	255
  1333                           
  1334                           	psect	config
  1335                           
  1336                           ; Padding undefined space
  1337   300000                     	org	3145728
  1338   300000  FF                 	db	255
  1339                           
  1340                           ;Config register CONFIG1H @ 0x300001
  1341                           ;	Oscillator Selection bits
  1342                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  1343                           ;	Fail-Safe Clock Monitor Enable bit
  1344                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1345                           ;	Internal/External Oscillator Switchover bit
  1346                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1347   300001                     	org	3145729
  1348   300001  08                 	db	8
  1349                           
  1350                           ;Config register CONFIG2L @ 0x300002
  1351                           ;	Power-up Timer Enable bit
  1352                           ;	PWRTEN = OFF, PWRT disabled
  1353                           ;	Brown-out Reset Enable bits
  1354                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  1355                           ;	Brown Out Reset Voltage bits
  1356                           ;	BORV = 18, VBOR set to 1.8 V nominal
  1357   300002                     	org	3145730
  1358   300002  1F                 	db	31
  1359                           
  1360                           ;Config register CONFIG2H @ 0x300003
  1361                           ;	Watchdog Timer Enable bit
  1362                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  1363                           ;	Watchdog Timer Postscale Select bits
  1364                           ;	WDTPS = 32768, 1:32768
  1365   300003                     	org	3145731
  1366   300003  1E                 	db	30
  1367                           
  1368                           ; Padding undefined space
  1369   300004                     	org	3145732
  1370   300004  FF                 	db	255
  1371                           
  1372                           ;Config register CONFIG3H @ 0x300005
  1373                           ;	CCP2 MUX bit
  1374                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  1375                           ;	PORTB A/D Enable bit
  1376                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  1377                           ;	Low-Power Timer1 Oscillator Enable bit
  1378                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  1379                           ;	HFINTOSC Fast Start-up
  1380                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  1381                           ;	MCLR Pin Enable bit
  1382                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1383   300005                     	org	3145733
  1384   300005  8B                 	db	139
  1385                           
  1386                           ;Config register CONFIG4L @ 0x300006
  1387                           ;	Stack Full/Underflow Reset Enable bit
  1388                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1389                           ;	Single-Supply ICSP Enable bit
  1390                           ;	LVP = ON, Single-Supply ICSP enabled
  1391                           ;	Extended Instruction Set Enable bit
  1392                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  1393                           ;	Background Debugger Enable bit
  1394                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  1395   300006                     	org	3145734
  1396   300006  85                 	db	133
  1397                           
  1398                           ; Padding undefined space
  1399   300007                     	org	3145735
  1400   300007  FF                 	db	255
  1401                           
  1402                           ;Config register CONFIG5L @ 0x300008
  1403                           ;	Code Protection Block 0
  1404                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  1405                           ;	Code Protection Block 1
  1406                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  1407                           ;	Code Protection Block 2
  1408                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  1409                           ;	Code Protection Block 3
  1410                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  1411   300008                     	org	3145736
  1412   300008  0F                 	db	15
  1413                           
  1414                           ;Config register CONFIG5H @ 0x300009
  1415                           ;	Boot Block Code Protection bit
  1416                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  1417                           ;	Data EEPROM Code Protection bit
  1418                           ;	CPD = OFF, Data EEPROM not code-protected
  1419   300009                     	org	3145737
  1420   300009  C0                 	db	192
  1421                           
  1422                           ;Config register CONFIG6L @ 0x30000A
  1423                           ;	Write Protection Block 0
  1424                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  1425                           ;	Write Protection Block 1
  1426                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  1427                           ;	Write Protection Block 2
  1428                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  1429                           ;	Write Protection Block 3
  1430                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  1431   30000A                     	org	3145738
  1432   30000A  0F                 	db	15
  1433                           
  1434                           ;Config register CONFIG6H @ 0x30000B
  1435                           ;	Configuration Register Write Protection bit
  1436                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  1437                           ;	Boot Block Write Protection bit
  1438                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  1439                           ;	Data EEPROM Write Protection bit
  1440                           ;	WRTD = OFF, Data EEPROM not write-protected
  1441   30000B                     	org	3145739
  1442   30000B  E0                 	db	224
  1443                           
  1444                           ;Config register CONFIG7L @ 0x30000C
  1445                           ;	Table Read Protection Block 0
  1446                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  1447                           ;	Table Read Protection Block 1
  1448                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  1449                           ;	Table Read Protection Block 2
  1450                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  1451                           ;	Table Read Protection Block 3
  1452                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  1453   30000C                     	org	3145740
  1454   30000C  0F                 	db	15
  1455                           
  1456                           ;Config register CONFIG7H @ 0x30000D
  1457                           ;	Boot Block Table Read Protection bit
  1458                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  1459   30000D                     	org	3145741
  1460   30000D  40                 	db	64
  1461                           tosu	equ	0xFFF
  1462                           tosh	equ	0xFFE
  1463                           tosl	equ	0xFFD
  1464                           stkptr	equ	0xFFC
  1465                           pclatu	equ	0xFFB
  1466                           pclath	equ	0xFFA
  1467                           pcl	equ	0xFF9
  1468                           tblptru	equ	0xFF8
  1469                           tblptrh	equ	0xFF7
  1470                           tblptrl	equ	0xFF6
  1471                           tablat	equ	0xFF5
  1472                           prodh	equ	0xFF4
  1473                           prodl	equ	0xFF3
  1474                           indf0	equ	0xFEF
  1475                           postinc0	equ	0xFEE
  1476                           postdec0	equ	0xFED
  1477                           preinc0	equ	0xFEC
  1478                           plusw0	equ	0xFEB
  1479                           fsr0h	equ	0xFEA
  1480                           fsr0l	equ	0xFE9
  1481                           wreg	equ	0xFE8
  1482                           indf1	equ	0xFE7
  1483                           postinc1	equ	0xFE6
  1484                           postdec1	equ	0xFE5
  1485                           preinc1	equ	0xFE4
  1486                           plusw1	equ	0xFE3
  1487                           fsr1h	equ	0xFE2
  1488                           fsr1l	equ	0xFE1
  1489                           bsr	equ	0xFE0
  1490                           indf2	equ	0xFDF
  1491                           postinc2	equ	0xFDE
  1492                           postdec2	equ	0xFDD
  1493                           preinc2	equ	0xFDC
  1494                           plusw2	equ	0xFDB
  1495                           fsr2h	equ	0xFDA
  1496                           fsr2l	equ	0xFD9
  1497                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 


Critical Paths under _main in COMRAM

    _main->_PWM2_LoadDutyValue
    _PWM2_LoadDutyValue->___wmul
    _ConvertADCVoltage->___lwdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2338
                  _ADC_GetConversion
               _ADC_IsConversionDone
                  _ADC_SelectChannel
                _ADC_StartConversion
                  _ConvertADCVoltage
                 _PWM2_LoadDutyValue
                  _SYSTEM_Initialize
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2_LoadDutyValue                                   4     2      2     196
                                              6 COMRAM     4     2      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _ConvertADCVoltage                                    2     0      2    1642
                                              7 COMRAM     2     0      2
                            ___lwdiv
                            ___lwmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     463
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     618
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _ADC_StartConversion                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_SelectChannel                                    2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADC_IsConversionDone                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_GetConversion                                    5     3      2      22
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetConversion
   _ADC_IsConversionDone
   _ADC_SelectChannel
   _ADC_StartConversion
   _ConvertADCVoltage
     ___lwdiv
     ___lwmod
     ___wmul
   _PWM2_LoadDutyValue
     ___wmul (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _TMR2_Initialize
   ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      49        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      16       1       23.2%
BITBIGSFRhl         1D      0       0      38        0.0%
BITBIGSFRllllll     1C      0       0      48        0.0%
BITBIGSFRlhlhl      1B      0       0      42        0.0%
BITBIGSFRhh          D      0       0      37        0.0%
BITBIGSFRllllh       9      0       0      46        0.0%
BITBIGSFRlhh         6      0       0      39        0.0%
BITBIGSFRlhlhhh      5      0       0      40        0.0%
BITBIGSFRllhh        4      0       0      44        0.0%
BITBIGSFRllhll       4      0       0      45        0.0%
BITBIGSFRlhlhhl      3      0       0      41        0.0%
BITBIGSFRlhll        2      0       0      43        0.0%
BITBIGSFRlllllh      1      0       0      47        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      12        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Sun Aug 27 17:20:08 2023

ConvertADCVoltage@adc_conv_data 0014                              l20 FCC0                              l33 FCDE  
                            l17 FD1E                              l85 FDD2                              u70 FCF0  
                            u71 FCEA                              u80 FCF2             ___wmul@multiplicand 000F  
                           l111 FFFE                             l133 FCCE                             l136 FDA2  
                           l161 FCB6                             l170 FDEC                             l155 FD08  
                           l164 FCF2                             l173 FE0C                             l158 FD4C  
                           l179 FD72                             l670 FF4C                             l680 FE68  
                           l940 FCE0                             l860 FDC6                             l852 FDA4  
                           l677 FF54                             l934 FD38                             l862 FDD0  
                           l854 FDBC                             l870 FCC2                             l918 FD0A  
                           l687 FE70                             l936 FD4A                             l872 FCF4  
                           l864 FCB8                             l856 FDBE                             l938 FCB4  
                           l858 FDC4                             l866 FCD0                             l868 FCD8  
                           l992 FD4E                             l994 FD6A                             l998 FEE2  
                           u200 FEA0                             u201 FE9C                             u130 FEFC  
                           u131 FEF8                             u140 FF1A                             u141 FF16  
                           u150 FF36                             u151 FF32                             u160 FE20  
                           u161 FE1C                             u170 FE3E                             u171 FE3A  
                           u180 FE54                             u181 FE50                             u190 FDFA  
                           _PR2 0FCB                             u191 FDF6                 _TMR2_Initialize FCD0  
                           wreg 0FE8                            l1000 FEEA                            l1010 FF20  
                          l1002 FEFC                            l1012 FF36                            l1004 FF04  
                          l1020 FE0E                            l1014 FF3E                            l1006 FF0C  
                          l1030 FE54                            l1022 FE20                            l1016 FF40  
                          l1008 FF1A                            l1032 FE5C                            l1024 FE28  
                          l1040 FF8E                            l1050 FDD6                            l1018 FF46  
                          l1034 FE62                            l1026 FE30                            l1042 FFAA  
                          l1052 FDE8                            l1028 FE3E                            l1044 FFC6  
                          l1036 FF56                            l1060 FE72                            l1054 FDEA  
                          l1046 FFE2                            l1038 FF72                            l1070 FEA0  
                          l1062 FE76                            l1056 FDFA                            l1048 FD74  
                          l1072 FEAE                            l1064 FE82                            l1074 FEBA  
                          l1066 FE88                            l1068 FE8C                            _LATA 0F89  
                          _LATB 0F8A                            _LATC 0F8B                            _LATD 0F8C  
                          _LATE 0F8D                            _TMR2 0FCC                            _WPUB 0F7C  
                          _main FE72                            prodh 0FF4                            prodl 0FF3  
                          start 0000                    ___param_bank 0000                    _adcVoltValue 0005  
       __end_of_PWM2_Initialize FCD0   __end_of_OSCILLATOR_Initialize FCC2                           ?_main 000D  
                         _ANSEL 0F7E                           _T2CON 0FCA                 __end_of___lwdiv FF56  
               __end_of___lwmod FE72                           _TRISA 0F92                           _TRISB 0F93  
                         _TRISC 0F94                           _TRISD 0F95                           _TRISE 0F96  
                         status 0FD8                 __initialization FD20                    __end_of_main FEE2  
       __end_of_TMR2_Initialize FCE0                          ??_main 0017                   __activetblptr 0002  
                _convertedValue 0003                          _ADCON0 0FC2                          _ADCON1 0FC1  
             _ConvertADCVoltage FF56                          _ADCON2 0FC0                          _ADRESH 0FC4  
                        _ADRESL 0FC3                          _CCPR2H 0FBC                          _CCPR2L 0FBB  
                        _ANSELH 0F7F              ?_ConvertADCVoltage 0014                          _OSCCON 0FD3  
           ??_ConvertADCVoltage 0016                          ___wmul FD4E                          _adones 000B  
                     ??___lwdiv 0011                       ??___lwmod 0011                ?_PWM2_Initialize 000D  
                        clear_0 FD26                          isa$std 0001       __end_of_ConvertADCVoltage 0000  
                        tblptru 0FF8        ADC_GetConversion@channel 0011               _SYSTEM_Initialize FD0A  
                    __accesstop 0060         __end_of__initialization FD2C              ?_SYSTEM_Initialize 000D  
    __end_of_PWM2_LoadDutyValue FDA4                   ___rparam_used 0001                  __pcstackCOMRAM 000D  
           ??_SYSTEM_Initialize 000D                ?_TMR2_Initialize 000D       __end_of_SYSTEM_Initialize FD20  
                       ?___wmul 000D                         _CCP2CON 0FBA                         _OSCTUNE 0F9B  
          _ADC_InterruptHandler 0001                         __Hparam 0000                         __Lparam 0000  
                       ___lwdiv FEE2                         ___lwmod FE0E                         _adtenth 0009  
                       __pcinit FD20                         __ramtop 1000                         __ptext0 FE72  
                       __ptext1 FD0A                         __ptext2 FCD0                         __ptext3 FCC2  
                       __ptext4 FDA4                         __ptext5 FCB8                         __ptext6 FCF4  
                       __ptext7 FD74                         __ptext8 FF56                         __ptext9 FD4E  
         _OSCILLATOR_Initialize FCB8                       _T2CONbits 0FCA        ??_PIN_MANAGER_Initialize 000D  
          end_of_initialization FD2C                   __Lmediumconst 0000    __end_of_ADC_IsConversionDone FCF4  
                       postinc0 0FEE             _ADC_StartConversion FCB4            ?_ADC_StartConversion 000D  
                __end_of___wmul FD74              _PWM2_LoadDutyValue FD74                  _ADC_Initialize FCF4  
        ?_OSCILLATOR_Initialize 000D             start_initialization FD20             ?_PWM2_LoadDutyValue 0013  
         ??_ADC_StartConversion 000D            ??_PWM2_LoadDutyValue 0015     PWM2_LoadDutyValue@dutyValue 0013  
                      ??___wmul 0011          __end_of_ADC_Initialize FD0A                     _adhundredth 0007  
                   __pbssCOMRAM 0001            _ADC_IsConversionDone FCE0                ___lwdiv@dividend 000D  
        _PIN_MANAGER_Initialize FDA4               _ADC_SelectChannel FD36                        ?___lwdiv 000D  
                      ?___lwmod 000D                 ?_ADC_Initialize 000D              ?_ADC_SelectChannel 000D  
           ??_ADC_SelectChannel 000D           ?_ADC_IsConversionDone 000D                ___lwdiv@quotient 0011  
             ??_PWM2_Initialize 000D                  ___wmul@product 0011       __end_of_ADC_SelectChannel FD4E  
                      _PIR1bits 0F9E                      _ADCON0bits 0FC2               ___wmul@multiplier 000D  
      ADC_SelectChannel@channel 000E                     _INTCON2bits 0FF1               ??_TMR2_Initialize 000D  
                      __Hrparam 0000                        __Lrparam 0000               _ADC_GetConversion FDD4  
       ??_OSCILLATOR_Initialize 000D              ?_ADC_GetConversion 000D          ??_ADC_IsConversionDone 000D  
           ??_ADC_GetConversion 000F                 ___lwdiv@divisor 000F                 ___lwdiv@counter 0013  
                      __ptext10 FE0E                        __ptext11 FEE2                        __ptext12 FCB4  
                      __ptext13 FD36                        __ptext14 FCE0                        __ptext15 FDD4  
     __end_of_ADC_GetConversion FE0E                        isa$xinst 0000                      _INTCONbits 0FF2  
   __end_of_ADC_StartConversion FCB8                ___lwmod@dividend 000D         ?_PIN_MANAGER_Initialize 000D  
              ??_ADC_Initialize 000D                 ___lwmod@divisor 000F                 _PWM2_Initialize FCC2  
               ___lwmod@counter 0011  __end_of_PIN_MANAGER_Initialize FDD4  
